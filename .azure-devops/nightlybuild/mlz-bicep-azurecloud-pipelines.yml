# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.


pool:
  vmImage: ubuntu-latest

variables:
  ServiceConnectionName: $(CAzureConnection)  
  hubSubscriptionId: ''
  hubResourceGroupName: ''
  hubVirtualNetworkName: ''
  hubVirtualNetworkResourceId: ''
  logAnalyticsWorkspaceResourceId: ''
  firewallPrivateIPAddress: ''

jobs:
- job: bicepCommercialCloud
  steps:
  - task: AzureCLI@2
    displayName: "Deploy MLZ Bicep"
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az deployment sub create \
          --name $(bDeploymentName) \
          --location $(Location) \
          --template-file $(TemplateFile)
    enabled: false
  - task: AzureCLI@2
    displayName: "Extract Values for T3 Deployment"
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        deploymentoutput=$(az deployment sub show \
        --name $(bDeploymentName) \
        --query '{
        hubSubscriptionId:properties.outputs.hub.value.subscriptionId,
        hubResourceGroupName:properties.outputs.hub.value.resourceGroupName,
        hubVirtualNetworkName:properties.outputs.hub.value.virtualNetworkName,
        hubVirtualNetworkResourceId:properties.outputs.hub.value.virtualNetworkResourceId,
        logAnalyticsWorkspaceResourceId:properties.outputs.logAnalyticsWorkspaceResourceId.value,
        firewallPrivateIPAddress:properties.outputs.firewallPrivateIPAddress.value
        }' -o json)
        read hubSubId < <(echo $deploymentoutput | jq '.hubSubscriptionId')
        read hubRGroupName < <(echo $deploymentoutput | jq '.hubResourceGroupName')
        read hubVNetworkName < <(echo $deploymentoutput | jq '.hubVirtualNetworkName')
        read hubVNetworkResourceId < <(echo $deploymentoutput | jq '.hubVirtualNetworkResourceId')
        read logAWspaceResourceId < <(echo $deploymentoutput | jq '.logAnalyticsWorkspaceResourceId')
        read firewallPrivateIP < <(echo $deploymentoutput | jq '.firewallPrivateIPAddress')
        echo $deploymentoutput | jq '.hubSubscriptionId'
        echo $hubSubId
        echo "##vso[task.setvariable variable=hubSubscriptionId;isOutput=true]$hubSubId"
        echo "##vso[task.setvariable variable=hubResourceGroupName;isOutput=true]$hubRGroupName"
        echo "##vso[task.setvariable variable=hubVirtualNetworkName;isOutput=true]$hubVNetworkName"
        echo "##vso[task.setvariable variable=hubVirtualNetworkResourceId;isOutput=true]$hubVNetworkResourceId"
        echo "##vso[task.setvariable variable=logAnalyticsWorkspaceResourceId;isOutput=true]$logAWspaceResourceId"
        echo "##vso[task.setvariable variable=firewallPrivateIPAddress;isOutput=true]$firewallPrivateIP"
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
            echo $(hubSubscriptionId)
            echo $(hubResourceGroupName)
            echo $(hubVirtualNetworkName)
            echo $(hubVirtualNetworkResourceId)
            echo $(logAnalyticsWorkspaceResourceId)
            echo $(firewallPrivateIPAddress)

  - task: AzureCLI@2
    displayName: "Hydrate Variables for T3 Deployment"
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo $deploymentoutput | jq '.hubSubscriptionId'
        read hubSubId < <(echo $deploymentoutput | jq '.hubSubscriptionId')
        read hubRGroupName < <(echo $deploymentoutput | jq '.hubResourceGroupName')
        read hubVNetworkName < <(echo $deploymentoutput | jq '.hubVirtualNetworkName')
        read hubVNetworkResourceId < <(echo $deploymentoutput | jq '.hubVirtualNetworkResourceId')
        read logAWspaceResourceId < <(echo $deploymentoutput | jq '.logAnalyticsWorkspaceResourceId')
        read firewallPrivateIP < <(echo $deploymentoutput | jq '.firewallPrivateIPAddress')
        echo "##vso[task.setvariable variable=hubSubscriptionId;isOutput=true]'hubSubId'"
        echo "##vso[task.setvariable variable=hubResourceGroupName;isOutput=true]$hubRGroupName"
        echo "##vso[task.setvariable variable=hubVirtualNetworkName;isOutput=true]$hubVNetworkName"
        echo "##vso[task.setvariable variable=hubVirtualNetworkResourceId;isOutput=true]$hubVNetworkResourceId"
        echo "##vso[task.setvariable variable=logAnalyticsWorkspaceResourceId;isOutput=true]$logAWspaceResourceId"
        echo "##vso[task.setvariable variable=firewallPrivateIPAddress;isOutput=true]$firewallPrivateIP"
    enabled: false

  - task: AzureCLI@2
    displayName: "Clean up Subscription Diagnostics Settings"
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'az monitor diagnostic-settings subscription list --query "value[? contains(@.name, ''$1'')].name" -o table  |grep ''mlz''| awk ''{system(" az monitor diagnostic-settings  delete  --resource  ''"/subscriptions/$(subId)"'' --name "$1)}'''
    enabled: false
  - task: AzureCLI@2
    displayName: "Clean up Resources"
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'az group list -o table | grep ''mlz'' | awk ''{system("az group delete -y --no-wait -g "$1)}'''
    enabled: false
