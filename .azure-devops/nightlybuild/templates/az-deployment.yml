# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

parameters:

- name: ServiceConnectionName
  type: string
- name: DeploymentName
  type: string
- name: Location
  type: string
- name: WorkloadSubId
  type: string
- name: WorkloadName
  type: string

steps:

  - task: AzureCLI@2
    displayName: "Deploy MLZ Bicep"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnectionName }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        datetime=$(date +%s) # gets the current date time as an epoch
        az deployment sub create \
          --name ${{ parameters.DeploymentName }} \
          --location ${{ parameters.Location }} \
          --template-file $(Build.SourcesDirectory)/src/bicep/mlz.bicep \
          --parameters resourcePrefix=$datetime

  - task: AzureCLI@2
    displayName: "Generate deploymentVariables.json for all addons and examples"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnectionName }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az deployment sub show \
          --name ${{ parameters.DeploymentName }} \
          --query properties.outputs \
          > $(Build.SourcesDirectory)/src/bicep/examples/deploymentVariables.json

  - task: AzureCLI@2
    displayName: "Extract Values and Hydrate Variables for T3 Deployment"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnectionName }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        deploymentoutput=$(az deployment sub show \
          --name ${{ parameters.DeploymentName }} \
          --query '{
              hubSubId: properties.outputs.hub.value.subscriptionId,
              hubRGroupName: properties.outputs.hub.value.resourceGroupName,
              hubVNetworkName: properties.outputs.hub.value.virtualNetworkName,
              hubVNetworkResourceId: properties.outputs.hub.value.virtualNetworkResourceId,
              logAWspaceResourceId: properties.outputs.logAnalyticsWorkspaceResourceId.value,
              firewallPrivateIP: properties.outputs.firewallPrivateIPAddress.value
            }' \
          --output json)

        hubSubId=$(echo $deploymentoutput | jq  '.hubSubId') \
          && echo "##vso[task.setvariable variable=hubSubscriptionId;]$hubSubId"

        hubRGroupName=$(echo $deploymentoutput | jq  '.hubRGroupName') \
          && echo "##vso[task.setvariable variable=hubResourceGroupName;]$hubRGroupName"

        hubVNetworkName=$(echo $deploymentoutput | jq  '.hubVNetworkName') \
          && echo "##vso[task.setvariable variable=hubVirtualNetworkName;]$hubVNetworkName"

        hubVNetworkResourceId=$(echo $deploymentoutput | jq  '.hubVNetworkResourceId') \
          && echo "##vso[task.setvariable variable=hubVirtualNetworkResourceId;]$hubVNetworkResourceId"

        logAWspaceResourceId=$(echo $deploymentoutput | jq  '.logAWspaceResourceId') \
          && echo "##vso[task.setvariable variable=logAnalyticsWorkspaceResourceId;]$logAWspaceResourceId"

        firewallPrivateIP=$(echo $deploymentoutput | jq  '.firewallPrivateIP') \
          && echo "##vso[task.setvariable variable=firewallPrivateIPAddress;]$firewallPrivateIP"

  - task: AzureCLI@2
    displayName: "T3 Bicep Deployment"
    inputs:
      azureSubscription: ${{ parameters.ServiceConnectionName }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az deployment sub create \
           --subscription ${{ parameters.WorkloadSubId }} \
           --location ${{ parameters.Location }} \
           --name ${{ parameters.WorkloadName }} \
           --template-file $(Build.SourcesDirectory)/src/bicep/examples/newWorkload/newWorkload.bicep \
           --parameters \
              workloadName=${{ parameters.WorkloadName }} \
              hubSubscriptionId=$(hubSubscriptionId) \
              hubResourceGroupName=$(hubResourceGroupName) \
              hubVirtualNetworkName=$(hubVirtualNetworkName) \
              hubVirtualNetworkResourceId=$(hubVirtualNetworkResourceId) \
              logAnalyticsWorkspaceResourceId=$(logAnalyticsWorkspaceResourceId) \
              firewallPrivateIPAddress=$(firewallPrivateIPAddress)
