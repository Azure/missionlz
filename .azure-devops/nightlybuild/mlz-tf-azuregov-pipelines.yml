 # Copyright (c) Microsoft Corporation. 
 # Licensed under the MIT License.

trigger:
- mlz-azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  GServiceConnectionName: $(GAzureConnection)
  
jobs:
- job: GovCloud_TF
  steps:
   - task: TerraformInstaller@0
     inputs:
        terraformVersion: '1.0.8'
   - task: AzureCLI@2
     name: TerraformApplyGov
     displayName: "Deploy MLZ Terraform"
     inputs:
            azureSubscription: $(GAzureConnection)
            scriptType: 'bash'
            addSpnToEnvironment: true
            scriptLocation: 'inlineScript'
            inlineScript: |
               export ARM_CLIENT_ID=$(GClientId) `
               echo $ARM_CLIENT_ID `
               export ARM_CLIENT_SECRET=$(GClientSecret) `
               echo $ARM_CLIENT_SECRET `
               export ARM_SUBSCRIPTION_ID=$(GSubId) `
               echo $ARM_SUBSCRIPTION_ID `
               export ARM_TENANT_ID=$(GTenantId) `
               echo $ARM_TENANT_ID `
               export ARM_ENVIRONMENT=$(CloudEnv) `
               echo $ARM_ENVIRONMENT `
               terraform init
               terraform plan  -var "hub_subid=$(GSubid)" -var metadata_host=$(MetadataHost)  -var environment=$(CloudEnv)  -var location=$(GLocation) -input=false
               terraform apply -var "hub_subid=$(GSubid)" -var metadata_host=$(MetadataHost)  -var environment=$(CloudEnv)  -var location=$(GLocation) -auto-approve -input=false
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
            useGlobalConfig: true
     continueOnError: true
   - task: AzureCLI@2
     name: TerraformTeardonwGov
     displayName: "Teardown MLZ Terraform"
     inputs:
            azureSubscription: $(GAzureConnection)
            scriptType: 'bash'
            addSpnToEnvironment: true
            scriptLocation: 'inlineScript'
            inlineScript: |
               export ARM_CLIENT_ID=$(GClientId) `
               echo $ARM_CLIENT_ID `
               export ARM_CLIENT_SECRET=$(GClientSecret) `
               echo $ARM_CLIENT_SECRET `
               export ARM_SUBSCRIPTION_ID=$(GSubId) `
               echo $ARM_SUBSCRIPTION_ID `
               export ARM_TENANT_ID=$(GTenantId) `
               echo $ARM_TENANT_ID `
               export ARM_ENVIRONMENT=$(CloudEnv) `
               echo $ARM_ENVIRONMENT `
               terraform init
               terraform destroy -var "hub_subid=$(GSubid)" -var metadata_host=$(MetadataHost)  -var environment=$(CloudEnv)  -var location=$(GLocation) -auto-approve -input=false
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
            useGlobalConfig: true
