# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- mlz-azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  ServiceConnectionName: $(CAzureConnection)
  GServiceConnectionName: $(GAzureConnection)
  
jobs:
- job: bicepCommercialCloud
  steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(ServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az deployment sub create \
          --name $(bDeploymentName) \
          --location $(Location) \
          --template-file $(TemplateFile)
- job: bicepGovCloud
  steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(GServiceConnectionName)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az deployment sub create \
          --name $(bDeploymentName) \
          --location $(GLocation) \
          --template-file $(TemplateFile)
- job: CommercialCloud_TF
  steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.0.8'
    - task: AzureCLI@2
      inputs:
            azureSubscription: 'CAzureConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'terraform init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
            addSpnToEnvironment: true
    - task: AzureCLI@2
      inputs:
            azureSubscription: 'CAzureConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: terraform apply -var "hub_subid=$(subid)" -auto-approve -input=false
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
            addSpnToEnvironment: true
- job: GovCloud_TF
  steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.0.8'
    - task: AzureCLI@2
      inputs:
            azureSubscription: 'GAzureConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'terraform init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
    - task: AzureCLI@2
      inputs:
            azureSubscription: 'GAzureConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: terraform apply -var "hub_subid=$(GSubid)" -auto-approve -input=false
            workingDirectory: '$(System.DefaultWorkingDirectory)/src/terraform/mlz'
            addSpnToEnvironment: true