{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "7019638258491095270"
    }
  },
  "parameters": {
    "azureFirewallResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Azure Firewall in the HUB."
      }
    },
    "azureNetAppFilesSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.161.0/24",
      "metadata": {
        "description": "The address prefix for the workload subnet."
      }
    },
    "deployActivityLogDiagnosticSetting": {
      "type": "bool",
      "metadata": {
        "description": "Choose whether to deploy a diagnostic setting for the Activity Log."
      }
    },
    "deployDefender": {
      "type": "bool",
      "metadata": {
        "description": "Choose whether to deploy Defender for Cloud."
      }
    },
    "deploymentNameSuffix": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "The suffix to append to the deployment name. It defaults to the current UTC date and time."
      }
    },
    "deployNetworkWatcherTrafficAnalytics": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When set to true, deploys Network Watcher Traffic Analytics. It defaults to \"false\"."
      }
    },
    "deployPolicy": {
      "type": "bool",
      "metadata": {
        "description": "Choose whether to deploy a policy assignment."
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the account to domain join the AVD session hosts."
      }
    },
    "domainJoinUserPrincipalName": {
      "type": "string",
      "metadata": {
        "description": "The user principal name for the account to domain join the AVD session hosts."
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the domain that provides ADDS to the AVD session hosts."
      }
    },
    "emailSecurityContact": {
      "type": "string",
      "metadata": {
        "description": "The email address to use for Defender for Cloud notifications."
      }
    },
    "environmentAbbreviation": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "prod",
        "test"
      ],
      "metadata": {
        "description": "The abbreviation for the environment."
      }
    },
    "fileShareName": {
      "type": "string",
      "metadata": {
        "description": "The name of the file share"
      }
    },
    "hubVirtualNetworkResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the HUB Virtual Network."
      }
    },
    "identifier": {
      "type": "string",
      "maxLength": 3,
      "metadata": {
        "description": "The identifier for the resource names. This value should represent the workload, project, or business unit."
      }
    },
    "keyVaultDiagnosticLogs": {
      "type": "array",
      "defaultValue": [
        {
          "category": "AuditEvent",
          "enabled": true
        },
        {
          "category": "AzurePolicyEvaluationDetails",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "An array of Key Vault Diagnostic Logs categories to collect. See \"https://learn.microsoft.com/en-us/azure/key-vault/general/logging?tabs=Vault\" for valid values."
      }
    },
    "keyVaultDiagnosticMetrics": {
      "type": "array",
      "defaultValue": [
        {
          "category": "AllMetrics",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "The Key Vault Diagnostic Metrics to collect. See the following URL for valid settings: \"https://learn.microsoft.com/azure/key-vault/general/logging?tabs=Vault\"."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the deployment. It defaults to the location of the deployment."
      }
    },
    "logAnalyticsWorkspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Log Analytics Workspace to use for log storage."
      }
    },
    "logStorageSkuName": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "metadata": {
        "description": "The Storage Account SKU to use for log storage. It defaults to \"Standard_GRS\". See https://docs.microsoft.com/en-us/rest/api/storagerp/srp_sku_types for valid settings."
      }
    },
    "networkInterfaceDiagnosticsMetrics": {
      "type": "array",
      "defaultValue": [
        {
          "category": "AllMetrics",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "An array of metrics to enable on the diagnostic setting for network interfaces."
      }
    },
    "networkSecurityGroupDiagnosticsLogs": {
      "type": "array",
      "defaultValue": [
        {
          "category": "NetworkSecurityGroupEvent",
          "enabled": true
        },
        {
          "category": "NetworkSecurityGroupRuleCounter",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "An array of Network Security Group diagnostic logs to apply to the workload Virtual Network. See https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-nsg-manage-log#log-categories for valid settings."
      }
    },
    "networkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The rules to apply to the Network Security Group."
      }
    },
    "networkWatcherFlowLogsRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "The number of days to retain Network Watcher Flow Logs. It defaults to \"30\"."
      }
    },
    "networkWatcherFlowLogsType": {
      "type": "string",
      "defaultValue": "VirtualNetwork",
      "allowedValues": [
        "NetworkSecurityGroup",
        "VirtualNetwork"
      ],
      "metadata": {
        "description": "When set to \"true\", enables Virtual Network Flow Logs. It defaults to \"true\" as its required by MCSB."
      }
    },
    "organizationalUnitPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The distinguished name for the target Organization Unit in Active Directory Domain Services."
      }
    },
    "policy": {
      "type": "string",
      "defaultValue": "NISTRev4",
      "metadata": {
        "description": "The policy to assign to the workload."
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Premium",
        "Standard"
      ],
      "metadata": {
        "description": "The performance SKU for Azure NetApp Files."
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.160.0/24",
      "metadata": {
        "description": "The address prefix for the subnet containing the private endpoints."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The tags to apply to the resources."
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.160.0/23",
      "metadata": {
        "description": "The address prefix for the workload Virtual Network."
      }
    },
    "virtualNetworkDiagnosticsLogs": {
      "type": "array",
      "defaultValue": [
        {
          "category": "VMProtectionAlerts",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "The diagnostic logs to apply to the workload Virtual Network."
      }
    },
    "virtualNetworkDiagnosticsMetrics": {
      "type": "array",
      "defaultValue": [
        {
          "category": "AllMetrics",
          "enabled": true
        }
      ],
      "metadata": {
        "description": "The metrics to monitor for the workload Virtual Network."
      }
    },
    "workloadName": {
      "type": "string",
      "defaultValue": "netAppFile",
      "minLength": 1,
      "maxLength": 10,
      "metadata": {
        "description": "The name for the workload."
      }
    },
    "workloadShortName": {
      "type": "string",
      "defaultValue": "anf",
      "minLength": 1,
      "maxLength": 3,
      "metadata": {
        "description": "The short name for the workload."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "additionalSubnets": {
            "value": [
              {
                "name": "azure-netapp-files",
                "properties": {
                  "addressPrefix": "[parameters('azureNetAppFilesSubnetAddressPrefix')]"
                }
              }
            ]
          },
          "deployActivityLogDiagnosticSetting": {
            "value": "[parameters('deployActivityLogDiagnosticSetting')]"
          },
          "deployDefender": {
            "value": "[parameters('deployDefender')]"
          },
          "deploymentNameSuffix": {
            "value": "[parameters('deploymentNameSuffix')]"
          },
          "deployNetworkWatcherTrafficAnalytics": {
            "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
          },
          "deployPolicy": {
            "value": "[parameters('deployPolicy')]"
          },
          "emailSecurityContact": {
            "value": "[parameters('emailSecurityContact')]"
          },
          "environmentAbbreviation": {
            "value": "[parameters('environmentAbbreviation')]"
          },
          "firewallResourceId": {
            "value": "[parameters('azureFirewallResourceId')]"
          },
          "hubVirtualNetworkResourceId": {
            "value": "[parameters('hubVirtualNetworkResourceId')]"
          },
          "identifier": {
            "value": "[parameters('identifier')]"
          },
          "keyVaultDiagnosticLogs": {
            "value": "[parameters('keyVaultDiagnosticLogs')]"
          },
          "keyVaultDiagnosticMetrics": {
            "value": "[parameters('keyVaultDiagnosticMetrics')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceResourceId": {
            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
          },
          "logStorageSkuName": {
            "value": "[parameters('logStorageSkuName')]"
          },
          "networkInterfaceDiagnosticsMetrics": {
            "value": "[parameters('networkInterfaceDiagnosticsMetrics')]"
          },
          "networkSecurityGroupDiagnosticsLogs": {
            "value": "[parameters('networkSecurityGroupDiagnosticsLogs')]"
          },
          "networkSecurityGroupRules": {
            "value": "[parameters('networkSecurityGroupRules')]"
          },
          "networkWatcherFlowLogsRetentionDays": {
            "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
          },
          "networkWatcherFlowLogsType": {
            "value": "[parameters('networkWatcherFlowLogsType')]"
          },
          "policy": {
            "value": "[parameters('policy')]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('subnetAddressPrefix')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "virtualNetworkDiagnosticsLogs": {
            "value": "[parameters('virtualNetworkDiagnosticsLogs')]"
          },
          "virtualNetworkDiagnosticsMetrics": {
            "value": "[parameters('virtualNetworkDiagnosticsMetrics')]"
          },
          "workloadName": {
            "value": "[parameters('workloadName')]"
          },
          "workloadShortName": {
            "value": "[parameters('workloadShortName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "16769387075041479627"
            }
          },
          "parameters": {
            "additionalSubnets": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An array of additional subnets to support the tier3 workload."
              }
            },
            "customFirewallRuleCollectionGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The custom firewall rule collection groups that override the default firewall rule collection groups."
              }
            },
            "deployActivityLogDiagnosticSetting": {
              "type": "bool",
              "metadata": {
                "description": "Choose whether to deploy a diagnostic setting for the Activity Log."
              }
            },
            "deployDefender": {
              "type": "bool",
              "metadata": {
                "description": "Choose whether to deploy Defender for Cloud."
              }
            },
            "deploymentNameSuffix": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "The suffix to append to the deployment name. It defaults to the current UTC date and time."
              }
            },
            "deployNetworkWatcherTrafficAnalytics": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "When set to true, deploys Network Watcher Traffic Analytics. It defaults to \"false\"."
              }
            },
            "deployPolicy": {
              "type": "bool",
              "metadata": {
                "description": "Choose whether to deploy a policy assignment."
              }
            },
            "emailSecurityContact": {
              "type": "string",
              "metadata": {
                "description": "The email address to use for Defender for Cloud notifications."
              }
            },
            "environmentAbbreviation": {
              "type": "string",
              "defaultValue": "dev",
              "allowedValues": [
                "dev",
                "prod",
                "test"
              ],
              "metadata": {
                "description": "The abbreviation for the environment."
              }
            },
            "firewallResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Azure Firewall in the HUB."
              }
            },
            "hubVirtualNetworkResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the HUB Virtual Network."
              }
            },
            "identifier": {
              "type": "string",
              "maxLength": 3,
              "metadata": {
                "description": "The identifier for the resource names. This value should represent the workload, project, or business unit."
              }
            },
            "keyVaultDiagnosticLogs": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "AuditEvent",
                  "enabled": true
                },
                {
                  "category": "AzurePolicyEvaluationDetails",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "An array of Key Vault Diagnostic Logs categories to collect. See \"https://learn.microsoft.com/en-us/azure/key-vault/general/logging?tabs=Vault\" for valid values."
              }
            },
            "keyVaultDiagnosticMetrics": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "AllMetrics",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "The Key Vault Diagnostic Metrics to collect. See the following URL for valid settings: \"https://learn.microsoft.com/azure/key-vault/general/logging?tabs=Vault\"."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "The location for the deployment. It defaults to the location of the deployment."
              }
            },
            "logAnalyticsWorkspaceResourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Log Analytics Workspace to use for log storage."
              }
            },
            "logStorageSkuName": {
              "type": "string",
              "defaultValue": "Standard_GRS",
              "metadata": {
                "description": "The Storage Account SKU to use for log storage. It defaults to \"Standard_GRS\". See https://docs.microsoft.com/en-us/rest/api/storagerp/srp_sku_types for valid settings."
              }
            },
            "networkInterfaceDiagnosticsMetrics": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "AllMetrics",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "An array of metrics to enable on the diagnostic setting for network interfaces."
              }
            },
            "networkSecurityGroupDiagnosticsLogs": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "NetworkSecurityGroupEvent",
                  "enabled": true
                },
                {
                  "category": "NetworkSecurityGroupRuleCounter",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "An array of Network Security Group diagnostic logs to apply to the workload Virtual Network. See https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-nsg-manage-log#log-categories for valid settings."
              }
            },
            "networkSecurityGroupRules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The rules to apply to the Network Security Group."
              }
            },
            "networkWatcherFlowLogsRetentionDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "The number of days to retain Network Watcher Flow Logs. It defaults to \"30\"."
              }
            },
            "networkWatcherFlowLogsType": {
              "type": "string",
              "defaultValue": "VirtualNetwork",
              "allowedValues": [
                "NetworkSecurityGroup",
                "VirtualNetwork"
              ],
              "metadata": {
                "description": "When set to \"true\", enables Virtual Network Flow Logs. It defaults to \"true\" as its required by MCSB."
              }
            },
            "policy": {
              "type": "string",
              "defaultValue": "NISTRev4",
              "metadata": {
                "description": "The policy to assign to the workload."
              }
            },
            "stampIndex": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The stamp index allows for multiple deployments of a similar workload without naming conflicts."
              }
            },
            "subnetAddressPrefix": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The address prefix for the workload subnet."
              }
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The custom name for the workload subnet if the naming convention is not desired. Subnets are child resources and do not require a unique name between virtual networks, only within the same virtual network."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "The tags to apply to the resources."
              }
            },
            "virtualNetworkAddressPrefix": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The address prefix for the workload Virtual Network."
              }
            },
            "virtualNetworkDiagnosticsLogs": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "VMProtectionAlerts",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "The diagnostic logs to apply to the workload Virtual Network."
              }
            },
            "virtualNetworkDiagnosticsMetrics": {
              "type": "array",
              "defaultValue": [
                {
                  "category": "AllMetrics",
                  "enabled": true
                }
              ],
              "metadata": {
                "description": "The metrics to monitor for the workload Virtual Network."
              }
            },
            "windowsAdministratorsGroupMembership": {
              "type": "string",
              "defaultValue": "xadmin",
              "metadata": {
                "description": "The local administrator username for Windows virtual machines. This value is needed if you plan to deploy the following Azure Policy initiatives: CMMC Level 3, DoD Impact Level 5, or NIST SP 800-53 Rev. 4 It defaults to \"xadmin\"."
              }
            },
            "workloadName": {
              "type": "string",
              "defaultValue": "tier3",
              "minLength": 1,
              "maxLength": 10,
              "metadata": {
                "description": "The name for the workload."
              }
            },
            "workloadShortName": {
              "type": "string",
              "defaultValue": "t3",
              "minLength": 1,
              "maxLength": 3,
              "metadata": {
                "description": "The short name for the workload."
              }
            }
          },
          "variables": {
            "hubResourceGroupName": "[split(parameters('hubVirtualNetworkResourceId'), '/')[4]]",
            "hubSubscriptionId": "[split(parameters('hubVirtualNetworkResourceId'), '/')[2]]",
            "deploymentIndex": "[if(empty(parameters('stampIndex')), '', format('{0}-', parameters('stampIndex')))]",
            "subscriptionId": "[subscription().subscriptionId]"
          },
          "resources": [
            {
              "condition": "[not(empty(parameters('customFirewallRuleCollectionGroups')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-firewall-rules-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "subscriptionId": "[variables('hubSubscriptionId')]",
              "resourceGroup": "[variables('hubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "firewallPolicyName": {
                    "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('firewallResourceId'), '/')[2], split(parameters('firewallResourceId'), '/')[4]), 'Microsoft.Network/azureFirewalls', split(parameters('firewallResourceId'), '/')[8]), '2020-11-01').firewallPolicy.id, '/')[8]]"
                  },
                  "firewallRuleCollectionGroups": {
                    "value": "[parameters('customFirewallRuleCollectionGroups')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "14214833945471634324"
                    }
                  },
                  "parameters": {
                    "firewallPolicyName": {
                      "type": "string"
                    },
                    "firewallRuleCollectionGroups": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "ruleCreate",
                        "count": "[length(parameters('firewallRuleCollectionGroups'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2024-03-01",
                      "name": "[format('{0}/{1}', parameters('firewallPolicyName'), parameters('firewallRuleCollectionGroups')[copyIndex()].name)]",
                      "properties": "[parameters('firewallRuleCollectionGroups')[copyIndex()].properties]"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('get-vnet-peerings-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "virtualNetworkPeerings": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('hubVirtualNetworkResourceId'), '/')[2], split(parameters('hubVirtualNetworkResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('hubVirtualNetworkResourceId'), '/')[8]), '2023-11-01').virtualNetworkPeerings]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "3555957746815136891"
                    }
                  },
                  "parameters": {
                    "virtualNetworkPeerings": {
                      "type": "array"
                    }
                  },
                  "variables": {
                    "copy": [
                      {
                        "name": "resourceIds",
                        "count": "[length(parameters('virtualNetworkPeerings'))]",
                        "input": "[parameters('virtualNetworkPeerings')[copyIndex('resourceIds')].properties.remoteVirtualNetwork.id]"
                      },
                      {
                        "name": "subscriptionIds",
                        "count": "[length(variables('resourceIds'))]",
                        "input": "[split(variables('resourceIds')[copyIndex('subscriptionIds')], '/')[2]]"
                      }
                    ]
                  },
                  "resources": [],
                  "outputs": {
                    "subscriptionIds": {
                      "type": "array",
                      "value": "[variables('subscriptionIds')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "additionalSubnets": {
                    "value": "[parameters('additionalSubnets')]"
                  },
                  "deploymentIndex": {
                    "value": "[variables('deploymentIndex')]"
                  },
                  "deploymentNameSuffix": {
                    "value": "[parameters('deploymentNameSuffix')]"
                  },
                  "environmentAbbreviation": {
                    "value": "[parameters('environmentAbbreviation')]"
                  },
                  "hubVirtualNetworkResourceId": {
                    "value": "[parameters('hubVirtualNetworkResourceId')]"
                  },
                  "identifier": {
                    "value": "[parameters('identifier')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "network": {
                    "value": {
                      "name": "[parameters('workloadName')]",
                      "nsgDiagLogs": "[parameters('networkSecurityGroupDiagnosticsLogs')]",
                      "nsgRules": "[parameters('networkSecurityGroupRules')]",
                      "shortName": "[parameters('workloadShortName')]",
                      "subnetAddressPrefix": "[parameters('subnetAddressPrefix')]",
                      "subscriptionId": "[variables('subscriptionId')]",
                      "vnetAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
                      "vnetDiagLogs": "[parameters('virtualNetworkDiagnosticsLogs')]",
                      "vnetDiagMetrics": "[parameters('virtualNetworkDiagnosticsMetrics')]"
                    }
                  },
                  "routeTableRouteNextHopIpAddress": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('firewallResourceId'), '/')[2], split(parameters('firewallResourceId'), '/')[4]), 'Microsoft.Network/azureFirewalls', split(parameters('firewallResourceId'), '/')[8]), '2020-11-01').ipConfigurations[0].properties.privateIPAddress]"
                  },
                  "stampIndex": {
                    "value": "[parameters('stampIndex')]"
                  },
                  "subnetName": {
                    "value": "[parameters('subnetName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "vNetDnsServers": {
                    "value": "[coalesce(tryGet(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('hubVirtualNetworkResourceId'), '/')[2], split(parameters('hubVirtualNetworkResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('hubVirtualNetworkResourceId'), '/')[8]), '2023-11-01'), 'dhcpOptions', 'dnsServers'), createArray())]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "8298062891891840229"
                    }
                  },
                  "parameters": {
                    "additionalSubnets": {
                      "type": "array"
                    },
                    "deploymentIndex": {
                      "type": "string"
                    },
                    "deploymentNameSuffix": {
                      "type": "string"
                    },
                    "environmentAbbreviation": {
                      "type": "string"
                    },
                    "hubVirtualNetworkResourceId": {
                      "type": "string"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "network": {
                      "type": "object"
                    },
                    "routeTableRouteNextHopIpAddress": {
                      "type": "string"
                    },
                    "stampIndex": {
                      "type": "string"
                    },
                    "subnetName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "vNetDnsServers": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "delimiter": {
                            "value": "-"
                          },
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "environmentAbbreviation": {
                            "value": "[parameters('environmentAbbreviation')]"
                          },
                          "identifier": {
                            "value": "[parameters('identifier')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "networks": {
                            "value": [
                              "[parameters('network')]"
                            ]
                          },
                          "stampIndex": {
                            "value": "[parameters('stampIndex')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "8361811161504730868"
                            }
                          },
                          "parameters": {
                            "delimiter": {
                              "type": "string"
                            },
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "environmentAbbreviation": {
                              "type": "string"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "networks": {
                              "type": "array"
                            },
                            "stampIndex": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "AzureChina": {
                                "chinaeast": {
                                  "abbreviation": "cne",
                                  "recoveryServicesGeo": "sha",
                                  "timeDifference": "+8:00",
                                  "timeZone": "China Standard Time"
                                },
                                "chinaeast2": {
                                  "abbreviation": "cne2",
                                  "recoveryServicesGeo": "sha2",
                                  "timeDifference": "+8:00",
                                  "timeZone": "China Standard Time"
                                },
                                "chinanorth": {
                                  "abbreviation": "cnn",
                                  "recoveryServicesGeo": "bjb",
                                  "timeDifference": "+8:00",
                                  "timeZone": "China Standard Time"
                                },
                                "chinanorth2": {
                                  "abbreviation": "cnn2",
                                  "recoveryServicesGeo": "bjb2",
                                  "timeDifference": "+8:00",
                                  "timeZone": "China Standard Time"
                                }
                              },
                              "AzureCloud": {
                                "australiacentral": {
                                  "abbreviation": "auc",
                                  "recoveryServicesGeo": "acl",
                                  "timeDifference": "+10:00",
                                  "timeZone": "AUS Eastern Standard Time"
                                },
                                "australiacentral2": {
                                  "abbreviation": "auc2",
                                  "recoveryServicesGeo": "acl2",
                                  "timeDifference": "+10:00",
                                  "timeZone": "AUS Eastern Standard Time"
                                },
                                "australiaeast": {
                                  "abbreviation": "aue",
                                  "recoveryServicesGeo": "ae",
                                  "timeDifference": "+10:00",
                                  "timeZone": "AUS Eastern Standard Time"
                                },
                                "australiasoutheast": {
                                  "abbreviation": "ause",
                                  "recoveryServicesGeo": "ase",
                                  "timeDifference": "+10:00",
                                  "timeZone": "AUS Eastern Standard Time"
                                },
                                "brazilsouth": {
                                  "abbreviation": "brs",
                                  "recoveryServicesGeo": "brs",
                                  "timeDifference": "-3:00",
                                  "timeZone": "E. South America Standard Time"
                                },
                                "brazilsoutheast": {
                                  "abbreviation": "brse",
                                  "recoveryServicesGeo": "bse",
                                  "timeDifference": "-3:00",
                                  "timeZone": "E. South America Standard Time"
                                },
                                "canadacentral": {
                                  "abbreviation": "cac",
                                  "recoveryServicesGeo": "cnc",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                },
                                "canadaeast": {
                                  "abbreviation": "cae",
                                  "recoveryServicesGeo": "cne",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                },
                                "centralindia": {
                                  "abbreviation": "inc",
                                  "recoveryServicesGeo": "inc",
                                  "timeDifference": "+5:30",
                                  "timeZone": "India Standard Time"
                                },
                                "centralus": {
                                  "abbreviation": "usc",
                                  "recoveryServicesGeo": "cus",
                                  "timeDifference": "-6:00",
                                  "timeZone": "Central Standard Time"
                                },
                                "eastasia": {
                                  "abbreviation": "ase",
                                  "recoveryServicesGeo": "ea",
                                  "timeDifference": "+8:00",
                                  "timeZone": "China Standard Time"
                                },
                                "eastus": {
                                  "abbreviation": "use",
                                  "recoveryServicesGeo": "eus",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                },
                                "eastus2": {
                                  "abbreviation": "use2",
                                  "recoveryServicesGeo": "eus2",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                },
                                "francecentral": {
                                  "abbreviation": "frc",
                                  "recoveryServicesGeo": "frc",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "francesouth": {
                                  "abbreviation": "frs",
                                  "recoveryServicesGeo": "frs",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "germanynorth": {
                                  "abbreviation": "den",
                                  "recoveryServicesGeo": "gn",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "germanywestcentral": {
                                  "abbreviation": "dewc",
                                  "recoveryServicesGeo": "gwc",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "israelcentral": {
                                  "abbreviation": "ilc",
                                  "recoveryServicesGeo": "ilc",
                                  "timeDifference": "+2:00",
                                  "timeZone": "Israel Standard Time"
                                },
                                "italynorth": {
                                  "abbreviation": "itn",
                                  "recoveryServicesGeo": "itn",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "japaneast": {
                                  "abbreviation": "jpe",
                                  "recoveryServicesGeo": "jpe",
                                  "timeDifference": "+9:00",
                                  "timeZone": "Tokyo Standard Time"
                                },
                                "japanwest": {
                                  "abbreviation": "jpw",
                                  "recoveryServicesGeo": "jpw",
                                  "timeDifference": "+9:00",
                                  "timeZone": "Tokyo Standard Time"
                                },
                                "jioindiacentral": {
                                  "abbreviation": "injc",
                                  "recoveryServicesGeo": "jic",
                                  "timeDifference": "+5:30",
                                  "timeZone": "India Standard Time"
                                },
                                "jioindiawest": {
                                  "abbreviation": "injw",
                                  "recoveryServicesGeo": "jiw",
                                  "timeDifference": "+5:30",
                                  "timeZone": "India Standard Time"
                                },
                                "koreacentral": {
                                  "abbreviation": "krc",
                                  "recoveryServicesGeo": "krc",
                                  "timeDifference": "+9:00",
                                  "timeZone": "Korea Standard Time"
                                },
                                "koreasouth": {
                                  "abbreviation": "krs",
                                  "recoveryServicesGeo": "krs",
                                  "timeDifference": "+9:00",
                                  "timeZone": "Korea Standard Time"
                                },
                                "northcentralus": {
                                  "abbreviation": "usnc",
                                  "recoveryServicesGeo": "ncus",
                                  "timeDifference": "-6:00",
                                  "timeZone": "Central Standard Time"
                                },
                                "northeurope": {
                                  "abbreviation": "eun",
                                  "recoveryServicesGeo": "ne",
                                  "timeDifference": "0:00",
                                  "timeZone": "GMT Standard Time"
                                },
                                "norwayeast": {
                                  "abbreviation": "noe",
                                  "recoveryServicesGeo": "nwe",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "norwaywest": {
                                  "abbreviation": "now",
                                  "recoveryServicesGeo": "nww",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "polandcentral": {
                                  "abbreviation": "plc",
                                  "recoveryServicesGeo": "plc",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "qatarcentral": {
                                  "abbreviation": "qac",
                                  "recoveryServicesGeo": "qac",
                                  "timeDifference": "+3:00",
                                  "timeZone": "Arabian Standard Time"
                                },
                                "southafricanorth": {
                                  "abbreviation": "zan",
                                  "recoveryServicesGeo": "san",
                                  "timeDifference": "+2:00",
                                  "timeZone": "South Africa Standard Time"
                                },
                                "southafricawest": {
                                  "abbreviation": "zaw",
                                  "recoveryServicesGeo": "saw",
                                  "timeDifference": "+2:00",
                                  "timeZone": "South Africa Standard Time"
                                },
                                "southcentralus": {
                                  "abbreviation": "ussc",
                                  "recoveryServicesGeo": "scus",
                                  "timeDifference": "-6:00",
                                  "timeZone": "Central Standard Time"
                                },
                                "southeastasia": {
                                  "abbreviation": "asse",
                                  "recoveryServicesGeo": "sea",
                                  "timeDifference": "+8:00",
                                  "timeZone": "Singapore Standard Time"
                                },
                                "southindia": {
                                  "abbreviation": "ins",
                                  "recoveryServicesGeo": "ins",
                                  "timeDifference": "+5:30",
                                  "timeZone": "India Standard Time"
                                },
                                "swedencentral": {
                                  "abbreviation": "sec",
                                  "recoveryServicesGeo": "sdc",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "switzerlandnorth": {
                                  "abbreviation": "chn",
                                  "recoveryServicesGeo": "szn",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "switzerlandwest": {
                                  "abbreviation": "chw",
                                  "recoveryServicesGeo": "szw",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "uaecentral": {
                                  "abbreviation": "aec",
                                  "recoveryServicesGeo": "uac",
                                  "timeDifference": "+3:00",
                                  "timeZone": "Arabian Standard Time"
                                },
                                "uaenorth": {
                                  "abbreviation": "aen",
                                  "recoveryServicesGeo": "uan",
                                  "timeDifference": "+3:00",
                                  "timeZone": "Arabian Standard Time"
                                },
                                "uksouth": {
                                  "abbreviation": "uks",
                                  "recoveryServicesGeo": "uks",
                                  "timeDifference": "0:00",
                                  "timeZone": "GMT Standard Time"
                                },
                                "ukwest": {
                                  "abbreviation": "ukw",
                                  "recoveryServicesGeo": "ukw",
                                  "timeDifference": "0:00",
                                  "timeZone": "GMT Standard Time"
                                },
                                "westcentralus": {
                                  "abbreviation": "uswc",
                                  "recoveryServicesGeo": "wcus",
                                  "timeDifference": "-7:00",
                                  "timeZone": "Mountain Standard Time"
                                },
                                "westeurope": {
                                  "abbreviation": "euw",
                                  "recoveryServicesGeo": "we",
                                  "timeDifference": "+1:00",
                                  "timeZone": "Central Europe Standard Time"
                                },
                                "westindia": {
                                  "abbreviation": "inw",
                                  "recoveryServicesGeo": "inw",
                                  "timeDifference": "+5:30",
                                  "timeZone": "India Standard Time"
                                },
                                "westus": {
                                  "abbreviation": "usw",
                                  "recoveryServicesGeo": "wus",
                                  "timeDifference": "-8:00",
                                  "timeZone": "Pacific Standard Time"
                                },
                                "westus2": {
                                  "abbreviation": "usw2",
                                  "recoveryServicesGeo": "wus2",
                                  "timeDifference": "-8:00",
                                  "timeZone": "Pacific Standard Time"
                                },
                                "westus3": {
                                  "abbreviation": "usw3",
                                  "recoveryServicesGeo": "wus3",
                                  "timeDifference": "-7:00",
                                  "timeZone": "Mountain Standard Time"
                                }
                              },
                              "AzureUSGovernment": {
                                "usdodcentral": {
                                  "abbreviation": "dodc",
                                  "recoveryServicesGeo": "udc",
                                  "timeDifference": "-6:00",
                                  "timeZone": "Central Standard Time"
                                },
                                "usdodeast": {
                                  "abbreviation": "dode",
                                  "recoveryServicesGeo": "ude",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                },
                                "usgovarizona": {
                                  "abbreviation": "az",
                                  "recoveryServicesGeo": "uga",
                                  "timeDifference": "-7:00",
                                  "timeZone": "Mountain Standard Time"
                                },
                                "usgovtexas": {
                                  "abbreviation": "tx",
                                  "recoveryServicesGeo": "ugt",
                                  "timeDifference": "-6:00",
                                  "timeZone": "Central Standard Time"
                                },
                                "usgovvirginia": {
                                  "abbreviation": "va",
                                  "recoveryServicesGeo": "ugv",
                                  "timeDifference": "-5:00",
                                  "timeZone": "Eastern Standard Time"
                                }
                              }
                            },
                            "$fxv#1": "1.0.0",
                            "$fxv#2": {
                              "actionGroups": "ag",
                              "applicationGroups": "vdag",
                              "applicationInsights": "appi",
                              "appServicePlans": "asp",
                              "automationAccounts": "aa",
                              "availabilitySets": "avail",
                              "azureFirewalls": "afw",
                              "bastionHosts": "bas",
                              "computeGallieries": "cg",
                              "dataCollectionEndpoints": "dce",
                              "dataCollectionRuleAssociations": "dcra",
                              "dataCollectionRules": "dcr",
                              "diagnosticSettings": "diag",
                              "diskAccesses": "da",
                              "diskEncryptionSets": "des",
                              "disks": "disk",
                              "firewallPolicies": "afwp",
                              "functionApps": "func",
                              "hostPools": "vdpool",
                              "ipConfigurations": "ipconf",
                              "keyVaults": "kv",
                              "localNetworkGateways": "lgw",
                              "logAnalyticsWorkspaces": "log",
                              "natGateways": "ng",
                              "netAppAccounts": "naa",
                              "netAppAccountsCapacityPools": "cp",
                              "networkInterfaces": "nic",
                              "networkSecurityGroups": "nsg",
                              "networkWatchers": "nw",
                              "networkWatchersFlowLogs": "fl",
                              "privateEndpoints": "pe",
                              "privateLinkScopes": "pls",
                              "publicIPAddresses": "pip",
                              "publicIPPrefixes": "ippre",
                              "recoveryServicesVaults": "rsv",
                              "remoteApplicationGroups": "vdag",
                              "resourceGroups": "rg",
                              "routeTables": "rt",
                              "scalingPlans": "vdscaling",
                              "storageAccounts": "st",
                              "subnets": "snet",
                              "userAssignedIdentities": "id",
                              "virtualMachines": "vm",
                              "virtualNetworkGateways": "vgw",
                              "virtualNetworks": "vnet",
                              "workspaces": "vdws"
                            },
                            "directionShortNames": {
                              "east": "e",
                              "eastcentral": "ec",
                              "north": "n",
                              "northcentral": "nc",
                              "south": "s",
                              "southcentral": "sc",
                              "west": "w",
                              "westcentral": "wc"
                            },
                            "environmentName": {
                              "dev": "Development",
                              "prod": "Production",
                              "test": "Test"
                            },
                            "locations": "[coalesce(tryGet(variables('$fxv#0'), environment().name), createObject(format('{0}', parameters('location')), createObject('abbreviation', variables('directionShortNames')[skip(parameters('location'), sub(length(parameters('location')), 4))], 'timeDifference', if(contains(parameters('location'), 'east'), '-5:00', if(contains(parameters('location'), 'west'), '-8:00', '0:00')), 'timeZone', if(contains(parameters('location'), 'east'), 'Eastern Standard Time', if(contains(parameters('location'), 'west'), 'Pacific Standard Time', 'GMT Standard Time')))))]",
                            "mlzTags": {
                              "environment": "[variables('environmentName')[parameters('environmentAbbreviation')]]",
                              "identifier": "[parameters('identifier')]",
                              "landingZoneName": "MissionLandingZone",
                              "landingZoneVersion": "[variables('$fxv#1')]"
                            },
                            "resourceAbbreviations": "[variables('$fxv#2')]"
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "namingConventions",
                                "count": "[length(parameters('networks'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('naming-convention-{0}-{1}', parameters('networks')[copyIndex()].shortName, parameters('deploymentNameSuffix'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "delimiter": {
                                    "value": "[parameters('delimiter')]"
                                  },
                                  "environmentAbbreviation": {
                                    "value": "[parameters('environmentAbbreviation')]"
                                  },
                                  "identifier": {
                                    "value": "[parameters('identifier')]"
                                  },
                                  "locationAbbreviation": {
                                    "value": "[variables('locations')[parameters('location')].abbreviation]"
                                  },
                                  "networkName": {
                                    "value": "[parameters('networks')[copyIndex()].name]"
                                  },
                                  "resourceAbbreviations": {
                                    "value": "[variables('resourceAbbreviations')]"
                                  },
                                  "stampIndex": {
                                    "value": "[parameters('stampIndex')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "3588003737726937200"
                                    }
                                  },
                                  "parameters": {
                                    "delimiter": {
                                      "type": "string",
                                      "allowedValues": [
                                        "",
                                        "-"
                                      ]
                                    },
                                    "environmentAbbreviation": {
                                      "type": "string"
                                    },
                                    "identifier": {
                                      "type": "string"
                                    },
                                    "locationAbbreviation": {
                                      "type": "string"
                                    },
                                    "networkName": {
                                      "type": "string"
                                    },
                                    "resourceAbbreviations": {
                                      "type": "object"
                                    },
                                    "stampIndex": {
                                      "type": "string",
                                      "defaultValue": ""
                                    }
                                  },
                                  "variables": {
                                    "tokens": {
                                      "resource": "resource_token",
                                      "service": "service_token"
                                    },
                                    "namingConvention": "[format('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}', toLower(parameters('identifier')), parameters('delimiter'), parameters('environmentAbbreviation'), parameters('delimiter'), parameters('locationAbbreviation'), parameters('delimiter'), parameters('networkName'), parameters('delimiter'), variables('tokens').resource, if(empty(parameters('stampIndex')), '', format('{0}{1}', parameters('delimiter'), parameters('stampIndex'))))]",
                                    "namingConvention_Service": "[format('{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}', toLower(parameters('identifier')), parameters('delimiter'), parameters('environmentAbbreviation'), parameters('delimiter'), parameters('locationAbbreviation'), parameters('delimiter'), parameters('networkName'), parameters('delimiter'), variables('tokens').service, parameters('delimiter'), variables('tokens').resource, if(empty(parameters('stampIndex')), '', format('{0}{1}', parameters('delimiter'), parameters('stampIndex'))))]",
                                    "names": {
                                      "actionGroup": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').actionGroups)]",
                                      "applicationGroup": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').applicationGroups)]",
                                      "applicationInsights": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').applicationInsights)]",
                                      "appServicePlan": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').appServicePlans)]",
                                      "automationAccount": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').automationAccounts)]",
                                      "automationAccountDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').automationAccounts)]",
                                      "automationAccountNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').automationAccounts)]",
                                      "automationAccountPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').automationAccounts)]",
                                      "availabilitySet": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').availabilitySets)]",
                                      "azureFirewall": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').azureFirewalls)]",
                                      "azureFirewallPublicIPAddress": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').publicIPAddresses), variables('tokens').service, parameters('resourceAbbreviations').azureFirewalls)]",
                                      "azureFirewallPublicIPAddressDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}{2}', parameters('resourceAbbreviations').publicIPAddresses, parameters('delimiter'), parameters('resourceAbbreviations').azureFirewalls))]",
                                      "azureFirewallDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').azureFirewalls)]",
                                      "azureFirewallPolicy": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').firewallPolicies)]",
                                      "bastionHost": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').bastionHosts)]",
                                      "bastionHostDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').bastionHosts)]",
                                      "bastionHostNetworkSecurityGroup": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkSecurityGroups), variables('tokens').service, parameters('resourceAbbreviations').bastionHosts)]",
                                      "bastionHostNetworkSecurityGroupDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}{2}', parameters('resourceAbbreviations').networkSecurityGroups, parameters('delimiter'), parameters('resourceAbbreviations').bastionHosts))]",
                                      "bastionHostPublicIPAddress": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').publicIPAddresses), variables('tokens').service, parameters('resourceAbbreviations').bastionHosts)]",
                                      "bastionHostPublicIPAddressDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}{2}', parameters('resourceAbbreviations').publicIPAddresses, parameters('delimiter'), parameters('resourceAbbreviations').bastionHosts))]",
                                      "computeGallery": "[replace(replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').computeGallieries), parameters('delimiter'), if(empty(parameters('delimiter')), '', '_'))]",
                                      "dataCollectionEndpoint": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').dataCollectionEndpoints)]",
                                      "dataCollectionRuleAssociation": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').dataCollectionRuleAssociations)]",
                                      "dataCollectionRule": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').dataCollectionRules)]",
                                      "diskAccess": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').diskAccesses)]",
                                      "diskAccessNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').diskAccesses)]",
                                      "diskAccessPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').diskAccesses)]",
                                      "diskEncryptionSet": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').diskEncryptionSets)]",
                                      "functionApp": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').functionApps)]",
                                      "functionAppNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').functionApps)]",
                                      "functionAppPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').functionApps)]",
                                      "hostPool": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').hostPools)]",
                                      "hostPoolDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').hostPools)]",
                                      "hostPoolNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').hostPools)]",
                                      "hostPoolPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').hostPools)]",
                                      "keyVault": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').keyVaults)]",
                                      "keyVaultDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').keyVaults)]",
                                      "keyVaultNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').keyVaults)]",
                                      "keyVaultPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').keyVaults)]",
                                      "localNetworkGateway": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').localNetworkGateways)]",
                                      "logAnalyticsWorkspace": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').logAnalyticsWorkspaces)]",
                                      "logAnalyticsWorkspaceDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').logAnalyticsWorkspaces)]",
                                      "natGateway": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').natGateways)]",
                                      "natGatewayPublicIPPrefix": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').publicIPPrefixes), variables('tokens').service, parameters('resourceAbbreviations').natGateways)]",
                                      "netAppAccount": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').netAppAccounts)]",
                                      "netAppAccountCapacityPool": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').netAppAccountsCapacityPools), variables('tokens').service, parameters('resourceAbbreviations').netAppAccounts)]",
                                      "netAppAccountSmbServer": "[replace(replace(replace(replace(variables('namingConvention'), variables('tokens').resource, ''), parameters('environmentAbbreviation'), first(parameters('environmentAbbreviation'))), parameters('networkName'), ''), parameters('delimiter'), '')]",
                                      "networkSecurityGroup": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').networkSecurityGroups)]",
                                      "networkSecurityGroupDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').networkSecurityGroups)]",
                                      "networkWatcherFlowLogsNetworkSecurityGroup": "[replace(variables('namingConvention'), variables('tokens').resource, format('{0}{1}{2}{3}{4}', parameters('resourceAbbreviations').networkWatchers, parameters('delimiter'), parameters('resourceAbbreviations').networkWatchersFlowLogs, parameters('delimiter'), parameters('resourceAbbreviations').networkSecurityGroups))]",
                                      "networkWatcherFlowLogsVirtualNetwork": "[replace(variables('namingConvention'), variables('tokens').resource, format('{0}{1}{2}{3}{4}', parameters('resourceAbbreviations').networkWatchers, parameters('delimiter'), parameters('resourceAbbreviations').networkWatchersFlowLogs, parameters('delimiter'), parameters('resourceAbbreviations').virtualNetworks))]",
                                      "privateLinkScope": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').privateLinkScopes)]",
                                      "privateLinkScopeNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').privateLinkScopes)]",
                                      "privateLinkScopePrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').privateLinkScopes)]",
                                      "recoveryServicesVault": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').recoveryServicesVaults)]",
                                      "recoveryServicesVaultNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').recoveryServicesVaults)]",
                                      "recoveryServicesVaultPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').recoveryServicesVaults)]",
                                      "resourceGroup": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').resourceGroups)]",
                                      "routeTable": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').routeTables)]",
                                      "scalingPlan": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').scalingPlans)]",
                                      "scalingPlanDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').scalingPlans)]",
                                      "storageAccount": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').storageAccounts)]",
                                      "storageAccountBlobDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}blob', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountBlobNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, format('{0}{1}blob', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountBlobPrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, format('{0}{1}blob', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountFileDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}file', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountFileNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, format('{0}{1}file', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountFilePrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, format('{0}{1}file', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountQueueDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}queue', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountQueueNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, format('{0}{1}queue', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountQueuePrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, format('{0}{1}queue', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountTableDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}table', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountTableNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, format('{0}{1}table', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "storageAccountTablePrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, format('{0}{1}table', parameters('resourceAbbreviations').storageAccounts, parameters('delimiter')))]",
                                      "subnet": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').subnets)]",
                                      "userAssignedIdentity": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').userAssignedIdentities)]",
                                      "virtualMachine": "[replace(replace(replace(replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').virtualMachines), parameters('environmentAbbreviation'), first(parameters('environmentAbbreviation'))), parameters('networkName'), ''), parameters('delimiter'), '')]",
                                      "virtualMachineDisk": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').disks), variables('tokens').service, format('{0}', parameters('resourceAbbreviations').virtualMachines))]",
                                      "virtualMachineNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').virtualMachines)]",
                                      "virtualMachineNetworkInterfaceDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, format('{0}{1}{2}', parameters('resourceAbbreviations').networkInterfaces, parameters('delimiter'), parameters('resourceAbbreviations').virtualMachines))]",
                                      "virtualNetwork": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').virtualNetworks)]",
                                      "virtualNetworkDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').virtualNetworks)]",
                                      "virtualNetworkGateway": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').virtualNetworkGateways)]",
                                      "virtualNetworkGatewayPublicIpAddress": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').publicIPAddresses), variables('tokens').service, parameters('resourceAbbreviations').virtualNetworkGateways)]",
                                      "workspace": "[replace(variables('namingConvention'), variables('tokens').resource, parameters('resourceAbbreviations').workspaces)]",
                                      "workspaceDiagnosticSetting": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').diagnosticSettings), variables('tokens').service, parameters('resourceAbbreviations').workspaces)]",
                                      "workspaceNetworkInterface": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').networkInterfaces), variables('tokens').service, parameters('resourceAbbreviations').workspaces)]",
                                      "workspacePrivateEndpoint": "[replace(replace(variables('namingConvention_Service'), variables('tokens').resource, parameters('resourceAbbreviations').privateEndpoints), variables('tokens').service, parameters('resourceAbbreviations').workspaces)]"
                                    }
                                  },
                                  "resources": [],
                                  "outputs": {
                                    "names": {
                                      "type": "object",
                                      "value": "[variables('names')]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('private-dns-zones-{0}', parameters('deploymentNameSuffix'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10679114646029483386"
                                    }
                                  },
                                  "variables": {
                                    "cloudSuffix": "[replace(replace(environment().resourceManager, 'https://management.', ''), '/', '')]",
                                    "privateDnsZoneNames": "[union(createArray(format('privatelink.agentsvc.azure-automation.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureAutomation'), environment().name), variables('cloudSuffix'))), format('privatelink.azure-automation.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureAutomation'), environment().name), variables('cloudSuffix'))), format('privatelink.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureWebSites'), environment().name), format('appservice.{0}', variables('cloudSuffix')))), format('scm.privatelink.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureWebSites'), environment().name), format('appservice.{0}', variables('cloudSuffix')))), format('privatelink.wvd.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureVirtualDesktop'), environment().name), variables('cloudSuffix'))), format('privatelink-global.wvd.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_AzureVirtualDesktop'), environment().name), variables('cloudSuffix'))), format('privatelink.file.{0}', environment().suffixes.storage), format('privatelink.queue.{0}', environment().suffixes.storage), format('privatelink.table.{0}', environment().suffixes.storage), format('privatelink.blob.{0}', environment().suffixes.storage), format('privatelink{0}', replace(environment().suffixes.keyvaultDns, 'vault', 'vaultcore')), format('privatelink.monitor.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_Monitor'), environment().name), variables('cloudSuffix'))), format('privatelink.ods.opinsights.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_Monitor'), environment().name), variables('cloudSuffix'))), format('privatelink.oms.opinsights.{0}', coalesce(tryGet(variables('privateDnsZoneSuffixes_Monitor'), environment().name), variables('cloudSuffix'))), format('privatelink{0}', environment().suffixes.sqlServerHostname)), createArray())]",
                                    "privateDnsZoneSuffixes_AzureAutomation": {
                                      "AzureCloud": "net",
                                      "AzureUSGovernment": "us"
                                    },
                                    "privateDnsZoneSuffixes_AzureVirtualDesktop": {
                                      "AzureCloud": "microsoft.com",
                                      "AzureUSGovernment": "azure.us"
                                    },
                                    "privateDnsZoneSuffixes_AzureWebSites": {
                                      "AzureCloud": "azurewebsites.net",
                                      "AzureUSGovernment": "azurewebsites.us"
                                    },
                                    "privateDnsZoneSuffixes_Monitor": {
                                      "AzureCloud": "azure.com",
                                      "AzureUSGovernment": "azure.us"
                                    }
                                  },
                                  "resources": [],
                                  "outputs": {
                                    "names": {
                                      "type": "array",
                                      "value": "[variables('privateDnsZoneNames')]"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "delimiter": {
                              "type": "string",
                              "value": "[parameters('delimiter')]"
                            },
                            "locationProperties": {
                              "type": "object",
                              "value": "[variables('locations')[parameters('location')]]"
                            },
                            "mlzTags": {
                              "type": "object",
                              "value": "[variables('mlzTags')]"
                            },
                            "privateDnsZones": {
                              "type": "array",
                              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('private-dns-zones-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.names.value]"
                            },
                            "resourceAbbreviations": {
                              "type": "object",
                              "value": "[variables('resourceAbbreviations')]"
                            },
                            "tiers": {
                              "type": "array",
                              "copy": {
                                "count": "[length(parameters('networks'))]",
                                "input": {
                                  "name": "[parameters('networks')[copyIndex()].name]",
                                  "namingConvention": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('naming-convention-{0}-{1}', parameters('networks')[copyIndex()].shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.names.value]",
                                  "nsgDiagLogs": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'nsgDiagLogs'), createArray())]",
                                  "nsgRules": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'nsgRules'), createArray())]",
                                  "shortName": "[parameters('networks')[copyIndex()].shortName]",
                                  "subnetAddressPrefix": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'subnetAddressPrefix'), '')]",
                                  "subscriptionId": "[parameters('networks')[copyIndex()].subscriptionId]",
                                  "vnetAddressPrefix": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'vnetAddressPrefix'), '')]",
                                  "vnetDiagLogs": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'vnetDiagLogs'), createArray())]",
                                  "vnetDiagMetrics": "[coalesce(tryGet(parameters('networks')[copyIndex()], 'vnetDiagMetrics'), createArray())]"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mlzTags": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
                          },
                          "name": {
                            "value": "[format('{0}{1}network', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tiers.value[0].namingConvention.resourceGroup, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value)]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "18441033039263608064"
                            }
                          },
                          "parameters": {
                            "mlzTags": {
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/resourceGroups",
                              "apiVersion": "2019-05-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Resources/resourceGroups'), createObject()), parameters('mlzTags'))]"
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "location": {
                              "type": "string",
                              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').location]"
                            },
                            "tags": {
                              "type": "object",
                              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').tags]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "additionalSubnets": {
                            "value": "[parameters('additionalSubnets')]"
                          },
                          "customSubnetName": {
                            "value": "[parameters('subnetName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mlzTags": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
                          },
                          "resourceGroupName": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.name.value]"
                          },
                          "routeTableRouteNextHopIpAddress": {
                            "value": "[parameters('routeTableRouteNextHopIpAddress')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "tier": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tiers.value[0]]"
                          },
                          "vNetDnsServers": {
                            "value": "[parameters('vNetDnsServers')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9473405321022751868"
                            }
                          },
                          "parameters": {
                            "additionalSubnets": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "customSubnetName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "location": {
                              "type": "string"
                            },
                            "mlzTags": {
                              "type": "object"
                            },
                            "resourceGroupName": {
                              "type": "string"
                            },
                            "routeTableRouteNextHopIpAddress": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            },
                            "tier": {
                              "type": "object"
                            },
                            "vNetDnsServers": {
                              "type": "array"
                            }
                          },
                          "variables": {
                            "delegations": {
                              "azure-netapp-files": [
                                {
                                  "name": "Microsoft.Netapp.volumes",
                                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/delegations', variables('virtualNetworkName'), 'azure-netapp-files', 'delegation')]",
                                  "properties": {
                                    "serviceName": "Microsoft.Netapp/volumes"
                                  },
                                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                              ],
                              "function-app-outbound": [
                                {
                                  "name": "Microsoft.Web/sites",
                                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/delegations', variables('virtualNetworkName'), 'function-app-outbound', 'delegation')]",
                                  "properties": {
                                    "serviceName": "Microsoft.Web/serverfarms"
                                  },
                                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                              ]
                            },
                            "subnets": "[union(createArray(createObject('name', if(empty(parameters('customSubnetName')), parameters('tier').namingConvention.subnet, parameters('customSubnetName')), 'properties', createObject('addressPrefix', parameters('tier').subnetAddressPrefix))), parameters('additionalSubnets'))]",
                            "subscriptionId": "[parameters('tier').subscriptionId]",
                            "virtualNetworkName": "[parameters('tier').namingConvention.virtualNetwork]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "networkSecurityGroup",
                              "subscriptionId": "[variables('subscriptionId')]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "name": {
                                    "value": "[parameters('tier').namingConvention.networkSecurityGroup]"
                                  },
                                  "securityRules": {
                                    "value": "[parameters('tier').nsgRules]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "16681284676441931677"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "securityRules": {
                                      "type": "array"
                                    },
                                    "tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkSecurityGroups",
                                      "apiVersion": "2021-02-01",
                                      "name": "[parameters('name')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Network/networkSecurityGroups'), createObject()), parameters('mlzTags'))]",
                                      "properties": {
                                        "securityRules": "[parameters('securityRules')]"
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
                                    },
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "routeTable",
                              "subscriptionId": "[variables('subscriptionId')]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "disableBgpRoutePropagation": {
                                    "value": true
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "name": {
                                    "value": "[parameters('tier').namingConvention.routeTable]"
                                  },
                                  "routeNextHopIpAddress": {
                                    "value": "[parameters('routeTableRouteNextHopIpAddress')]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "9586272240050369592"
                                    }
                                  },
                                  "parameters": {
                                    "disableBgpRoutePropagation": {
                                      "type": "bool"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "routeAddressPrefix": {
                                      "type": "string",
                                      "defaultValue": "0.0.0.0/0"
                                    },
                                    "routeName": {
                                      "type": "string",
                                      "defaultValue": "default_route"
                                    },
                                    "routeNextHopIpAddress": {
                                      "type": "string"
                                    },
                                    "routeNextHopType": {
                                      "type": "string",
                                      "defaultValue": "VirtualAppliance"
                                    },
                                    "tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/routeTables",
                                      "apiVersion": "2021-02-01",
                                      "name": "[parameters('name')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Network/routeTables'), createObject()), parameters('mlzTags'))]",
                                      "properties": {
                                        "disableBgpRoutePropagation": "[parameters('disableBgpRoutePropagation')]",
                                        "routes": [
                                          {
                                            "name": "[parameters('routeName')]",
                                            "properties": {
                                              "addressPrefix": "[parameters('routeAddressPrefix')]",
                                              "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]",
                                              "nextHopType": "[parameters('routeNextHopType')]"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('name'))]"
                                    },
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "virtualNetwork",
                              "subscriptionId": "[variables('subscriptionId')]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "addressPrefix": {
                                    "value": "[parameters('tier').vnetAddressPrefix]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "name": {
                                    "value": "[variables('virtualNetworkName')]"
                                  },
                                  "subnets": {
                                    "copy": [
                                      {
                                        "name": "value",
                                        "count": "[length(variables('subnets'))]",
                                        "input": "[createObject('name', variables('subnets')[copyIndex('value')].name, 'properties', createObject('addressPrefix', variables('subnets')[copyIndex('value')].properties.addressPrefix, 'defaultOutboundAccess', false(), 'delegations', coalesce(tryGet(variables('delegations'), variables('subnets')[copyIndex('value')].name), createArray()), 'networkSecurityGroup', createObject('id', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'networkSecurityGroup'), '2022-09-01').outputs.id.value), 'routeTable', createObject('id', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'routeTable'), '2022-09-01').outputs.id.value), 'privateEndpointNetworkPolicies', 'Disabled', 'privateLinkServiceNetworkPolicies', 'Disabled'))]"
                                      }
                                    ]
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "vNetDnsServers": {
                                    "value": "[parameters('vNetDnsServers')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "3498157856114632476"
                                    }
                                  },
                                  "parameters": {
                                    "addressPrefix": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "subnets": {
                                      "type": "array"
                                    },
                                    "tags": {
                                      "type": "object"
                                    },
                                    "vNetDnsServers": {
                                      "type": "array"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks",
                                      "apiVersion": "2023-11-01",
                                      "name": "[parameters('name')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Network/virtualNetworks'), createObject()), parameters('mlzTags'))]",
                                      "properties": {
                                        "addressSpace": {
                                          "addressPrefixes": [
                                            "[parameters('addressPrefix')]"
                                          ]
                                        },
                                        "subnets": "[parameters('subnets')]",
                                        "dhcpOptions": "[if(empty(parameters('vNetDnsServers')), null(), createObject('dnsServers', parameters('vNetDnsServers')))]"
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "addressPrefix": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('name')), '2023-11-01').addressSpace.addressPrefixes[0]]"
                                    },
                                    "dnsServers": {
                                      "type": "array",
                                      "value": "[parameters('vNetDnsServers')]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                                    },
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    },
                                    "subnets": {
                                      "type": "array",
                                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('name')), '2023-11-01').subnets]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'networkSecurityGroup')]",
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'routeTable')]"
                              ]
                            }
                          ],
                          "outputs": {
                            "networkSecurityGroupName": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'networkSecurityGroup'), '2022-09-01').outputs.name.value]"
                            },
                            "networkSecurityGroupResourceId": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'networkSecurityGroup'), '2022-09-01').outputs.id.value]"
                            },
                            "subnets": {
                              "type": "array",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.subnets.value]"
                            },
                            "virtualNetworkAddressPrefix": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.addressPrefix.value]"
                            },
                            "virtualNetworkName": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.name.value]"
                            },
                            "virtualNetworkResourceId": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'virtualNetwork'), '2022-09-01').outputs.id.value]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix')))]",
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-spoke-peering-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "hubVirtualNetworkResourceId": {
                            "value": "[parameters('hubVirtualNetworkResourceId')]"
                          },
                          "resourceGroupName": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.name.value]"
                          },
                          "spokeShortName": {
                            "value": "[parameters('network').shortName]"
                          },
                          "spokeVirtualNetworkName": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.virtualNetworkName.value]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('network').subscriptionId]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "1248922175458372398"
                            }
                          },
                          "parameters": {
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "hubVirtualNetworkResourceId": {
                              "type": "string"
                            },
                            "resourceGroupName": {
                              "type": "string"
                            },
                            "spokeShortName": {
                              "type": "string"
                            },
                            "spokeVirtualNetworkName": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('peer-{0}-to-hub-{1}', parameters('spokeShortName'), parameters('deploymentNameSuffix'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "remoteVirtualNetworkResourceId": {
                                    "value": "[parameters('hubVirtualNetworkResourceId')]"
                                  },
                                  "virtualNetworkName": {
                                    "value": "[parameters('spokeVirtualNetworkName')]"
                                  },
                                  "virtualNetworkPeerName": {
                                    "value": "[format('to-{0}', split(parameters('hubVirtualNetworkResourceId'), '/')[8])]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "801894697882634757"
                                    }
                                  },
                                  "parameters": {
                                    "remoteVirtualNetworkResourceId": {
                                      "type": "string"
                                    },
                                    "virtualNetworkName": {
                                      "type": "string"
                                    },
                                    "virtualNetworkPeerName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                      "apiVersion": "2021-02-01",
                                      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('virtualNetworkPeerName'))]",
                                      "properties": {
                                        "allowForwardedTraffic": true,
                                        "remoteVirtualNetwork": {
                                          "id": "[parameters('remoteVirtualNetworkResourceId')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix')))]",
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-hub-peering-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "hubVirtualNetworkName": {
                            "value": "[split(parameters('hubVirtualNetworkResourceId'), '/')[8]]"
                          },
                          "resourceGroupName": {
                            "value": "[split(parameters('hubVirtualNetworkResourceId'), '/')[4]]"
                          },
                          "spokeShortName": {
                            "value": "[parameters('network').shortName]"
                          },
                          "spokeVirtualNetworkResourceId": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.virtualNetworkResourceId.value]"
                          },
                          "subscriptionId": {
                            "value": "[split(parameters('hubVirtualNetworkResourceId'), '/')[2]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "5295159043458031616"
                            }
                          },
                          "parameters": {
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "hubVirtualNetworkName": {
                              "type": "string"
                            },
                            "resourceGroupName": {
                              "type": "string"
                            },
                            "spokeShortName": {
                              "type": "string"
                            },
                            "spokeVirtualNetworkResourceId": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('peer-hub-to-{0}-{1}', parameters('spokeShortName'), parameters('deploymentNameSuffix'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "remoteVirtualNetworkResourceId": {
                                    "value": "[parameters('spokeVirtualNetworkResourceId')]"
                                  },
                                  "virtualNetworkName": {
                                    "value": "[parameters('hubVirtualNetworkName')]"
                                  },
                                  "virtualNetworkPeerName": {
                                    "value": "[format('to-{0}', split(parameters('spokeVirtualNetworkResourceId'), '/')[8])]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "801894697882634757"
                                    }
                                  },
                                  "parameters": {
                                    "remoteVirtualNetworkResourceId": {
                                      "type": "string"
                                    },
                                    "virtualNetworkName": {
                                      "type": "string"
                                    },
                                    "virtualNetworkPeerName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                                      "apiVersion": "2021-02-01",
                                      "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('virtualNetworkPeerName'))]",
                                      "properties": {
                                        "allowForwardedTraffic": true,
                                        "remoteVirtualNetwork": {
                                          "id": "[parameters('remoteVirtualNetworkResourceId')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "delimiter": {
                      "type": "string",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value]"
                    },
                    "locationProperties": {
                      "type": "object",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.locationProperties.value]"
                    },
                    "mlzTags": {
                      "type": "object",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
                    },
                    "privateDnsZones": {
                      "type": "array",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.privateDnsZones.value]"
                    },
                    "resourceAbbreviations": {
                      "type": "object",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.resourceAbbreviations.value]"
                    },
                    "tier": {
                      "type": "object",
                      "value": {
                        "name": "[parameters('network').name]",
                        "namingConvention": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('get-logic-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tiers.value[0].namingConvention]",
                        "networkSecurityGroupResourceId": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.networkSecurityGroupResourceId.value]",
                        "resourceGroupName": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}-{1}{2}', parameters('network').shortName, parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.name.value]",
                        "shortName": "[parameters('network').shortName]",
                        "subnetResourceId": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.subnets.value[0].id]",
                        "subnets": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.subnets.value]",
                        "subscriptionId": "[parameters('network').subscriptionId]"
                      }
                    },
                    "virtualNetworkName": {
                      "type": "string",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-spoke-{0}-{1}', parameters('network').shortName, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.virtualNetworkName.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-storage-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "blobsPrivateDnsZoneResourceId": {
                    "value": "[resourceId(variables('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                  },
                  "delimiter": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value]"
                  },
                  "deploymentNameSuffix": {
                    "value": "[parameters('deploymentNameSuffix')]"
                  },
                  "filesPrivateDnsZoneResourceId": {
                    "value": "[resourceId(variables('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logStorageSkuName": {
                    "value": "[parameters('logStorageSkuName')]"
                  },
                  "mlzTags": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
                  },
                  "queuesPrivateDnsZoneResourceId": {
                    "value": "[resourceId(variables('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', environment().suffixes.storage))]"
                  },
                  "resourceAbbreviations": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.resourceAbbreviations.value]"
                  },
                  "resourceGroupName": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.resourceGroupName]"
                  },
                  "subnetResourceId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.subnetResourceId]"
                  },
                  "tablesPrivateDnsZoneResourceId": {
                    "value": "[resourceId(variables('hubSubscriptionId'), variables('hubResourceGroupName'), 'Microsoft.Network/privateDnsZones', format('privatelink.table.{0}', environment().suffixes.storage))]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "tier": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value]"
                  },
                  "deploymentIndex": {
                    "value": "[variables('deploymentIndex')]"
                  },
                  "environmentAbbreviation": {
                    "value": "[parameters('environmentAbbreviation')]"
                  },
                  "hubResourceGroupName": {
                    "value": "[variables('hubResourceGroupName')]"
                  },
                  "hubSubscriptionId": {
                    "value": "[variables('hubSubscriptionId')]"
                  },
                  "workloadShortName": {
                    "value": "[parameters('workloadShortName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "15628948249104043707"
                    }
                  },
                  "parameters": {
                    "blobsPrivateDnsZoneResourceId": {
                      "type": "string"
                    },
                    "delimiter": {
                      "type": "string"
                    },
                    "deploymentIndex": {
                      "type": "string"
                    },
                    "deploymentNameSuffix": {
                      "type": "string"
                    },
                    "environmentAbbreviation": {
                      "type": "string"
                    },
                    "filesPrivateDnsZoneResourceId": {
                      "type": "string"
                    },
                    "hubSubscriptionId": {
                      "type": "string"
                    },
                    "hubResourceGroupName": {
                      "type": "string"
                    },
                    "logStorageSkuName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "mlzTags": {
                      "type": "object"
                    },
                    "queuesPrivateDnsZoneResourceId": {
                      "type": "string"
                    },
                    "resourceAbbreviations": {
                      "type": "object"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "subnetResourceId": {
                      "type": "string"
                    },
                    "tablesPrivateDnsZoneResourceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "tier": {
                      "type": "object"
                    },
                    "workloadShortName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "delimiter": {
                            "value": "[parameters('delimiter')]"
                          },
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "environmentAbbreviation": {
                            "value": "[parameters('environmentAbbreviation')]"
                          },
                          "keyName": {
                            "value": "StorageEncryptionKey"
                          },
                          "keyVaultPrivateDnsZoneResourceId": {
                            "value": "[resourceId(parameters('hubSubscriptionId'), parameters('hubResourceGroupName'), 'Microsoft.Network/privateDnsZones', replace(format('privatelink{0}', environment().suffixes.keyvaultDns), 'vault', 'vaultcore'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mlzTags": {
                            "value": "[parameters('mlzTags')]"
                          },
                          "resourceAbbreviations": {
                            "value": "[parameters('resourceAbbreviations')]"
                          },
                          "resourceGroupName": {
                            "value": "[parameters('tier').resourceGroupName]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "tier": {
                            "value": "[parameters('tier')]"
                          },
                          "type": {
                            "value": "storageAccount"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "5328127560295829214"
                            }
                          },
                          "parameters": {
                            "delimiter": {
                              "type": "string"
                            },
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "environmentAbbreviation": {
                              "type": "string"
                            },
                            "keyName": {
                              "type": "string"
                            },
                            "keyVaultPrivateDnsZoneResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "mlzTags": {
                              "type": "object"
                            },
                            "resourceAbbreviations": {
                              "type": "object"
                            },
                            "resourceGroupName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            },
                            "tier": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string",
                              "allowedValues": [
                                "storageAccount",
                                "virtualMachine"
                              ]
                            }
                          },
                          "variables": {
                            "workload": "cmk"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('deploy-cmk-id-{0}', parameters('deploymentNameSuffix'))]",
                              "subscriptionId": "[parameters('tier').subscriptionId]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "userAssignedIdentityName": {
                                    "value": "[format('{0}{1}{2}', parameters('tier').namingConvention.userAssignedIdentity, parameters('delimiter'), variables('workload'))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "15063709953911427599"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "tags": {
                                      "type": "object"
                                    },
                                    "userAssignedIdentityName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                                      "apiVersion": "2018-11-30",
                                      "name": "[parameters('userAssignedIdentityName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject()), parameters('mlzTags'))]"
                                    },
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2020-04-01-preview",
                                      "name": "[guid(parameters('userAssignedIdentityName'), 'e147488a-f6f5-4113-8e2d-b22465e65bf6', resourceGroup().id)]",
                                      "properties": {
                                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName')), '2018-11-30').principalId]",
                                        "principalType": "ServicePrincipal",
                                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]"
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "resourceId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))]",
                              "subscriptionId": "[parameters('tier').subscriptionId]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "environmentAbbreviation": {
                                    "value": "[parameters('environmentAbbreviation')]"
                                  },
                                  "keyName": {
                                    "value": "[parameters('keyName')]"
                                  },
                                  "keyVaultName": {
                                    "value": "[format('{0}{1}', parameters('resourceAbbreviations').keyVaults, uniqueString(parameters('tier').subscriptionId, parameters('resourceGroupName'), parameters('tier').namingConvention.keyVault, variables('workload')))]"
                                  },
                                  "keyVaultNetworkInterfaceName": {
                                    "value": "[format('{0}{1}{2}', parameters('tier').namingConvention.keyVaultNetworkInterface, parameters('delimiter'), variables('workload'))]"
                                  },
                                  "keyVaultPrivateDnsZoneResourceId": {
                                    "value": "[parameters('keyVaultPrivateDnsZoneResourceId')]"
                                  },
                                  "keyVaultPrivateEndpointName": {
                                    "value": "[format('{0}{1}{2}', parameters('tier').namingConvention.keyVaultPrivateEndpoint, parameters('delimiter'), variables('workload'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "subnetResourceId": {
                                    "value": "[parameters('tier').subnetResourceId]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "8921990921872415034"
                                    }
                                  },
                                  "parameters": {
                                    "environmentAbbreviation": {
                                      "type": "string"
                                    },
                                    "keyExpirationInDays": {
                                      "type": "int",
                                      "defaultValue": 30
                                    },
                                    "keyName": {
                                      "type": "string"
                                    },
                                    "keyVaultName": {
                                      "type": "string"
                                    },
                                    "keyVaultNetworkInterfaceName": {
                                      "type": "string"
                                    },
                                    "keyVaultPrivateDnsZoneResourceId": {
                                      "type": "string"
                                    },
                                    "keyVaultPrivateEndpointName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "subnetResourceId": {
                                      "type": "string"
                                    },
                                    "tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.KeyVault/vaults",
                                      "apiVersion": "2022-07-01",
                                      "name": "[parameters('keyVaultName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.KeyVault/vaults'), createObject()), parameters('mlzTags'))]",
                                      "properties": {
                                        "enabledForDeployment": false,
                                        "enabledForDiskEncryption": false,
                                        "enabledForTemplateDeployment": false,
                                        "enablePurgeProtection": true,
                                        "enableRbacAuthorization": true,
                                        "enableSoftDelete": true,
                                        "networkAcls": {
                                          "bypass": "AzureServices",
                                          "defaultAction": "Deny",
                                          "ipRules": [],
                                          "virtualNetworkRules": []
                                        },
                                        "publicNetworkAccess": "Disabled",
                                        "sku": {
                                          "family": "A",
                                          "name": "premium"
                                        },
                                        "softDeleteRetentionInDays": "[if(or(equals(parameters('environmentAbbreviation'), 'dev'), equals(parameters('environmentAbbreviation'), 'test')), 7, 90)]",
                                        "tenantId": "[subscription().tenantId]"
                                      }
                                    },
                                    {
                                      "type": "Microsoft.KeyVault/vaults/keys",
                                      "apiVersion": "2022-07-01",
                                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyName'))]",
                                      "properties": {
                                        "attributes": {
                                          "enabled": true
                                        },
                                        "keySize": 4096,
                                        "kty": "RSA-HSM",
                                        "rotationPolicy": {
                                          "attributes": {
                                            "expiryTime": "[format('P{0}D', string(parameters('keyExpirationInDays')))]"
                                          },
                                          "lifetimeActions": [
                                            {
                                              "action": {
                                                "type": "Notify"
                                              },
                                              "trigger": {
                                                "timeBeforeExpiry": "P10D"
                                              }
                                            },
                                            {
                                              "action": {
                                                "type": "Rotate"
                                              },
                                              "trigger": {
                                                "timeAfterCreate": "[format('P{0}D', string(sub(parameters('keyExpirationInDays'), 7)))]"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints",
                                      "apiVersion": "2023-04-01",
                                      "name": "[parameters('keyVaultPrivateEndpointName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Network/privateEndpoints'), createObject()), parameters('mlzTags'))]",
                                      "properties": {
                                        "customNetworkInterfaceName": "[parameters('keyVaultNetworkInterfaceName')]",
                                        "privateLinkServiceConnections": [
                                          {
                                            "name": "[parameters('keyVaultPrivateEndpointName')]",
                                            "properties": {
                                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                                              "groupIds": [
                                                "vault"
                                              ]
                                            }
                                          }
                                        ],
                                        "subnet": {
                                          "id": "[parameters('subnetResourceId')]"
                                        }
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), parameters('keyName'))]",
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                                      "apiVersion": "2021-08-01",
                                      "name": "[format('{0}/{1}', parameters('keyVaultPrivateEndpointName'), parameters('keyVaultName'))]",
                                      "properties": {
                                        "privateDnsZoneConfigs": [
                                          {
                                            "name": "ipconfig1",
                                            "properties": {
                                              "privateDnsZoneId": "[parameters('keyVaultPrivateDnsZoneResourceId')]"
                                            }
                                          }
                                        ]
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('keyVaultPrivateEndpointName'))]",
                                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "keyName": {
                                      "type": "string",
                                      "value": "[parameters('keyName')]"
                                    },
                                    "keyUriWithVersion": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), parameters('keyName')), '2022-07-01').keyUriWithVersion]"
                                    },
                                    "keyVaultName": {
                                      "type": "string",
                                      "value": "[parameters('keyVaultName')]"
                                    },
                                    "keyVaultResourceId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                                    },
                                    "keyVaultUri": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri]"
                                    },
                                    "networkInterfaceResourceId": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('keyVaultPrivateEndpointName')), '2023-04-01').networkInterfaces[0].id]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-id-{0}', parameters('deploymentNameSuffix')))]"
                              ]
                            },
                            {
                              "condition": "[equals(parameters('type'), 'virtualMachine')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('deploy-cmk-des-{0}', parameters('deploymentNameSuffix'))]",
                              "subscriptionId": "[parameters('tier').subscriptionId]",
                              "resourceGroup": "[parameters('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "deploymentNameSuffix": {
                                    "value": "[parameters('deploymentNameSuffix')]"
                                  },
                                  "diskEncryptionSetName": {
                                    "value": "[format('{0}{1}{2}', parameters('tier').namingConvention.diskEncryptionSet, parameters('delimiter'), variables('workload'))]"
                                  },
                                  "keyUrl": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyUriWithVersion.value]"
                                  },
                                  "keyVaultResourceId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultResourceId.value]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mlzTags": {
                                    "value": "[parameters('mlzTags')]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "2365349126960811292"
                                    }
                                  },
                                  "parameters": {
                                    "deploymentNameSuffix": {
                                      "type": "string"
                                    },
                                    "diskEncryptionSetName": {
                                      "type": "string"
                                    },
                                    "keyUrl": {
                                      "type": "string"
                                    },
                                    "keyVaultResourceId": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "mlzTags": {
                                      "type": "object"
                                    },
                                    "tags": {
                                      "type": "object"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/diskEncryptionSets",
                                      "apiVersion": "2023-04-02",
                                      "name": "[parameters('diskEncryptionSetName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Compute/diskEncryptionSets'), createObject()), parameters('mlzTags'))]",
                                      "identity": {
                                        "type": "SystemAssigned"
                                      },
                                      "properties": {
                                        "activeKey": {
                                          "sourceVault": {
                                            "id": "[parameters('keyVaultResourceId')]"
                                          },
                                          "keyUrl": "[parameters('keyUrl')]"
                                        },
                                        "encryptionType": "EncryptionAtRestWithPlatformAndCustomerKeys",
                                        "rotationToLatestKeyVersionEnabled": true
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('assign-role-des-{0}', parameters('deploymentNameSuffix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "principalId": {
                                            "value": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptionSetName')), '2023-04-02', 'full').identity.principalId]"
                                          },
                                          "principalType": {
                                            "value": "ServicePrincipal"
                                          },
                                          "roleDefinitionId": {
                                            "value": "[resourceId('Microsoft.Authorization/roleDefinitions', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]"
                                          },
                                          "targetResourceId": {
                                            "value": "[resourceGroup().id]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.37.4.10188",
                                              "templateHash": "536828988134299254"
                                            }
                                          },
                                          "parameters": {
                                            "targetResourceId": {
                                              "type": "string"
                                            },
                                            "roleDefinitionId": {
                                              "type": "string"
                                            },
                                            "principalId": {
                                              "type": "string"
                                            },
                                            "principalType": {
                                              "type": "string",
                                              "defaultValue": "ServicePrincipal",
                                              "allowedValues": [
                                                "ForeignGroup",
                                                "Group",
                                                "ServicePrincipal",
                                                "User"
                                              ]
                                            },
                                            "description": {
                                              "type": "string",
                                              "defaultValue": ""
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/roleAssignments",
                                              "apiVersion": "2020-04-01-preview",
                                              "name": "[guid(parameters('targetResourceId'), parameters('roleDefinitionId'), parameters('principalId'))]",
                                              "properties": {
                                                "principalId": "[parameters('principalId')]",
                                                "principalType": "[parameters('principalType')]",
                                                "roleDefinitionId": "[parameters('roleDefinitionId')]",
                                                "description": "[parameters('description')]"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptionSetName'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "resourceId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptionSetName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix')))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "diskEncryptionSetResourceId": {
                              "type": "string",
                              "value": "[if(equals(parameters('type'), 'virtualMachine'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-des-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.resourceId.value, '')]"
                            },
                            "keyVaultProperties": {
                              "type": "object",
                              "value": {
                                "diagnosticSettingName": "[format('{0}{1}{2}', parameters('tier').namingConvention.keyVaultDiagnosticSetting, parameters('delimiter'), variables('workload'))]",
                                "name": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultName.value]",
                                "resourceGroupName": "[parameters('resourceGroupName')]",
                                "subscriptionId": "[parameters('tier').subscriptionId]",
                                "tierName": "[parameters('tier').name]"
                              }
                            },
                            "keyName": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyName.value]"
                            },
                            "keyUriWithVersion": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyUriWithVersion.value]"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultName.value]"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultUri.value]"
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultResourceId.value]"
                            },
                            "keyVaultNetworkInterfaceResourceId": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-kv-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.networkInterfaceResourceId.value]"
                            },
                            "userAssignedIdentityResourceId": {
                              "type": "string",
                              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-cmk-id-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.resourceId.value]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-sa-log-{0}-{1}', parameters('tier').name, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tier').subscriptionId]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "blobsPrivateDnsZoneResourceId": {
                            "value": "[parameters('blobsPrivateDnsZoneResourceId')]"
                          },
                          "filesPrivateDnsZoneResourceId": {
                            "value": "[parameters('filesPrivateDnsZoneResourceId')]"
                          },
                          "keyVaultUri": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultUri.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mlzTags": {
                            "value": "[parameters('mlzTags')]"
                          },
                          "queuesPrivateDnsZoneResourceId": {
                            "value": "[parameters('queuesPrivateDnsZoneResourceId')]"
                          },
                          "skuName": {
                            "value": "[parameters('logStorageSkuName')]"
                          },
                          "storageEncryptionKeyName": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyName.value]"
                          },
                          "subnetResourceId": {
                            "value": "[parameters('subnetResourceId')]"
                          },
                          "tablesPrivateDnsZoneResourceId": {
                            "value": "[parameters('tablesPrivateDnsZoneResourceId')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "tier": {
                            "value": "[parameters('tier')]"
                          },
                          "userAssignedIdentityResourceId": {
                            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.userAssignedIdentityResourceId.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "5979843073376460193"
                            }
                          },
                          "parameters": {
                            "blobsPrivateDnsZoneResourceId": {
                              "type": "string"
                            },
                            "filesPrivateDnsZoneResourceId": {
                              "type": "string"
                            },
                            "keyVaultUri": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "mlzTags": {
                              "type": "object"
                            },
                            "queuesPrivateDnsZoneResourceId": {
                              "type": "string"
                            },
                            "skuName": {
                              "type": "string"
                            },
                            "storageEncryptionKeyName": {
                              "type": "string"
                            },
                            "subnetResourceId": {
                              "type": "string"
                            },
                            "tablesPrivateDnsZoneResourceId": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            },
                            "tier": {
                              "type": "object"
                            },
                            "userAssignedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "subResources": [
                              {
                                "id": "[parameters('blobsPrivateDnsZoneResourceId')]",
                                "nic": "[format('{0}', parameters('tier').namingConvention.storageAccountBlobNetworkInterface)]",
                                "pe": "[format('{0}', parameters('tier').namingConvention.storageAccountBlobPrivateEndpoint)]"
                              },
                              {
                                "id": "[parameters('filesPrivateDnsZoneResourceId')]",
                                "nic": "[format('{0}', parameters('tier').namingConvention.storageAccountFileNetworkInterface)]",
                                "pe": "[format('{0}', parameters('tier').namingConvention.storageAccountFilePrivateEndpoint)]"
                              },
                              {
                                "id": "[parameters('queuesPrivateDnsZoneResourceId')]",
                                "nic": "[format('{0}', parameters('tier').namingConvention.storageAccountQueueNetworkInterface)]",
                                "pe": "[format('{0}', parameters('tier').namingConvention.storageAccountQueuePrivateEndpoint)]"
                              },
                              {
                                "id": "[parameters('tablesPrivateDnsZoneResourceId')]",
                                "nic": "[format('{0}', parameters('tier').namingConvention.storageAccountTableNetworkInterface)]",
                                "pe": "[format('{0}', parameters('tier').namingConvention.storageAccountTablePrivateEndpoint)]"
                              }
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2023-01-01",
                              "name": "[uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id)]",
                              "location": "[parameters('location')]",
                              "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Storage/storageAccounts'), createObject()), parameters('mlzTags'))]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userAssignedIdentityResourceId'))]": {}
                                }
                              },
                              "kind": "StorageV2",
                              "sku": {
                                "name": "[parameters('skuName')]"
                              },
                              "properties": {
                                "accessTier": "Hot",
                                "allowBlobPublicAccess": false,
                                "allowCrossTenantReplication": false,
                                "allowedCopyScope": "PrivateLink",
                                "allowSharedKeyAccess": false,
                                "defaultToOAuthAuthentication": false,
                                "dnsEndpointType": "Standard",
                                "encryption": {
                                  "identity": {
                                    "userAssignedIdentity": "[parameters('userAssignedIdentityResourceId')]"
                                  },
                                  "keySource": "Microsoft.KeyVault",
                                  "keyvaultproperties": {
                                    "keyvaulturi": "[parameters('keyVaultUri')]",
                                    "keyname": "[parameters('storageEncryptionKeyName')]"
                                  },
                                  "requireInfrastructureEncryption": true,
                                  "services": {
                                    "blob": {
                                      "keyType": "Account",
                                      "enabled": true
                                    },
                                    "file": {
                                      "keyType": "Account",
                                      "enabled": true
                                    },
                                    "queue": {
                                      "keyType": "Account",
                                      "enabled": true
                                    },
                                    "table": {
                                      "keyType": "Account",
                                      "enabled": true
                                    }
                                  }
                                },
                                "minimumTlsVersion": "TLS1_2",
                                "networkAcls": {
                                  "bypass": "AzureServices",
                                  "virtualNetworkRules": [],
                                  "ipRules": [],
                                  "defaultAction": "Deny"
                                },
                                "publicNetworkAccess": "Disabled",
                                "supportsHttpsTrafficOnly": true
                              }
                            },
                            {
                              "copy": {
                                "name": "privateEndpoints",
                                "count": "[length(variables('subResources'))]"
                              },
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2023-04-01",
                              "name": "[variables('subResources')[copyIndex()].pe]",
                              "location": "[parameters('location')]",
                              "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Network/privateEndpoints'), createObject()), parameters('mlzTags'))]",
                              "properties": {
                                "customNetworkInterfaceName": "[variables('subResources')[copyIndex()].nic]",
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[variables('subResources')[copyIndex()].pe]",
                                    "properties": {
                                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id))]",
                                      "groupIds": [
                                        "[split(split(variables('subResources')[copyIndex()].id, '/')[8], '.')[1]]"
                                      ]
                                    }
                                  }
                                ],
                                "subnet": {
                                  "id": "[parameters('subnetResourceId')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id))]"
                              ]
                            },
                            {
                              "copy": {
                                "name": "privateDnsZoneGroups",
                                "count": "[length(variables('subResources'))]"
                              },
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2021-08-01",
                              "name": "[format('{0}/{1}', variables('subResources')[copyIndex()].pe, uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id))]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "privateDnsZoneId": "[variables('subResources')[copyIndex()].id]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', variables('subResources')[copyIndex()].pe)]",
                                "[resourceId('Microsoft.Storage/storageAccounts', uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', uniqueString(parameters('tier').namingConvention.storageAccount, resourceGroup().id))]"
                            },
                            "networkInterfaceResourceIds": {
                              "type": "array",
                              "copy": {
                                "count": "[length(variables('subResources'))]",
                                "input": "[reference(resourceId('Microsoft.Network/privateEndpoints', variables('subResources')[copyIndex()].pe), '2023-04-01').networkInterfaces[0].id]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyVaultName": {
                      "type": "string",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultName.value]"
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultUri.value]"
                    },
                    "networkInterfaceResourceIds": {
                      "type": "array",
                      "value": "[union(createArray(reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultNetworkInterfaceResourceId.value), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-sa-log-{0}-{1}', parameters('tier').name, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.networkInterfaceResourceIds.value)]"
                    },
                    "storageAccountResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('tier').subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-sa-log-{0}-{1}', parameters('tier').name, parameters('deploymentNameSuffix'))), '2022-09-01').outputs.id.value]"
                    },
                    "userAssignedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-cmk-{0}-{1}{2}', parameters('workloadShortName'), parameters('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.userAssignedIdentityResourceId.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-diag-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "deployActivityLogDiagnosticSetting": {
                    "value": "[parameters('deployActivityLogDiagnosticSetting')]"
                  },
                  "deploymentNameSuffix": {
                    "value": "[parameters('deploymentNameSuffix')]"
                  },
                  "deployNetworkWatcherTrafficAnalytics": {
                    "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
                  },
                  "keyVaultDiagnosticLogs": {
                    "value": "[parameters('keyVaultDiagnosticLogs')]"
                  },
                  "keyVaultDiagnosticMetrics": {
                    "value": "[parameters('keyVaultDiagnosticMetrics')]"
                  },
                  "keyVaultName": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-storage-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.keyVaultName.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                  },
                  "networkInterfaceDiagnosticsMetrics": {
                    "value": "[parameters('networkInterfaceDiagnosticsMetrics')]"
                  },
                  "networkInterfaceResourceIds": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-storage-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.networkInterfaceResourceIds.value]"
                  },
                  "networkSecurityGroupDiagnosticsLogs": {
                    "value": "[parameters('networkSecurityGroupDiagnosticsLogs')]"
                  },
                  "networkWatcherFlowLogsRetentionDays": {
                    "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
                  },
                  "networkWatcherFlowLogsType": {
                    "value": "[parameters('networkWatcherFlowLogsType')]"
                  },
                  "storageAccountResourceId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-storage-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.storageAccountResourceId.value]"
                  },
                  "tier": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value]"
                  },
                  "virtualNetworkDiagnosticsLogs": {
                    "value": "[parameters('virtualNetworkDiagnosticsLogs')]"
                  },
                  "virtualNetworkDiagnosticsMetrics": {
                    "value": "[parameters('virtualNetworkDiagnosticsMetrics')]"
                  },
                  "virtualNetworkName": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.virtualNetworkName.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10449406092826740922"
                    }
                  },
                  "parameters": {
                    "deployActivityLogDiagnosticSetting": {
                      "type": "bool"
                    },
                    "deploymentNameSuffix": {
                      "type": "string"
                    },
                    "deployNetworkWatcherTrafficAnalytics": {
                      "type": "bool"
                    },
                    "keyVaultDiagnosticLogs": {
                      "type": "array"
                    },
                    "keyVaultDiagnosticMetrics": {
                      "type": "array"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "logAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "networkInterfaceDiagnosticsMetrics": {
                      "type": "array"
                    },
                    "networkInterfaceResourceIds": {
                      "type": "array"
                    },
                    "networkSecurityGroupDiagnosticsLogs": {
                      "type": "array"
                    },
                    "networkWatcherFlowLogsRetentionDays": {
                      "type": "int"
                    },
                    "networkWatcherFlowLogsType": {
                      "type": "string"
                    },
                    "storageAccountResourceId": {
                      "type": "string"
                    },
                    "tier": {
                      "type": "object"
                    },
                    "virtualNetworkDiagnosticsLogs": {
                      "type": "array"
                    },
                    "virtualNetworkDiagnosticsMetrics": {
                      "type": "array"
                    },
                    "virtualNetworkName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployActivityLogDiagnosticSetting')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-activity-diags-{0}-{1}', parameters('tier').shortName, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tier').subscriptionId]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "logAnalyticsWorkspaceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15325478262882709617"
                            }
                          },
                          "parameters": {
                            "logAnalyticsWorkspaceId": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "name": "[format('diag-activity-log-{0}', subscription().subscriptionId)]",
                              "properties": {
                                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
                                "logs": [
                                  {
                                    "category": "Administrative",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Security",
                                    "enabled": true
                                  },
                                  {
                                    "category": "ServiceHealth",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Alert",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Recommendation",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Policy",
                                    "enabled": true
                                  },
                                  {
                                    "category": "Autoscale",
                                    "enabled": true
                                  },
                                  {
                                    "category": "ResourceHealth",
                                    "enabled": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-kv-diags-{0}-{1}', parameters('tier').shortName, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tier').subscriptionId]",
                      "resourceGroup": "[parameters('tier').resourceGroupName]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultDiagnosticSettingName": {
                            "value": "[parameters('tier').namingConvention.keyVaultDiagnosticSetting]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultStorageAccountId": {
                            "value": "[parameters('storageAccountResourceId')]"
                          },
                          "logAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          },
                          "logs": {
                            "value": "[parameters('keyVaultDiagnosticLogs')]"
                          },
                          "metrics": {
                            "value": "[parameters('keyVaultDiagnosticMetrics')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "6369128777960943494"
                            }
                          },
                          "parameters": {
                            "keyVaultDiagnosticSettingName": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultStorageAccountId": {
                              "type": "string"
                            },
                            "logAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            },
                            "logs": {
                              "type": "array"
                            },
                            "metrics": {
                              "type": "array"
                            }
                          },
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                              "name": "[parameters('keyVaultDiagnosticSettingName')]",
                              "properties": {
                                "logs": "[parameters('logs')]",
                                "metrics": "[parameters('metrics')]",
                                "storageAccountId": "[parameters('keyVaultStorageAccountId')]",
                                "workspaceId": "[parameters('logAnalyticsWorkspaceResourceId')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-nsg-diags-{0}-{1}', parameters('tier').shortName, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tier').subscriptionId]",
                      "resourceGroup": "[parameters('tier').resourceGroupName]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "deployNetworkWatcherTrafficAnalytics": {
                            "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
                          },
                          "flowLogsName": {
                            "value": "[parameters('tier').namingConvention.networkWatcherFlowLogsNetworkSecurityGroup]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "logAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          },
                          "logs": {
                            "value": "[parameters('networkSecurityGroupDiagnosticsLogs')]"
                          },
                          "networkSecurityGroupDiagnosticSettingName": {
                            "value": "[parameters('tier').namingConvention.networkSecurityGroupDiagnosticSetting]"
                          },
                          "networkSecurityGroupName": {
                            "value": "[split(parameters('tier').networkSecurityGroupResourceId, '/')[8]]"
                          },
                          "networkWatcherFlowLogsRetentionDays": {
                            "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
                          },
                          "networkWatcherFlowLogsType": {
                            "value": "[parameters('networkWatcherFlowLogsType')]"
                          },
                          "storageAccountResourceId": {
                            "value": "[parameters('storageAccountResourceId')]"
                          },
                          "tiername": {
                            "value": "[parameters('tier').name]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3394634335513115491"
                            }
                          },
                          "parameters": {
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "deployNetworkWatcherTrafficAnalytics": {
                              "type": "bool"
                            },
                            "flowLogsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            },
                            "logs": {
                              "type": "array"
                            },
                            "networkSecurityGroupDiagnosticSettingName": {
                              "type": "string"
                            },
                            "networkSecurityGroupName": {
                              "type": "string"
                            },
                            "networkWatcherFlowLogsRetentionDays": {
                              "type": "int"
                            },
                            "networkWatcherFlowLogsType": {
                              "type": "string"
                            },
                            "storageAccountResourceId": {
                              "type": "string"
                            },
                            "tiername": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', parameters('networkSecurityGroupName'))]",
                              "name": "[parameters('networkSecurityGroupDiagnosticSettingName')]",
                              "properties": {
                                "logs": "[parameters('logs')]",
                                "metrics": [],
                                "storageAccountId": "[parameters('storageAccountResourceId')]",
                                "workspaceId": "[parameters('logAnalyticsWorkspaceResourceId')]"
                              }
                            },
                            {
                              "condition": "[equals(parameters('networkWatcherFlowLogsType'), 'NetworkSecurityGroup')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('deploy-{0}-flowLogs-{1}', parameters('tiername'), parameters('deploymentNameSuffix'))]",
                              "resourceGroup": "NetworkWatcherRG",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "deployNetworkWatcherTrafficAnalytics": {
                                    "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
                                  },
                                  "flowLogsName": {
                                    "value": "[parameters('flowLogsName')]"
                                  },
                                  "flowLogsRetentionDays": {
                                    "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "logAnalyticsWorkspaceResourceId": {
                                    "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                                  },
                                  "networkWatcherName": {
                                    "value": "[format('NetworkWatcher_{0}', parameters('location'))]"
                                  },
                                  "storageAccountResourceId": {
                                    "value": "[parameters('storageAccountResourceId')]"
                                  },
                                  "targetResourceId": {
                                    "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "12147312897421401786"
                                    }
                                  },
                                  "parameters": {
                                    "deployNetworkWatcherTrafficAnalytics": {
                                      "type": "bool"
                                    },
                                    "flowLogsName": {
                                      "type": "string"
                                    },
                                    "flowLogsRetentionDays": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "logAnalyticsWorkspaceResourceId": {
                                      "type": "string"
                                    },
                                    "networkWatcherName": {
                                      "type": "string"
                                    },
                                    "storageAccountResourceId": {
                                      "type": "string"
                                    },
                                    "targetResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkWatchers/flowLogs",
                                      "apiVersion": "2023-05-01",
                                      "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('flowLogsName'))]",
                                      "location": "[parameters('location')]",
                                      "properties": {
                                        "targetResourceId": "[parameters('targetResourceId')]",
                                        "enabled": true,
                                        "storageId": "[parameters('storageAccountResourceId')]",
                                        "flowAnalyticsConfiguration": {
                                          "networkWatcherFlowAnalyticsConfiguration": {
                                            "enabled": "[if(parameters('deployNetworkWatcherTrafficAnalytics'), parameters('deployNetworkWatcherTrafficAnalytics'), null())]",
                                            "workspaceResourceId": "[if(parameters('deployNetworkWatcherTrafficAnalytics'), parameters('logAnalyticsWorkspaceResourceId'), null())]"
                                          }
                                        },
                                        "format": {
                                          "type": "JSON",
                                          "version": 2
                                        },
                                        "retentionPolicy": {
                                          "days": "[parameters('flowLogsRetentionDays')]",
                                          "enabled": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-vnet-diags-{0}-{1}', parameters('tier').shortName, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tier').subscriptionId]",
                      "resourceGroup": "[parameters('tier').resourceGroupName]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deploymentNameSuffix": {
                            "value": "[parameters('deploymentNameSuffix')]"
                          },
                          "deployNetworkWatcherTrafficAnalytics": {
                            "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
                          },
                          "flowLogsName": {
                            "value": "[parameters('tier').namingConvention.networkWatcherFlowLogsVirtualNetwork]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "logAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          },
                          "logs": {
                            "value": "[parameters('virtualNetworkDiagnosticsLogs')]"
                          },
                          "logStorageAccountResourceId": {
                            "value": "[parameters('storageAccountResourceId')]"
                          },
                          "metrics": {
                            "value": "[parameters('virtualNetworkDiagnosticsMetrics')]"
                          },
                          "networkWatcherFlowLogsRetentionDays": {
                            "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
                          },
                          "networkWatcherFlowLogsType": {
                            "value": "[parameters('networkWatcherFlowLogsType')]"
                          },
                          "tiername": {
                            "value": "[parameters('tier').name]"
                          },
                          "virtualNetworkDiagnosticSettingName": {
                            "value": "[parameters('tier').namingConvention.virtualNetworkDiagnosticSetting]"
                          },
                          "virtualNetworkName": {
                            "value": "[parameters('virtualNetworkName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "1854215044794212322"
                            }
                          },
                          "parameters": {
                            "deploymentNameSuffix": {
                              "type": "string"
                            },
                            "deployNetworkWatcherTrafficAnalytics": {
                              "type": "bool"
                            },
                            "flowLogsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            },
                            "logs": {
                              "type": "array"
                            },
                            "logStorageAccountResourceId": {
                              "type": "string"
                            },
                            "metrics": {
                              "type": "array"
                            },
                            "networkWatcherFlowLogsRetentionDays": {
                              "type": "int"
                            },
                            "networkWatcherFlowLogsType": {
                              "type": "string"
                            },
                            "supportedClouds": {
                              "type": "array",
                              "defaultValue": [
                                "AzureCloud"
                              ]
                            },
                            "tiername": {
                              "type": "string"
                            },
                            "virtualNetworkDiagnosticSettingName": {
                              "type": "string"
                            },
                            "virtualNetworkName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.Network/virtualNetworks/{0}', parameters('virtualNetworkName'))]",
                              "name": "[parameters('virtualNetworkDiagnosticSettingName')]",
                              "properties": {
                                "storageAccountId": "[parameters('logStorageAccountResourceId')]",
                                "workspaceId": "[parameters('logAnalyticsWorkspaceResourceId')]",
                                "logs": "[if(contains(parameters('supportedClouds'), environment().name), parameters('logs'), createArray())]",
                                "metrics": "[parameters('metrics')]"
                              }
                            },
                            {
                              "condition": "[equals(parameters('networkWatcherFlowLogsType'), 'VirtualNetwork')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('deploy-{0}-flowLogs-{1}', parameters('tiername'), parameters('deploymentNameSuffix'))]",
                              "resourceGroup": "NetworkWatcherRG",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "deployNetworkWatcherTrafficAnalytics": {
                                    "value": "[parameters('deployNetworkWatcherTrafficAnalytics')]"
                                  },
                                  "flowLogsName": {
                                    "value": "[parameters('flowLogsName')]"
                                  },
                                  "flowLogsRetentionDays": {
                                    "value": "[parameters('networkWatcherFlowLogsRetentionDays')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "logAnalyticsWorkspaceResourceId": {
                                    "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                                  },
                                  "networkWatcherName": {
                                    "value": "[format('NetworkWatcher_{0}', parameters('location'))]"
                                  },
                                  "storageAccountResourceId": {
                                    "value": "[parameters('logStorageAccountResourceId')]"
                                  },
                                  "targetResourceId": {
                                    "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "12147312897421401786"
                                    }
                                  },
                                  "parameters": {
                                    "deployNetworkWatcherTrafficAnalytics": {
                                      "type": "bool"
                                    },
                                    "flowLogsName": {
                                      "type": "string"
                                    },
                                    "flowLogsRetentionDays": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "logAnalyticsWorkspaceResourceId": {
                                      "type": "string"
                                    },
                                    "networkWatcherName": {
                                      "type": "string"
                                    },
                                    "storageAccountResourceId": {
                                      "type": "string"
                                    },
                                    "targetResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Network/networkWatchers/flowLogs",
                                      "apiVersion": "2023-05-01",
                                      "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('flowLogsName'))]",
                                      "location": "[parameters('location')]",
                                      "properties": {
                                        "targetResourceId": "[parameters('targetResourceId')]",
                                        "enabled": true,
                                        "storageId": "[parameters('storageAccountResourceId')]",
                                        "flowAnalyticsConfiguration": {
                                          "networkWatcherFlowAnalyticsConfiguration": {
                                            "enabled": "[if(parameters('deployNetworkWatcherTrafficAnalytics'), parameters('deployNetworkWatcherTrafficAnalytics'), null())]",
                                            "workspaceResourceId": "[if(parameters('deployNetworkWatcherTrafficAnalytics'), parameters('logAnalyticsWorkspaceResourceId'), null())]"
                                          }
                                        },
                                        "format": {
                                          "type": "JSON",
                                          "version": 2
                                        },
                                        "retentionPolicy": {
                                          "days": "[parameters('flowLogsRetentionDays')]",
                                          "enabled": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "networkInterfaceDiagnostics",
                        "count": "[length(parameters('networkInterfaceResourceIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('deploy-nic-diags-{0}-{1}', copyIndex(), parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[split(parameters('networkInterfaceResourceIds')[copyIndex()], '/')[2]]",
                      "resourceGroup": "[split(parameters('networkInterfaceResourceIds')[copyIndex()], '/')[4]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "logAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          },
                          "logs": {
                            "value": []
                          },
                          "metrics": {
                            "value": "[parameters('networkInterfaceDiagnosticsMetrics')]"
                          },
                          "networkInterfaceResourceId": {
                            "value": "[parameters('networkInterfaceResourceIds')[copyIndex()]]"
                          },
                          "storageAccountResourceIds": {
                            "value": [
                              "[parameters('storageAccountResourceId')]"
                            ]
                          },
                          "tiers": {
                            "value": [
                              "[parameters('tier')]"
                            ]
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "17025255622354866713"
                            }
                          },
                          "parameters": {
                            "logAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            },
                            "logs": {
                              "type": "array"
                            },
                            "metrics": {
                              "type": "array"
                            },
                            "networkInterfaceResourceId": {
                              "type": "string"
                            },
                            "storageAccountResourceIds": {
                              "type": "array"
                            },
                            "tiers": {
                              "type": "array"
                            }
                          },
                          "variables": {
                            "networkInterfaceDiagnosticSettingName": "[parameters('tiers')[variables('tierIndex')].namingConvention.virtualMachineNetworkInterfaceDiagnosticSetting]",
                            "storageAccountResourceId": "[parameters('storageAccountResourceIds')[variables('tierIndex')]]",
                            "tierIndex": "[if(contains(parameters('networkInterfaceResourceId'), '-ops-'), 1, if(contains(parameters('networkInterfaceResourceId'), '-svcs-'), 2, if(contains(parameters('networkInterfaceResourceId'), '-id-'), 3, 0)))]"
                          },
                          "resources": [
                            {
                              "type": "microsoft.insights/diagnosticSettings",
                              "apiVersion": "2017-05-01-preview",
                              "scope": "[format('Microsoft.Network/networkInterfaces/{0}', split(parameters('networkInterfaceResourceId'), '/')[8])]",
                              "name": "[variables('networkInterfaceDiagnosticSettingName')]",
                              "properties": {
                                "logs": "[parameters('logs')]",
                                "metrics": "[parameters('metrics')]",
                                "storageAccountId": "[variables('storageAccountResourceId')]",
                                "workspaceId": "[parameters('logAnalyticsWorkspaceResourceId')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-storage-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix')))]"
              ]
            },
            {
              "condition": "[parameters('deployPolicy')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('assign-policy-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "deploymentNameSuffix": {
                    "value": "[parameters('deploymentNameSuffix')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                  },
                  "policy": {
                    "value": "[parameters('policy')]"
                  },
                  "tiers": {
                    "value": [
                      "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value]"
                    ]
                  },
                  "windowsAdministratorsGroupMembership": {
                    "value": "[parameters('windowsAdministratorsGroupMembership')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "2625269273659345021"
                    }
                  },
                  "parameters": {
                    "deploymentNameSuffix": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "logAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "policy": {
                      "type": "string"
                    },
                    "tiers": {
                      "type": "array"
                    },
                    "windowsAdministratorsGroupMembership": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "policyAssignment",
                        "count": "[length(parameters('tiers'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('assign-policy-{0}-{1}', parameters('tiers')[copyIndex()].name, parameters('deploymentNameSuffix'))]",
                      "subscriptionId": "[parameters('tiers')[copyIndex()].subscriptionId]",
                      "resourceGroup": "[parameters('tiers')[copyIndex()].resourceGroupName]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "builtInAssignment": {
                            "value": "[parameters('policy')]"
                          },
                          "logAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "deployRemediation": {
                            "value": false
                          },
                          "windowsAdministratorsGroupMembership": {
                            "value": "[parameters('windowsAdministratorsGroupMembership')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "8424833113535988895"
                            }
                          },
                          "parameters": {
                            "builtInAssignment": {
                              "type": "string"
                            },
                            "deployRemediation": {
                              "type": "bool"
                            },
                            "location": {
                              "type": "string"
                            },
                            "logAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            },
                            "windowsAdministratorsGroupMembership": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "$fxv#0": "{\r\n  \"listOfMembersToExcludeFromWindowsVMAdministratorsGroup\": {\r\n    \"value\": \"admin\"\r\n  },\r\n  \"IncludeArcMachines\": {\r\n    \"value\": \"true\"\r\n  },\r\n  \"MinimumTLSVersion-5752e6d6-1206-46d8-8ab1-ecc2f71a8112\": {\r\n    \"value\": \"1.2\"\r\n  },\r\n  \"NotAvailableMachineState-bed48b13-6647-468e-aa2f-1af1d3f4dd40\": {\r\n    \"value\": \"Compliant\"\r\n  },\r\n  \"requiredRetentionDays\": {\r\n    \"value\": \"365\"\r\n  },\r\n  \"resourceGroupName-b6e2945c-0b7b-40f5-9233-7a5323b5cdc6\": {\r\n    \"value\": \"NetworkWatcherRG\"\r\n  }\r\n}",
                            "$fxv#1": "{\r\n  \"IncludeArcMachines\": {\r\n    \"value\": \"true\"\r\n  },\r\n  \"MinimumTLSVersion-5752e6d6-1206-46d8-8ab1-ecc2f71a8112\": {\r\n    \"value\": \"1.2\"\r\n  },\r\n  \"NotAvailableMachineState-bed48b13-6647-468e-aa2f-1af1d3f4dd40\": {\r\n    \"value\": \"Compliant\"\r\n  },\r\n  \"requiredRetentionDays\": {\r\n    \"value\": \"365\"\r\n  },\r\n  \"resourceGroupName-b6e2945c-0b7b-40f5-9233-7a5323b5cdc6\": {\r\n    \"value\": \"NetworkWatcherRG\"\r\n  }\r\n}",
                            "$fxv#2": "{\r\n  \"IncludeArcMachines\": {\r\n    \"value\": \"false\"\r\n  },\r\n  \"NotAvailableMachineState-bed48b13-6647-468e-aa2f-1af1d3f4dd40\": {\r\n    \"value\": \"Compliant\"\r\n  },\r\n  \"MinimumTLSVersionForWindowsServers\": {\r\n    \"value\": \"1.2\"\r\n  },\r\n  \"requiredRetentionDays\": {\r\n    \"value\": \"365\"\r\n  },\r\n  \"effect-febd0533-8e55-448f-b837-bd0e06f16469\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"allowedContainerImagesRegex-febd0533-8e55-448f-b837-bd0e06f16469\": {\r\n    \"value\": \"^(.+){0}$\"\r\n  },\r\n  \"effect-95edb821-ddaf-4404-9732-666045e056b4\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-440b515e-a580-421e-abeb-b159a61ddcbc\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-233a2a17-77ca-4fb1-9b6b-69223d272a44\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-e345eecc-fa47-480f-9e88-67dcc122b164\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"cpuLimit-e345eecc-fa47-480f-9e88-67dcc122b164\": {\r\n    \"value\": \"0\"\r\n  },\r\n  \"memoryLimit-e345eecc-fa47-480f-9e88-67dcc122b164\": {\r\n    \"value\": \"0\"\r\n  },\r\n  \"effect-f06ddb64-5fa3-4b77-b166-acb36f7f6042\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"runAsUserRule-f06ddb64-5fa3-4b77-b166-acb36f7f6042\": {\r\n    \"value\": \"MustRunAsNonRoot\"\r\n  },\r\n  \"runAsGroupRule-f06ddb64-5fa3-4b77-b166-acb36f7f6042\": {\r\n    \"value\": \"RunAsAny\"\r\n  },\r\n  \"supplementalGroupsRule-f06ddb64-5fa3-4b77-b166-acb36f7f6042\": {\r\n    \"value\": \"RunAsAny\"\r\n  },\r\n  \"fsGroupRule-f06ddb64-5fa3-4b77-b166-acb36f7f6042\": {\r\n    \"value\": \"RunAsAny\"\r\n  },\r\n  \"effect-1c6e92c9-99f0-4e55-9cf2-0c234dc48f99\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-df49d893-a74c-421d-bc95-c663042e5b80\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-c26596ff-4d70-4e6a-9a30-c2506bd2f80c\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-511f5417-5d12-434d-ab2e-816901e72a5e\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-82985f06-dc18-4a48-bc1c-b9f4f0098cfe\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-098fc59e-46c7-4d99-9b16-64990e543d75\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"setting-a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9\": {\r\n    \"value\": \"enabled\"\r\n  },\r\n  \"aadAuthenticationInServiceFabricMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-71ef260a-8f18-47b7-abcb-62d0673d94dc\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-055aa869-bc98-4af8-bafc-23f1ab6ffe2c\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-564feb30-bf6a-4854-b4bb-0d2d2d1e6c66\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-d9da03a1-f3c3-412a-9709-947156872263\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-617c02be-7f02-4efd-8836-3180d47b6c68\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-0b60c0b2-2dc2-4e1c-b5c9-abbed971de53\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-ec068d99-e9c7-401f-8cef-5bdde4e6ccf1\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-c349d81b-9985-44ae-a8da-ff98d108ede8\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-3657f5a0-770e-44a3-b44e-9431ba1e9735\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-b4ac1030-89c5-4697-8e00-28b5ba6a8811\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-ea0dfaed-95fb-448c-934e-d6e713ce393d\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-4733ea7b-a883-42fe-8cac-97454c2a9e4a\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-f4b53539-8df9-40e4-86c6-6b607703bd4e\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-41425d9f-d1a5-499a-9932-f8ed8453932c\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-fc4d8e41-e223-45ea-9bf5-eada37891d87\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-86efb160-8de7-451d-bc08-5d475b0aadae\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-4ec52d6d-beb7-40c4-9a9e-fe753254690e\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-64d314f6-6062-4780-a861-c23e8951bee5\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1fd32ebd-e4c3-4e13-a54a-d7422d4d95f6\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-fa298e57-9444-42ba-bf04-86e8470e32c7\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-67121cc7-ff39-4ab8-b7e3-95b84dab487d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1f905d99-2ab7-462c-a6b0-f709acca6c8f\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-ba769a63-b8cc-4b2d-abf6-ac33c7204be8\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-81e74cea-30fd-40d5-802f-d72103c2aaaa\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-0aa61e00-0a01-4a3c-9945-e93cffedf0e6\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-47031206-ce96-41f8-861b-6a915f3de284\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-87ba29ef-1ab3-4d82-b763-87fcd4f531f7\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-51522a96-0869-4791-82f3-981000c2c67f\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-b5ec538c-daa0-4006-8596-35468b9148e8\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-56a5ee18-2ae6-4810-86f7-18e39ce5629b\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-2e94d99a-8a36-4563-bc77-810d8893b671\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1fafeaf6-7927-4059-a50a-8eb2a7a6f2b5\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-99e9ccd8-3db9-4592-b0d1-14b1715a4d8a\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1f68a601-6e6d-4e42-babf-3f643a047ea2\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-f7d52b2d-e161-4dfa-a82b-55e564167385\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-7d7be79c-23ba-4033-84dd-45e2a5ccdd67\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-ca91455f-eace-4f96-be59-e6e2c35b4816\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-702dd420-7fcc-42c5-afe8-4026edd20fe0\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"diagnosticsLogsInRedisCacheMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"secureTransferToStorageAccountMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-d0793b48-0edc-4296-a390-4c75d1bdfd71\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-7d092e0a-7acd-40d2-a975-dca21cae48c4\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-2a1a9cdf-e04d-429a-8416-3bfb72a1b26f\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"disableUnrestrictedNetworkToStorageAccountMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-55615ac9-af46-4a59-874e-391cc3dfb490\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1b8ca024-1d5c-4dec-8995-b1a932b41780\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-037eea7a-bd0a-46c5-9a66-03aea78705d3\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-53503636-bcc9-4748-9663-5348217f160f\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-40cec1dd-a100-4920-b15b-3024fe8901ab\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-0725b4dd-7e76-479c-a735-68e7ee23d5ca\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-a049bf77-880b-470f-ba6d-9f21c530cf83\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-ee980b6d-0eca-4501-8d54-f6290fd512c3\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1d84d5fb-01f6-4d12-ba4f-4a26081d403d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-37e0d2fe-28a5-43d6-a273-67d37d1f5606\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"identityDesignateMoreThanOneOwnerMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"diskEncryptionMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"emailNotificationToSubscriptionOwnerHighSeverityAlertsEnabledEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"functionAppDisableRemoteDebuggingMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"sqlDbEncryptionMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"vulnerabilityAssessmentOnManagedInstanceMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensurePHPVersionLatestForAPIAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"aadAuthenticationInSqlServerMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"vmssEndpointProtectionMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"vmssOsVulnerabilitiesMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"adaptiveApplicationControlsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"geoRedundantBackupShouldBeEnabledForAzureDatabaseForPostgreSQLEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"ensureJavaVersionLatestForWebAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityDesignateLessThanOwnersMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"securityContactEmailAddressForSubscriptionEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"webAppRestrictCORSAccessMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityRemoveExternalAccountWithWritePermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityRemoveExternalAccountWithReadPermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityRemoveDeprecatedAccountMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"functionAppEnforceHttpsMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"ensurePythonVersionLatestForWebAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensurePythonVersionLatestForFunctionAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensurePHPVersionLatestForWebAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensurePythonVersionLatestForAPIAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"geoRedundantBackupShouldBeEnabledForAzureDatabaseForMySQLEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"systemUpdatesMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensureJavaVersionLatestForAPIAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensureHTTPVersionLatestForWebAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"apiAppRequireLatestTlsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityEnableMFAForWritePermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensureHTTPVersionLatestForAPIAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensureJavaVersionLatestForFunctionAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"nextGenerationFirewallMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"useRbacRulesMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"webAppEnforceHttpsMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"sqlServerAuditingMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"vnetEnableDDoSProtectionMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityEnableMFAForOwnerPermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"sqlServerAdvancedDataSecurityMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"sqlManagedInstanceAdvancedDataSecurityMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"endpointProtectionMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"jitNetworkAccessMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"apiAppEnforceHttpsMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"geoRedundantStorageShouldBeEnabledForStorageAccountsEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"vmssSystemUpdatesMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"webAppDisableRemoteDebuggingMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"longtermGeoRedundantBackupEnabledAzureSQLDatabasesEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"systemConfigurationsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"ensureHTTPVersionLatestForFunctionAppEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityEnableMFAForReadPermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"containerBenchmarkMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"apiAppDisableRemoteDebuggingMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"vulnerabilityAssessmentOnServerMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"webAppRequireLatestTlsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"functionAppRequireLatestTlsMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"kubernetesServiceVersionUpToDateMonitoringEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"sqlDbVulnerabilityAssesmentMonitoringEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"membersToExcludeInLocalAdministratorsGroup\": {\r\n    \"value\": \"admin\"\r\n  },\r\n  \"PHPLatestVersionForAppServices\": {\r\n    \"value\": \"7.4\"\r\n  },\r\n  \"JavaLatestVersionForAppServices\": {\r\n    \"value\": \"11\"\r\n  },\r\n  \"WindowsPythonLatestVersionForAppServices\": {\r\n    \"value\": \"3.6\"\r\n  },\r\n  \"LinuxPythonLatestVersionForAppServices\": {\r\n    \"value\": \"3.9\"\r\n  },\r\n  \"ensureDotNetFrameworkLatestForFunctionAppEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"sqlManagedInstanceAdvancedDataSecurityEmailsMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"vulnerabilityAssessmentMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"ensureDotNetFrameworkLatestForWebAppEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"sqlServerAdvancedDataSecurityEmailsMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"microsoftIaaSAntimalwareExtensionShouldBeDeployedOnWindowsServersEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"securityCenterStandardPricingTierShouldBeSelectedEffect\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"theLogAnalyticsAgentShouldBeInstalledOnVirtualMachinesEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"ensurePHPVersionLatestForFunctionAppEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"sqlManagedInstanceAdvancedDataSecurityEmailAdminsMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"securityContactPhoneNumberShouldBeProvidedForSubscriptionEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"threatDetectionTypesOnManagedInstanceMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"ensureDotNetFrameworkLatestForAPIAppEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"sqlServerAdvancedDataSecurityEmailAdminsMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"threatDetectionTypesOnServerMonitoringEffect\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"theLogAnalyticsAgentShouldBeInstalledOnVirtualMachineScaleSetsEffect\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"NetworkWatcherResourceGroupName\": {\r\n    \"value\": \"NetworkWatcherRG\"\r\n  }\r\n}",
                            "$fxv#3": "{\r\n  \"effect-09024ccc-0c5f-475e-9457-b7c0d9ed487b\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0961003e-5a0a-4549-abde-af6a37f2724d\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0b15565f-aa9e-48ba-8619-45960f2c314d\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0e60b895-3786-45da-8377-9c6b4b6ac5f9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-17k78e20-9358-41c9-923c-fb736d382a12\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-1bc1795e-d44a-4d48-9b3b-6fff0fd5f9ba\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"PHPLatestVersion\": {\r\n    \"value\": \"7.3\"\r\n  },\r\n  \"effect-22bee202-a82f-4305-9a2a-6d7f44d4dedb\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-26a828e1-e88f-464e-bbb3-c134a282b9de\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-34c877ad-507e-4c82-993e-3452a6e0ad3c\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-404c3081-a854-4457-ae30-26a93ef643f9\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-47a6b606-51aa-4496-8bb7-64b11cf66adc\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-496223c3-ad65-4ecd-878a-bae78737e9ed\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"JavaLatestVersion\": {\r\n    \"value\": \"11\"\r\n  },\r\n  \"effect-4f11b553-d42e-4e3a-89be-32ca364cad4c\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-5c607a2e-c700-4744-8254-d77e7c9eb5e4\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-5f76cf89-fbf2-47fd-a3f4-b891fa780b60\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-6b1cbf55-e8b6-442f-ba4c-7246b6381474\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-7008174a-fd10-4ef0-817e-fc820a951d73\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"LinuxPythonLatestVersion\": {\r\n    \"value\": \"3.8\"\r\n  },\r\n  \"effect-7238174a-fd10-4ef0-817e-fc820a951d73\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-7261b898-8a84-4db8-9e04-18527132abb3\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-74c3584d-afae-46f7-a20a-6f8adba71a16\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-86b3d65f-7626-441e-b690-81a8b71cff60\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-88999f4c-376a-45c8-bcb3-4058f713cf39\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-8c122334-9d20-4eb8-89ea-ac9a705b74ae\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-9297c21d-2ed6-4474-b48f-163f75654ce3\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-991310cd-e9f3-47bc-b7b6-f57b557d07db\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-9b597639-28e4-48eb-b506-56b05d366257\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-9d0b6ea4-93e2-4578-bf2f-6bb17d22b4bc\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-9daedab3-fb2d-461e-b861-71790eead4f6\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-a4af4a39-4135-47fb-b175-47fbdf85311d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"setting-a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9\": {\r\n    \"value\": \"enabled\"\r\n  },\r\n  \"effect-a70ca396-0a34-413a-88e1-b956c1e683be\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-aa633080-8b72-40c4-a2d7-d00c03e80bed\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-af6cd1bd-1635-48cb-bde7-5b15693900b9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b7ddfbdc-1260-477d-91fd-98bd9be789a6\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-c3f317a7-a95c-4547-b7e7-11017ebdf2fe\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-cb510bfd-1cba-4d9f-a230-cb0976f4bb71\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e2c1c086-2d84-4019-bff3-c44ccd95113c\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e3576e28-8b17-4677-84c3-db2990658d64\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e8cbc669-f12d-49eb-93e7-9273119e9933\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e9c8d085-d9cc-4b17-9cdc-059f1f01f19e\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-ebb62a0c-3560-49e1-89ed-27e074e9f8ad\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-efbde977-ba53-4479-b8e9-10b957924fbf\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-f6de0be7-9a8a-4b8a-b349-43cf02d22f7c\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-f8456c1c-aa66-4dfb-861a-25d127b775c9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-f9d614c5-c173-4d56-95a7-b4437057d193\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-fb893a29-21bb-418c-a157-e99480ec364c\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-feedbf84-6b99-488c-acc2-71c829aa5ffc\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-3b980d31-7904-4bb7-8575-5665739a8052\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-6e2593d9-add6-4083-9c9b-4b7d2188c899\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b607c5de-e7d9-4eee-9e5c-83f1bcee4fa0\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-12430be1-6cc8-4527-a9a8-e3d38f250096\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"modeRequirement-12430be1-6cc8-4527-a9a8-e3d38f250096\": {\r\n    \"value\": \"Detection\"\r\n  },\r\n  \"effect-425bea59-a659-4cbb-8d31-34499bd030b8\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"modeRequirement-425bea59-a659-4cbb-8d31-34499bd030b8\": {\r\n    \"value\": \"Detection\"\r\n  },\r\n  \"effect-564feb30-bf6a-4854-b4bb-0d2d2d1e6c66\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-055aa869-bc98-4af8-bafc-23f1ab6ffe2c\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-013e242c-8828-4970-87b3-ab247555486d\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-d38fc420-0735-4ef3-ac11-c806f651a570\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-a1181c5f-672a-477a-979a-7d58aa086233\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-308fbb08-4ab8-4e67-9b29-592e93fb94fa\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-4da35fc9-c9e7-4960-aec9-797fe7d9051d\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-523b5cd1-3e23-492f-a539-13118b6d1e3a\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-7fe3b40f-802b-4cdd-8bd4-fd799c948cc2\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-c25d9a16-bc35-4e15-a7e5-9db606bf9ed4\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b0f33259-77d7-4c9e-aac6-3aabcfae693c\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-037eea7a-bd0a-46c5-9a66-03aea78705d3\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-0725b4dd-7e76-479c-a735-68e7ee23d5ca\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-0820b7b9-23aa-4725-a1ce-ae4558f718e5\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-2c89a2e5-7285-40fe-afe0-ae8654b92fab\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-358c20a6-3f9e-4f0e-97ff-c6ce485e2aac\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-5744710e-cc2f-4ee8-8809-3b11e89f4bc9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-ac4a19c2-fa67-49b4-8ae5-0b2e78c49457\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-c9d007d0-c057-4772-b18c-01e546713bcd\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-d0793b48-0edc-4296-a390-4c75d1bdfd71\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-e372f825-a257-4fb8-9175-797a8a8627d6\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-d158790f-bfb0-486c-8631-2dc6b4e8e6af\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-e802a67a-daf5-4436-9ea6-f6d821dd0c5d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-a451c1ef-c6ca-483d-87ed-f49761e3ffb5\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-b954148f-4c11-4c38-8221-be76711e194a-MicrosoftSql-servers-firewallRules-delete\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b954148f-4c11-4c38-8221-be76711e194a-MicrosoftNetwork-networkSecurityGroups-delete\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b954148f-4c11-4c38-8221-be76711e194a-MicrosoftClassicNetwork-networkSecurityGroups-delete\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b954148f-4c11-4c38-8221-be76711e194a-MicrosoftNetwork-networkSecurityGroups-securityRules-delete\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b954148f-4c11-4c38-8221-be76711e194a-MicrosoftClassicNetwork-networkSecurityGroups-securityRules-delete\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-ae89ebca-1c92-4898-ac2c-9f63decb045c\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-d26f7642-7545-4e18-9b75-8c9bbdee3a9a\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-1a4e592a-6a6e-44a5-9814-e36264ca96e7\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-7796937f-307b-4598-941c-67d3a05ebfe7\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-c5447c04-a4d7-4ba8-a263-c9ee321a6858\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-41388f1c-2db0-4c25-95b2-35d7f5ccbfa9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-b02aacc0-b073-424e-8298-42b22829ee0a\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-057d6cfe-9c4f-4a6d-bc60-14420ea1f1a9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0ec47710-77ff-4a3d-9181-6aa50af424d0\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-48af4db5-9b8b-401c-8e74-076be876a430\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-82339799-d096-41ae-8538-b108becf0970\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1b7aa243-30e4-4c9e-bca8-d0d3022b634a\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-bb91dfba-c30d-4263-9add-9c2384e659a6\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-e71308d3-144b-4262-b144-efdc3cc90517\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-2bdd0062-9d75-436e-89df-487dd8e4b3c7\": {\r\n    \"value\": \"Disabled\"\r\n  },\r\n  \"effect-4733ea7b-a883-42fe-8cac-97454c2a9e4a\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-67121cc7-ff39-4ab8-b7e3-95b84dab487d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-6fac406b-40ca-413b-bf8e-0bf964659c25\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-81e74cea-30fd-40d5-802f-d72103c2aaaa\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-c349d81b-9985-44ae-a8da-ff98d108ede8\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-f4b53539-8df9-40e4-86c6-6b607703bd4e\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-ec068d99-e9c7-401f-8cef-5bdde4e6ccf1\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-048248b0-55cd-46da-b1ff-39efd52db260\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0d134df8-db83-46fb-ad72-fe0c9428c8dd\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-2c89a2e5-7285-40fe-afe0-ae8654b92fb2\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-3657f5a0-770e-44a3-b44e-9431ba1e9735\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-617c02be-7f02-4efd-8836-3180d47b6c68\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-7d7be79c-23ba-4033-84dd-45e2a5ccdd67\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-87ba29ef-1ab3-4d82-b763-87fcd4f531f7\": {\r\n    \"value\": \"audit\"\r\n  },\r\n  \"effect-f7d52b2d-e161-4dfa-a82b-55e564167385\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-c43e4a30-77cb-48ab-a4dd-93f175c63b57\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-0b60c0b2-2dc2-4e1c-b5c9-abbed971de53\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d\": {\r\n    \"value\": \"Audit\"\r\n  },\r\n  \"effect-1f314764-cb73-4fc9-b863-8eca98ac36e9\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"effect-123a3936-f020-408a-ba0c-47873faf1534\": {\r\n    \"value\": \"AuditIfNotExists\"\r\n  },\r\n  \"resourceGroupName-b6e2945c-0b7b-40f5-9233-7a5323b5cdc6\": {\r\n    \"value\": \"NetworkWatcherRG\"\r\n  }\r\n}",
                            "modifiedAssignment": "[if(and(equals(toLower(environment().name), toLower('AzureCloud')), equals(toLower(parameters('builtInAssignment')), toLower('IL5'))), 'NISTRev4', parameters('builtInAssignment'))]",
                            "assignmentName": "[format('{0} {1}', variables('modifiedAssignment'), resourceGroup().name)]",
                            "agentVmssAssignmentName": "[format('Deploy VMSS Agents {0}', resourceGroup().name)]",
                            "agentVmAssignmentName": "[format('Deploy VM Agents {0}', resourceGroup().name)]",
                            "contributorRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                            "lawsReaderRoleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2020-09-01",
                              "name": "[variables('assignmentName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "policyDefinitionId": "[createObject('NISTRev4', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/cf25b9c1-bd23-4eb6-bd2c-f4f3ac644a5f', 'parameters', union(json(variables('$fxv#0')), createObject('listOfMembersToIncludeInWindowsVMAdministratorsGroup', createObject('value', parameters('windowsAdministratorsGroupMembership')), 'logAnalyticsWorkspaceIdforVMReporting', createObject('value', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8]))))), 'NISTRev5', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/179d1daa-458f-4e47-8086-2a68d0d6c38f', 'parameters', json(variables('$fxv#1'))), 'IL5', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/f9a961fa-3241-4b20-adc4-bbf8ad9d7197', 'parameters', union(json(variables('$fxv#2')), createObject('logAnalyticsWorkspaceIDForVMAgents', createObject('value', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8])), 'membersToIncludeInLocalAdministratorsGroup', createObject('value', parameters('windowsAdministratorsGroupMembership'))))), 'CMMC', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/b5629c75-5c77-4422-87b9-2509e680f8de', 'parameters', union(json(variables('$fxv#3')), createObject('logAnalyticsWorkspaceId-f47b5582-33ec-4c5c-87c0-b010a6b2e917', createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8]), '2021-06-01').customerId)), if(equals('AzureCloud', environment().name), createObject('MembersToExclude-69bf4abd-ca1e-4cf6-8b5a-762d42e61d4f', createObject('value', 'admin'), 'MembersToInclude-30f71ea1-ac77-4f26-9fc5-2d926bbd4ba7', createObject('value', parameters('windowsAdministratorsGroupMembership'))), createObject()))))[variables('modifiedAssignment')].id]",
                                "parameters": "[createObject('NISTRev4', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/cf25b9c1-bd23-4eb6-bd2c-f4f3ac644a5f', 'parameters', union(json(variables('$fxv#0')), createObject('listOfMembersToIncludeInWindowsVMAdministratorsGroup', createObject('value', parameters('windowsAdministratorsGroupMembership')), 'logAnalyticsWorkspaceIdforVMReporting', createObject('value', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8]))))), 'NISTRev5', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/179d1daa-458f-4e47-8086-2a68d0d6c38f', 'parameters', json(variables('$fxv#1'))), 'IL5', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/f9a961fa-3241-4b20-adc4-bbf8ad9d7197', 'parameters', union(json(variables('$fxv#2')), createObject('logAnalyticsWorkspaceIDForVMAgents', createObject('value', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8])), 'membersToIncludeInLocalAdministratorsGroup', createObject('value', parameters('windowsAdministratorsGroupMembership'))))), 'CMMC', createObject('id', '/providers/Microsoft.Authorization/policySetDefinitions/b5629c75-5c77-4422-87b9-2509e680f8de', 'parameters', union(json(variables('$fxv#3')), createObject('logAnalyticsWorkspaceId-f47b5582-33ec-4c5c-87c0-b010a6b2e917', createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8]), '2021-06-01').customerId)), if(equals('AzureCloud', environment().name), createObject('MembersToExclude-69bf4abd-ca1e-4cf6-8b5a-762d42e61d4f', createObject('value', 'admin'), 'MembersToInclude-30f71ea1-ac77-4f26-9fc5-2d926bbd4ba7', createObject('value', parameters('windowsAdministratorsGroupMembership'))), createObject()))))[variables('modifiedAssignment')].parameters]"
                              },
                              "identity": {
                                "type": "SystemAssigned"
                              }
                            },
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2020-09-01",
                              "name": "[variables('agentVmssAssignmentName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "policyDefinitionId": "[tenantResourceId('Microsoft.Authorization/policySetDefinitions', '75714362-cae7-409e-9b99-a8e5075b7fad')]",
                                "parameters": {
                                  "logAnalytics_1": {
                                    "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8])]"
                                  }
                                }
                              },
                              "identity": {
                                "type": "SystemAssigned"
                              }
                            },
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2020-09-01",
                              "name": "[variables('agentVmAssignmentName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "policyDefinitionId": "[tenantResourceId('Microsoft.Authorization/policySetDefinitions', '55f3eceb-5573-4f18-9695-226972c6d74a')]",
                                "parameters": {
                                  "logAnalytics_1": {
                                    "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8])]"
                                  }
                                }
                              },
                              "identity": {
                                "type": "SystemAssigned"
                              }
                            },
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-04-01-preview",
                              "name": "[guid(variables('contributorRoleDefinitionId'), variables('assignmentName'))]",
                              "properties": {
                                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                                "principalId": "[if(empty(variables('modifiedAssignment')), '', reference(resourceId('Microsoft.Authorization/policyAssignments', variables('assignmentName')), '2020-09-01', 'full').identity.principalId)]",
                                "principalType": "ServicePrincipal"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Authorization/policyAssignments', variables('assignmentName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-04-01-preview",
                              "name": "[guid(variables('contributorRoleDefinitionId'), variables('agentVmssAssignmentName'))]",
                              "properties": {
                                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmssAssignmentName')), '2020-09-01', 'full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmssAssignmentName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-04-01-preview",
                              "name": "[guid(variables('contributorRoleDefinitionId'), variables('agentVmAssignmentName'))]",
                              "properties": {
                                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName')), '2020-09-01', 'full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName'))]"
                              ]
                            },
                            {
                              "condition": "[parameters('deployRemediation')]",
                              "type": "Microsoft.PolicyInsights/remediations",
                              "apiVersion": "2019-07-01",
                              "name": "VM-Agent-Policy-Remediation",
                              "properties": {
                                "policyAssignmentId": "[resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName'))]",
                                "resourceDiscoveryMode": "ReEvaluateCompliance"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Assign-Laws-Role-Policy-{0}', resourceGroup().name)]",
                              "subscriptionId": "[split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2]]",
                              "resourceGroup": "[split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "targetResourceId": {
                                    "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[2], split(parameters('logAnalyticsWorkspaceResourceId'), '/')[4]), 'Microsoft.OperationalInsights/workspaces', split(parameters('logAnalyticsWorkspaceResourceId'), '/')[8])]"
                                  },
                                  "roleDefinitionId": {
                                    "value": "[variables('lawsReaderRoleDefinitionId')]"
                                  },
                                  "principalId": {
                                    "value": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName')), '2020-09-01', 'full').identity.principalId]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "536828988134299254"
                                    }
                                  },
                                  "parameters": {
                                    "targetResourceId": {
                                      "type": "string"
                                    },
                                    "roleDefinitionId": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    },
                                    "principalType": {
                                      "type": "string",
                                      "defaultValue": "ServicePrincipal",
                                      "allowedValues": [
                                        "ForeignGroup",
                                        "Group",
                                        "ServicePrincipal",
                                        "User"
                                      ]
                                    },
                                    "description": {
                                      "type": "string",
                                      "defaultValue": ""
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/roleAssignments",
                                      "apiVersion": "2020-04-01-preview",
                                      "name": "[guid(parameters('targetResourceId'), parameters('roleDefinitionId'), parameters('principalId'))]",
                                      "properties": {
                                        "principalId": "[parameters('principalId')]",
                                        "principalType": "[parameters('principalType')]",
                                        "roleDefinitionId": "[parameters('roleDefinitionId')]",
                                        "description": "[parameters('description')]"
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Authorization/policyAssignments', variables('agentVmAssignmentName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix')))]"
              ]
            },
            {
              "condition": "[parameters('deployDefender')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('set-defender-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "emailSecurityContact": {
                    "value": "[parameters('emailSecurityContact')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "3784344625260719000"
                    }
                  },
                  "parameters": {
                    "defenderPlans": {
                      "type": "array",
                      "defaultValue": [
                        "VirtualMachines"
                      ],
                      "metadata": {
                        "description": "Defender Paid protection Plans. Even if a customer selects the free sku, at least 1 paid protection plan must be specified."
                      }
                    },
                    "emailSecurityContact": {
                      "type": "string",
                      "metadata": {
                        "description": "Email address of the contact, in the form of john@doe.com"
                      }
                    },
                    "policySetDescription": {
                      "type": "string",
                      "defaultValue": "The Microsoft Cloud Security Benchmark initiative represents the policies and controls implementing security recommendations defined in Microsoft Cloud Security Benchmark v2, see https://aka.ms/azsecbm. This also serves as the Microsoft Defender for Cloud default policy initiative. You can directly assign this initiative, or manage its policies and compliance results within Microsoft Defender.",
                      "metadata": {
                        "description": "Policy Initiative description field"
                      }
                    },
                    "defenderSkuTier": {
                      "type": "string",
                      "defaultValue": "Free",
                      "metadata": {
                        "description": "[Standard/Free] The SKU for Defender. It defaults to \"Free\"."
                      }
                    }
                  },
                  "variables": {
                    "defenderPaidPlanConfig": {
                      "AzureCloud": {
                        "Api": {
                          "subPlan": "P1"
                        },
                        "appServices": {},
                        "KeyVaults": {
                          "subPlan": "PerKeyVault"
                        },
                        "Arm": {
                          "subPlan": "PerSubscription"
                        },
                        "CloudPosture": {
                          "extensions": [
                            {
                              "name": "SensitiveDataDiscovery",
                              "isEnabled": "True"
                            },
                            {
                              "name": "ContainerRegistriesVulnerabilityAssessments",
                              "isEnabled": "True"
                            },
                            {
                              "name": "AgentlessDiscoveryForKubernetes",
                              "isEnabled": "True"
                            },
                            {
                              "name": "AgentlessVmScanning",
                              "isEnabled": "True"
                            },
                            {
                              "name": "EntraPermissionsManagement",
                              "isEnabled": "True"
                            }
                          ]
                        },
                        "Containers": {
                          "extensions": [
                            {
                              "name": "ContainerRegistriesVulnerabilityAssessments",
                              "isEnabled": "True"
                            },
                            {
                              "name": "AgentlessDiscoveryForKubernetes",
                              "isEnabled": "True"
                            }
                          ]
                        },
                        "CosmosDbs": {},
                        "StorageAccounts": {
                          "subPlan": "DefenderForStorageV2",
                          "extensions": [
                            {
                              "name": "OnUploadMalwareScanning",
                              "isEnabled": "True",
                              "additionalExtensionProperties": {
                                "CapGBPerMonthPerStorageAccount": "5000"
                              }
                            },
                            {
                              "name": "SensitiveDataDiscovery",
                              "isEnabled": "True"
                            }
                          ]
                        },
                        "VirtualMachines": {
                          "subPlan": "P1"
                        },
                        "SqlServerVirtualMachines": {},
                        "SqlServers": {},
                        "OpenSourceRelationalDatabases": {}
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "defenderFreeAllClouds",
                        "count": "[length(parameters('defenderPlans'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "condition": "[equals(parameters('defenderSkuTier'), 'Free')]",
                      "type": "Microsoft.Security/pricings",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('defenderPlans')[copyIndex()]]",
                      "properties": {
                        "pricingTier": "[parameters('defenderSkuTier')]"
                      }
                    },
                    {
                      "copy": {
                        "name": "defenderStandardNoSubplanNoExtensions",
                        "count": "[length(parameters('defenderPlans'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "condition": "[and(equals(parameters('defenderSkuTier'), 'Standard'), not(equals(environment().name, 'AzureCloud')))]",
                      "type": "Microsoft.Security/pricings",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('defenderPlans')[copyIndex()]]",
                      "properties": {
                        "pricingTier": "[parameters('defenderSkuTier')]"
                      }
                    },
                    {
                      "copy": {
                        "name": "defenderStandardSubplanExtensionsAzureCloud",
                        "count": "[length(parameters('defenderPlans'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "condition": "[and(equals(parameters('defenderSkuTier'), 'Standard'), equals(environment().name, 'AzureCloud'))]",
                      "type": "Microsoft.Security/pricings",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('defenderPlans')[copyIndex()]]",
                      "properties": {
                        "pricingTier": "[parameters('defenderSkuTier')]",
                        "subPlan": "[coalesce(tryGet(variables('defenderPaidPlanConfig')[environment().name][parameters('defenderPlans')[copyIndex()]], 'subPlan'), null())]",
                        "extensions": "[coalesce(tryGet(variables('defenderPaidPlanConfig')[environment().name][parameters('defenderPlans')[copyIndex()]], 'extensions'), null())]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('emailSecurityContact')))]",
                      "type": "Microsoft.Security/securityContacts",
                      "apiVersion": "2020-01-01-preview",
                      "name": "default",
                      "properties": {
                        "notificationsByRole": {
                          "roles": [
                            "AccountAdmin",
                            "Contributor",
                            "Owner",
                            "ServiceAdmin"
                          ],
                          "state": "On"
                        },
                        "alertNotifications": {
                          "state": "On"
                        },
                        "emails": "[parameters('emailSecurityContact')]"
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "Microsoft Cloud Security Benchmark",
                      "properties": {
                        "displayName": "Defender Default",
                        "description": "[parameters('policySetDescription')]",
                        "enforcementMode": "DoNotEnforce",
                        "parameters": {},
                        "policyDefinitionId": "[tenantResourceId('Microsoft.Authorization/policySetDefinitions', '1f3afdf9-d0c9-4c3d-847f-89da613e70a8')]"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "delimiter": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value]"
            },
            "locationProperties": {
              "type": "object",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.locationProperties.value]"
            },
            "mlzTags": {
              "type": "object",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
            },
            "privateDnsZones": {
              "type": "array",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.privateDnsZones.value]"
            },
            "resourceAbbreviations": {
              "type": "object",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.resourceAbbreviations.value]"
            },
            "tier": {
              "type": "object",
              "value": "[union(createObject('dnsServers', coalesce(tryGet(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('hubVirtualNetworkResourceId'), '/')[2], split(parameters('hubVirtualNetworkResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks', split(parameters('hubVirtualNetworkResourceId'), '/')[8]), '2023-11-01'), 'dhcpOptions', 'dnsServers'), createArray()), 'logAnalyticsWorkspaceResourceId', parameters('logAnalyticsWorkspaceResourceId')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-network-{0}-{1}{2}', parameters('workloadShortName'), variables('deploymentIndex'), parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-rg-{0}', parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "mlzTags": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
          },
          "name": {
            "value": "[format('{0}{1}netAppFiles', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.namingConvention.resourceGroup, reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value)]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "18441033039263608064"
            }
          },
          "parameters": {
            "mlzTags": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2019-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[union(coalesce(tryGet(parameters('tags'), 'Microsoft.Resources/resourceGroups'), createObject()), parameters('mlzTags'))]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "location": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').location]"
            },
            "tags": {
              "type": "object",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').tags]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-netapp-files-{0}', parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "delegatedSubnetResourceId": {
            "value": "[filter(reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.subnets, lambda('subnet', contains(lambdaVariables('subnet').name, 'azure-netapp-files')))[0].id]"
          },
          "delimiter": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.delimiter.value]"
          },
          "deploymentNameSuffix": {
            "value": "[parameters('deploymentNameSuffix')]"
          },
          "dnsServers": {
            "value": "[join(reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.dnsServers, ',')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "domainJoinUserPrincipalName": {
            "value": "[parameters('domainJoinUserPrincipalName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "fileShareName": {
            "value": "[parameters('fileShareName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mlzTags": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.mlzTags.value]"
          },
          "netAppAccountName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.namingConvention.netAppAccount]"
          },
          "netAppCapacityPoolName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.namingConvention.netAppAccountCapacityPool]"
          },
          "organizationalUnitPath": {
            "value": "[parameters('organizationalUnitPath')]"
          },
          "resourceGroupName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.name.value]"
          },
          "smbServerName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix'))), '2022-09-01').outputs.tier.value.namingConvention.netAppAccountSmbServer]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "14524479189881028950"
            }
          },
          "parameters": {
            "delegatedSubnetResourceId": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            },
            "deploymentNameSuffix": {
              "type": "string"
            },
            "dnsServers": {
              "type": "string"
            },
            "domainJoinPassword": {
              "type": "securestring"
            },
            "domainJoinUserPrincipalName": {
              "type": "securestring"
            },
            "domainName": {
              "type": "string"
            },
            "fileShareName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "mlzTags": {
              "type": "object"
            },
            "netAppAccountName": {
              "type": "string"
            },
            "netAppCapacityPoolName": {
              "type": "string"
            },
            "organizationalUnitPath": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "smbServerName": {
              "type": "string"
            },
            "sku": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-netapp-files-{0}', parameters('deploymentNameSuffix'))]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "delegatedSubnetResourceId": {
                    "value": "[parameters('delegatedSubnetResourceId')]"
                  },
                  "delimiter": {
                    "value": "[parameters('delimiter')]"
                  },
                  "dnsServers": {
                    "value": "[parameters('dnsServers')]"
                  },
                  "domainJoinPassword": {
                    "value": "[parameters('domainJoinPassword')]"
                  },
                  "domainJoinUserPrincipalName": {
                    "value": "[parameters('domainJoinUserPrincipalName')]"
                  },
                  "domainName": {
                    "value": "[parameters('domainName')]"
                  },
                  "fileShares": {
                    "value": [
                      "[parameters('fileShareName')]"
                    ]
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "mlzTags": {
                    "value": "[parameters('mlzTags')]"
                  },
                  "netAppAccountNamePrefix": {
                    "value": "[parameters('netAppAccountName')]"
                  },
                  "netAppCapacityPoolNamePrefix": {
                    "value": "[parameters('netAppCapacityPoolName')]"
                  },
                  "organizationalUnitPath": {
                    "value": "[parameters('organizationalUnitPath')]"
                  },
                  "smbServerName": {
                    "value": "[parameters('smbServerName')]"
                  },
                  "storageSku": {
                    "value": "[parameters('sku')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "16485191519250713078"
                    }
                  },
                  "parameters": {
                    "delegatedSubnetResourceId": {
                      "type": "string"
                    },
                    "delimiter": {
                      "type": "string"
                    },
                    "dnsServers": {
                      "type": "string"
                    },
                    "domainJoinPassword": {
                      "type": "securestring"
                    },
                    "domainJoinUserPrincipalName": {
                      "type": "securestring"
                    },
                    "domainName": {
                      "type": "string"
                    },
                    "hostPoolResourceId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "fileShares": {
                      "type": "array"
                    },
                    "location": {
                      "type": "string"
                    },
                    "mlzTags": {
                      "type": "object"
                    },
                    "netAppAccountNamePrefix": {
                      "type": "string"
                    },
                    "netAppCapacityPoolNamePrefix": {
                      "type": "string"
                    },
                    "organizationalUnitPath": {
                      "type": "string"
                    },
                    "smbServerName": {
                      "type": "string"
                    },
                    "storageSku": {
                      "type": "string"
                    },
                    "suffix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "nameSuffix": "[if(empty(parameters('suffix')), '', format('{0}{1}', parameters('delimiter'), parameters('suffix')))]",
                    "tagsNetAppAccount": "[union(if(empty(parameters('hostPoolResourceId')), createObject(), createObject('cm-resource-parent', parameters('hostPoolResourceId'))), coalesce(tryGet(parameters('tags'), 'Microsoft.NetApp/netAppAccounts'), createObject()), parameters('mlzTags'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.NetApp/netAppAccounts",
                      "apiVersion": "2025-01-01",
                      "name": "[format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix'))]",
                      "location": "[parameters('location')]",
                      "tags": "[variables('tagsNetAppAccount')]",
                      "properties": {
                        "activeDirectories": [
                          {
                            "aesEncryption": true,
                            "domain": "[parameters('domainName')]",
                            "dns": "[parameters('dnsServers')]",
                            "organizationalUnit": "[if(empty(parameters('organizationalUnitPath')), 'CN=Computers', parameters('organizationalUnitPath'))]",
                            "password": "[parameters('domainJoinPassword')]",
                            "smbServerName": "[parameters('smbServerName')]",
                            "username": "[split(parameters('domainJoinUserPrincipalName'), '@')[0]]"
                          }
                        ],
                        "encryption": {
                          "keySource": "Microsoft.NetApp"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools",
                      "apiVersion": "2025-01-01",
                      "name": "[format('{0}/{1}', format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix')), format('{0}{1}', parameters('netAppCapacityPoolNamePrefix'), variables('nameSuffix')))]",
                      "location": "[parameters('location')]",
                      "tags": "[variables('tagsNetAppAccount')]",
                      "properties": {
                        "coolAccess": false,
                        "encryptionType": "Single",
                        "qosType": "Auto",
                        "serviceLevel": "[parameters('storageSku')]",
                        "size": 4398046511104
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts', format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "volumes",
                        "count": "[length(range(0, length(parameters('fileShares'))))]"
                      },
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
                      "apiVersion": "2025-01-01",
                      "name": "[format('{0}/{1}/{2}', format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix')), format('{0}{1}', parameters('netAppCapacityPoolNamePrefix'), variables('nameSuffix')), parameters('fileShares')[range(0, length(parameters('fileShares')))[copyIndex()]])]",
                      "location": "[parameters('location')]",
                      "tags": "[variables('tagsNetAppAccount')]",
                      "properties": {
                        "avsDataStore": "Disabled",
                        "coolAccess": false,
                        "creationToken": "[parameters('fileShares')[range(0, length(parameters('fileShares')))[copyIndex()]]]",
                        "defaultGroupQuotaInKiBs": 0,
                        "defaultUserQuotaInKiBs": 0,
                        "encryptionKeySource": "Microsoft.NetApp",
                        "isDefaultQuotaEnabled": false,
                        "isLargeVolume": false,
                        "kerberosEnabled": false,
                        "ldapEnabled": false,
                        "networkFeatures": "Standard",
                        "protocolTypes": [
                          "CIFS"
                        ],
                        "securityStyle": "ntfs",
                        "serviceLevel": "[parameters('storageSku')]",
                        "smbAccessBasedEnumeration": "Enabled",
                        "smbContinuouslyAvailable": true,
                        "smbEncryption": true,
                        "smbNonBrowsable": "Disabled",
                        "snapshotDirectoryVisible": true,
                        "subnetId": "[parameters('delegatedSubnetResourceId')]",
                        "usageThreshold": 107374182400
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools', format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix')), format('{0}{1}', parameters('netAppCapacityPoolNamePrefix'), variables('nameSuffix')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "fileShares": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('fileShares'))]",
                        "input": "[reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', format('{0}{1}', parameters('netAppAccountNamePrefix'), variables('nameSuffix')), format('{0}{1}', parameters('netAppCapacityPoolNamePrefix'), variables('nameSuffix')), parameters('fileShares')[range(0, length(parameters('fileShares')))[copyIndex()]]), '2025-01-01').mountTargets[0].smbServerFqdn]"
                      }
                    },
                    "smbServerNamePrefix": {
                      "type": "string",
                      "value": "[parameters('smbServerName')]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-{0}', parameters('deploymentNameSuffix')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-tier3-{0}', parameters('deploymentNameSuffix')))]"
      ]
    }
  ]
}