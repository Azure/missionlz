{
  "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
  "view": {
    "kind": "Form",
    "properties": {
      "title": "Mission Landing Zone Add-On: Azure Virtual Desktop",
      "steps": [
        {
          "name": "basics",
          "label": "Basics",
          "elements": [
            {
              "name": "description",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "The Azure Virtual Desktop (AVD) add-on reduces the complexity in deploying AVD with SCCA and zero trust compliance. Click on the link below to learn more about the solution.",
                "link": {
                  "label": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/README.md",
                  "uri": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/README.md"
                }
              }
            },
            {
              "name": "scope",
              "type": "Microsoft.Common.ResourceScope",
              "instanceDetailsLabel": "",
              "location": {
                "resourceTypes": []
              }
            },
            {
              "name": "hub",
              "label": "Hub Resources",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "api",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "subscriptions?api-version=2020-01-01"
                  }
                },
                {
                  "name": "subscription",
                  "label": "Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "[steps('basics').scope.subscription.displayName]",
                  "toolTip": "Select the subscription for your Mission Landing Zone Hub network, firewall, and remote access resources.",
                  "filter": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').hub.api.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "virtualNetworksApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').hub.subscription, '/providers/Microsoft.Network/virtualNetworks?api-version=2023-05-01')]"
                  }
                },
                {
                  "name": "virtualNetwork",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Virtual network",
                  "defaultValue": "[filter(map(steps('basics').hub.virtualNetworksApi.value, (item) => item.name), (item) => contains(item, 'hub'))]",
                  "filter": true,
                  "toolTip": "Select the existing Hub virtual network.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('basics').hub.virtualNetworksApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                  }
                },
                {
                  "name": "azureFirewallsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').hub.subscription, '/providers/Microsoft.Network/azureFirewalls?api-version=2023-05-01')]"
                  }
                },
                {
                  "name": "azureFirewall",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Azure firewall",
                  "defaultValue": "[first(map(steps('basics').hub.azureFirewallsApi.value, (item) => item.name))]",
                  "filter": true,
                  "toolTip": "Select the existing Hub Azure firewall.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('basics').hub.azureFirewallsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                  }
                }
              ]
            },
            {
              "name": "naming",
              "type": "Microsoft.Common.Section",
              "label": "Naming Components",
              "elements": [
                {
                  "name": "description",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "The values selected below will be used as components in your naming convention to name your Azure resource groups and resources. For more information on the naming convention used in this solution, refer to the documentation.",
                    "link": {
                      "label": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/docs/design/naming.md",
                      "uri": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/docs/design/naming.md"
                    }
                  }
                },
                {
                  "name": "identifier",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Identifier",
                  "toolTip": "Input a 3 character identifier for the resource group and resource names created with this solution. The identifier should represent a unique value within your organization, such as a business unit or project.",
                  "placeholder": "Example: it1",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z][a-z0-9]{1,2}$",
                    "validationMessage": "The value must be 1 - 3 characters in length, alphanumeric, and lowercase."
                  }
                },
                {
                  "name": "environment",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Environment Abbreviation",
                  "defaultValue": "Development (dev)",
                  "toolTip": "Select the target environment for the solution. The single letter environment abbreviation will be used as part of the naming convention for the resoure groups and resources.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Development (dev)",
                        "value": "dev"
                      },
                      {
                        "label": "Production (prod)",
                        "value": "prod"
                      },
                      {
                        "label": "Test (test)",
                        "value": "test"
                      }
                    ]
                  }
                },
                {
                  "name": "stampIndex",
                  "type": "Microsoft.Common.Slider",
                  "label": "Stamp Index",
                  "defaultValue": 0,
                  "toolTip": "The stamp index differentiates multiple AVD stamps within the same business unit or project. For example, '0' could be used for an office workers host pool and '1' could be used for a developers host pool.",
                  "min": 0,
                  "max": 9,
                  "showStepMarkers": false,
                  "constraints": {
                    "required": true
                  },
                  "visible": true
                }
              ]
            },
            {
              "name": "scenario",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "AVD Scenario",
              "elements": [
                {
                  "name": "profile",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Profile",
                  "filter": true,
                  "defaultValue": [
                    "Generic"
                  ],
                  "toolTip": "Select the type of image to deploy on the session hosts.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "ArcGIS Pro",
                        "description": "Geospatial data analysis and visualization",
                        "value": "arcGisPro"
                      },
                      {
                        "label": "Generic",
                        "description": "Common deployment scenario for office workers, developers, and administrators.",
                        "value": "generic"
                      }
                    ]
                  }
                },
                {
                  "name": "virtualMachineSkusApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[decodeUriComponent(concat(encodeUriComponent(steps('basics').scope.subscription.id), '%2Fproviders%2FMicrosoft.Compute%2Fskus%3Fapi-version%3D2021-07-01%26%24filter%3Dlocation%20eq%20%27', steps('basics').scope.location.name, '%27'))]"
                  }
                }
              ]
            },
            {
              "name": "servicePrincipalApi",
              "type": "Microsoft.Solutions.GraphApiControl",
              "request": {
                "method": "GET",
                "path": "/v1.0/serviceprincipals?$filter=appId eq '9cdead84-a844-4324-93f2-b2e6bb768d07'"
              }
            }
          ]
        },
        {
          "name": "controlPlane",
          "label": "Control Plane",
          "elements": [
            {
              "name": "controlPlane",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Control Plane",
              "elements": [
                {
                  "name": "locationsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').scope.subscription.id, '/locations?api-version=2022-12-01')]"
                  }
                },
                {
                  "name": "providerApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.DesktopVirtualization/resourceTypes?api-version=2021-04-01')]"
                  }
                },
                {
                  "name": "location",
                  "label": "Location",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "[steps('basics').scope.location.displayName]",
                  "toolTip": "Select the location for the AVD management resources: host pool, workspace, application group, etc.",
                  "filter": true,
                  "constraints": {
                    "allowedValues": "[map(filter(steps('controlPlane').controlPlane.locationsApi.value, (item) => contains(first(map(filter(steps('controlPlane').controlPlane.providerApi.value, (item) => equals(item.resourceType, 'hostpools')), (item) => item.locations)), item.displayName)), (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.name, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "hostPool",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Host Pool",
              "elements": [
                {
                  "name": "validation",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Validation environment",
                  "visible": "[not(equals(steps('basics').scenario.profile, 'arcGisPro'))]",
                  "toolTip": "Choose whether to deploy the host pool as a validation environment. This allows you test preview features for AVD before they are released to production.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "type",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Host Pool Type",
                  "defaultValue": "Pooled",
                  "multiLine": true,
                  "toolTip": "",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Pooled",
                        "value": "Pooled"
                      },
                      {
                        "label": "Personal",
                        "value": "Personal"
                      }
                    ]
                  }
                },
                {
                  "name": "workloadType",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Workload Type",
                  "visible": "[equals(steps('controlPlane').hostPool.type, 'Pooled')]",
                  "filter": true,
                  "defaultValue": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), 'Power (1 user per core)', 'Heavy (2 users per core)')]",
                  "toolTip": "Select the type of image to deploy on the session hosts.",
                  "multiLine": true,
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Light (6 users per core)",
                        "description": "Basic data entry tasks",
                        "value": 6
                      },
                      {
                        "label": "Medium (4 users per core)",
                        "description": "Consultants and market researchers",
                        "value": 4
                      },
                      {
                        "label": "Heavy (2 users per core)",
                        "description": "Software engineers and content creators",
                        "value": 2
                      },
                      {
                        "label": "Power (1 user per core)",
                        "description": "Graphic designers, 3D model makers, and machine learning researchers",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "name": "customRdpProperties",
                  "type": "Microsoft.Common.TextBox",
                  "visible": true,
                  "label": "Custom RDP properties",
                  "defaultValue": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), 'use multimon:i:1;drivestoredirect:s:;encode redirected video capture:i:1;redirected video capture encoding quality:i:2;audiomode:i:0;devicestoredirect:s:;redirectclipboard:i:0;redirectcomports:i:0;redirectlocation:i:1;redirectprinters:i:0;redirectsmartcards:i:1;redirectwebauthn:i:1;usbdevicestoredirect:s:;keyboardhook:i:2;', 'audiocapturemode:i:1;camerastoredirect:s:*;use multimon:i:0;drivestoredirect:s:;encode redirected video capture:i:1;redirected video capture encoding quality:i:1;audiomode:i:0;devicestoredirect:s:;redirectclipboard:i:0;redirectcomports:i:0;redirectlocation:i:1;redirectprinters:i:0;redirectsmartcards:i:1;redirectwebauthn:i:1;usbdevicestoredirect:s:;keyboardhook:i:2;')]",
                  "toolTip": "Specify the configuration for the RDP properties on the AVD host pool.",
                  "constraints": {
                    "required": true
                  }
                },
                {
                  "name": "publicNetworkAccess",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Public network access",
                  "defaultValue": "Enabled",
                  "multiLine": true,
                  "toolTip": "Enabled: allows the host pool to be accessed from both public and private networks. Disabled: allows the host pool to only be accessed via private endpoints.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "label": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "label": "Enabled For Clients Only",
                        "value": "EnabledForClientsOnly"
                      },
                      {
                        "label": "Enabled For Session Hosts Only",
                        "value": "EnabledForSessionHostsOnly"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "workspace",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Workspace",
              "elements": [
                {
                  "name": "publicNetworkAccess",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Public network access (feed)",
                  "defaultValue": "Enabled",
                  "multiLine": true,
                  "toolTip": "Enabled: allows the host pool to be accessed from both public and private networks. Disabled: allows the host pool to only be accessed via private endpoints.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Disabled",
                        "value": "Disabled"
                      },
                      {
                        "label": "Enabled",
                        "value": "Enabled"
                      }
                    ]
                  }
                },
                {
                  "name": "subnetsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').hub.virtualNetwork, '/subnets?api-version=2022-05-01')]"
                  }
                },
                {
                  "name": "subnet",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Hub subnet (global)",
                  "defaultValue": "[first(map(filter(steps('controlPlane').workspace.subnetsApi.value, (item) => and(and(not(equals(item.name, 'AzureFirewallSubnet')), not(equals(item.name, 'AzureFirewallManagementSubnet'))), not(equals(item.name, 'AzureBastionSubnet')))), (item) => item.name))]",
                  "filter": true,
                  "toolTip": "Select the existing Hub subnet for the AVD Global Workspace.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('controlPlane').workspace.subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                  }
                }
              ]
            },
            {
              "name": "assignment",
              "type": "Microsoft.Common.Section",
              "label": "Assignment",
              "visible": true,
              "elements": [
                {
                  "name": "description",
                  "type": "Microsoft.Common.TextBlock",
                  "visible": true,
                  "options": {
                    "text": "To access Azure Virtual Desktop, your end users will need to be assigned to the Desktop Applicaiton Group and if applicable, be given permissions on the storage service for FSLogix. Select the desired security groups below to give access to this AVD stamp. If deploying FSLogix, storage will be deployed for each group to support sharding. Be sure your groups are sized appropriately for each shard.",
                    "link": {
                      "label": "Learn more about FSLogix storage options for sizing your groups.",
                      "uri": "https://learn.microsoft.com/azure/virtual-desktop/store-fslogix-profile"
                    }
                  }
                },
                {
                  "name": "groupsApi",
                  "type": "Microsoft.Solutions.GraphApiControl",
                  "request": {
                    "method": "GET",
                    "path": "/v1.0/groups?$top=999"
                  }
                },
                {
                  "name": "groupsDropDown",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Groups",
                  "defaultValue": "",
                  "toolTip": "Select the desired group(s) to give access to this AVD stamp and if applicable, the FSLogix file share.",
                  "multiselect": true,
                  "filter": true,
                  "constraints": {
                    "allowedValues": "[map(steps('controlPlane').assignment.groupsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\": {\"name\":\"', item.displayName, '\",\"objectId\":\"', item.id, '\"}}')))]",
                    "required": true
                  },
                  "visible": "[not(empty(steps('controlPlane').assignment.groupsApi))]"
                },
                {
                  "name": "groupsGrid",
                  "type": "Microsoft.Common.EditableGrid",
                  "ariaLabel": "Input the security groups for access to AVD and if applicable, FSLogix. The object ID is a property on the group and can be found in Entra ID.",
                  "label": "Security Groups",
                  "visible": "[empty(steps('controlPlane').assignment.groupsApi)]",
                  "constraints": {
                    "width": "Full",
                    "rows": {
                      "count": {
                        "min": 1,
                        "max": 100
                      }
                    },
                    "columns": [
                      {
                        "id": "name",
                        "header": "Name",
                        "width": "1fr",
                        "element": {
                          "type": "Microsoft.Common.TextBox",
                          "placeholder": "Security Group Name",
                          "constraints": {
                            "required": true,
                            "validations": []
                          }
                        }
                      },
                      {
                        "id": "objectId",
                        "header": "Object ID",
                        "width": "1fr",
                        "element": {
                          "type": "Microsoft.Common.TextBox",
                          "placeholder": "Security Group Object ID",
                          "constraints": {
                            "required": true,
                            "validations": []
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "friendlyNames",
              "type": "Microsoft.Common.Section",
              "label": "Friendly Names for AVD Client",
              "visible": "[not(equals(steps('basics').scenario.profile, 'arcGisPro'))]",
              "elements": [
                {
                  "name": "custom",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": true,
                  "label": "Custom friendly names?",
                  "defaultValue": false,
                  "toolTip": "Choose whether to add custom names to the AVD feed workspace and the desktop for the AVD client."
                },
                {
                  "name": "workspace",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Feed Workspace",
                  "defaultValue": "",
                  "placeholder": "Example: Information Technology",
                  "toolTip": "Input the friendly name for the AVD workspace that will be displayed in the end user's client. This value should apply to all the stamp indexes within the same identifier and would mostly likely represent your business unit or project.",
                  "visible": "[steps('controlPlane').friendlyNames.custom]",
                  "constraints": {
                    "required": false,
                    "regex": "^.{1,64}$",
                    "validationMessage": "The value must be between 1 and 64 characters in length."
                  }
                },
                {
                  "name": "desktop",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Desktop",
                  "defaultValue": "",
                  "placeholder": "Example: Help Desk",
                  "toolTip": "Input the friendly name for the AVD Session Desktop application that will be displayed in the end user's client. This value should represent the workload (eg., Help Desk, Development, or Administration) that will be supported on the host pool.",
                  "visible": "[steps('controlPlane').friendlyNames.custom]",
                  "constraints": {
                    "required": false,
                    "regex": "^.{1,64}$",
                    "validationMessage": "The value must be between 1 and 64 characters in length."
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "hosts",
          "label": "Session Hosts",
          "elements": [
            {
              "name": "image",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Image",
              "elements": [
                {
                  "name": "source",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Image Source",
                  "filter": true,
                  "defaultValue": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), 'Compute Gallery', 'Marketplace')]",
                  "toolTip": "Select the type of image to deploy on the session hosts.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), parse('[{\"label\":\"Compute Gallery\",\"value\":\"gallery\"}]'), parse('[{\"label\":\"Marketplace\",\"value\":\"marketplace\"},{\"label\":\"Compute Gallery\",\"value\":\"gallery\"}]'))]"
                  }
                },
                {
                  "name": "offer",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Offer",
                  "defaultValue": "Windows 11",
                  "toolTip": "Select the desired marketplace image offer.",
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "Office 365",
                        "value": "office-365"
                      },
                      {
                        "label": "Windows 10",
                        "value": "Windows-10"
                      },
                      {
                        "label": "Windows 11",
                        "value": "windows-11"
                      }
                    ],
                    "required": true
                  },
                  "visible": "[equals(steps('hosts').image.source, 'marketplace')]"
                },
                {
                  "name": "skuApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Compute/locations/', steps('basics').scope.location.name, '/publishers/MicrosoftWindowsDesktop/artifacttypes/vmimage/offers/', steps('hosts').image.offer, '/skus?api-version=2022-08-01')]"
                  }
                },
                {
                  "name": "sku",
                  "type": "Microsoft.Common.DropDown",
                  "label": "SKU",
                  "defaultValue": "[if(equals(steps('hosts').image.offer, 'windows-11'), 'win11-23h2-avd', if(equals(steps('hosts').image.offer, 'Windows-10'),'win10-22h2-avd-g2', 'win11-23h2-avd-m365'))]",
                  "filter": true,
                  "toolTip": "Select the desired marketplace image SKU.",
                  "constraints": {
                    "allowedValues": "[map(steps('hosts').image.skuApi, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
                    "required": true
                  },
                  "visible": "[equals(steps('hosts').image.source, 'marketplace')]"
                },
                {
                  "name": "galleryImage",
                  "type": "Microsoft.Solutions.ResourceSelector",
                  "visible": "[equals(steps('hosts').image.source, 'gallery')]",
                  "label": "Image",
                  "resourceType": "Microsoft.Compute/galleries/images",
                  "constraints": {
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "virtualMachine",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Virtual Machine",
              "elements": [
                {
                  "name": "availability",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Availability Options",
                  "filter": true,
                  "defaultValue": "Availability Zones",
                  "toolTip": "Select the redundancy / resiliency for the virtual machines.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Availability Sets",
                        "value": "AvailabilitySets"
                      },
                      {
                        "label": "Availability Zones",
                        "value": "AvailabilityZones"
                      },
                      {
                        "label": "No infrastructure redundancy required",
                        "value": "None"
                      }
                    ]
                  }
                },
                {
                  "name": "count",
                  "type": "Microsoft.Common.Slider",
                  "label": "Count",
                  "defaultValue": 1,
                  "toolTip": "Select the number of virtual machines to deploy in your AVD host pool.",
                  "min": 1,
                  "max": 4999,
                  "showStepMarkers": true,
                  "constraints": {
                    "required": true
                  },
                  "visible": true
                },
                {
                  "name": "diskSku",
                  "type": "Microsoft.Common.DropDown",
                  "label": "OS Disk SKU",
                  "filter": true,
                  "defaultValue": "Premium_LRS (Recommended)",
                  "toolTip": "Select the disk SKU for the operating system disk.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label":"Premium_LRS (Recommended)",
                        "value":"Premium_LRS"
                      },
                      {
                        "label":"Standard_LRS",
                        "value":"Standard_LRS"
                      },
                      {
                        "label":"StandardSSD_LRS",
                        "value":"StandardSSD_LRS"
                      }
                    ]
                  },
                  "visible": "[not(equals(steps('basics').scenario.profile, 'arcGisPro'))]"
                },
                {
                  "name": "sizeGeneric",
                  "type": "Microsoft.Compute.SizeSelector",
                  "label": "Size",
                  "toolTip": "Select the size of the virtual machines. Multi-session hosts should have 4 - 24 vCPUs. Single session host should have 2 or more vCPUs.",
                  "recommendedSizes": [
                    "Standard_D4ads_v5"
                  ],
                  "constraints": {
                    "allowedSizes": [],
                    "numAvailabilityZonesRequired": "[if(equals(steps('hosts').virtualMachine.availability, 'AvailabilityZones'), 3, 1)]"
                  },
                  "options": {
                    "hideDiskTypeFilter": "[if(equals(steps('hosts').virtualMachine.diskSku, 'Premium_LRS'), true, false)]"
                  },
                  "osPlatform": "Windows",
                  "count": "[steps('hosts').virtualMachine.count]",
                  "visible": "[not(equals(steps('basics').scenario.profile, 'arcGisPro'))]"
                },
                {
                  "name": "sizeArcGisPro",
                  "type": "Microsoft.Compute.SizeSelector",
                  "label": "Size",
                  "toolTip": "Select the size of the virtual machines. Multi-session hosts should have 4 - 24 vCPUs. Single session host should have 2 or more vCPUs.",
                  "recommendedSizes": [
                    "Standard_NV4as_v4"
                  ],
                  "constraints": {
                    "allowedSizes": [
                      "Standard_NV4as_v4",
                      "Standard_NV8as_v4",
                      "Standard_NV16as_v4",
                      "Standard_NV32as_v4"
                    ],
                    "numAvailabilityZonesRequired": "[if(equals(steps('hosts').virtualMachine.availability, 'AvailabilityZones'), 3, 1)]"
                  },
                  "options": {
                    "hideDiskTypeFilter": "[if(equals(steps('hosts').virtualMachine.diskSku, 'Premium_LRS'), true, false)]"
                  },
                  "osPlatform": "Windows",
                  "count": "[steps('hosts').virtualMachine.count]",
                  "visible": "[equals(steps('basics').scenario.profile, 'arcGisPro')]"
                }
              ]
            },
            {
              "name": "identity",
              "type": "Microsoft.Common.Section",
              "label": "Identity",
              "visible": true,
              "elements": [
                {
                  "name": "solution",
                  "type": "Microsoft.Common.OptionsGroup",
                  "visible": true,
                  "label": "Active Directory Solution",
                  "defaultValue": "Active Directory Domain Services (ADDS)",
                  "toolTip": "Choose the Active Directory solution that already exists.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Active Directory Domain Services (ADDS)",
                        "value": "ActiveDirectoryDomainServices"
                      },
                      {
                        "label": "Microsoft Entra ID",
                        "value": "MicrosoftEntraId"
                      },
                      {
                        "label": "Microsoft Entra Domain Services",
                        "value": "MicrosoftEntraDomainServices"
                      }
                    ]
                  }
                },
                {
                  "name": "intune",
                  "type": "Microsoft.Common.OptionsGroup",
                  "visible": "[equals(steps('hosts').identity.solution, 'MicrosoftEntraId')]",
                  "label": "Intune Enrollment",
                  "defaultValue": "No",
                  "toolTip": "If Intune is configured in your Azure AD tenant, you can choose to have the VM automatically enrolled during the deployment by selecting Yes.",
                  "constraints": {
                    "required": false,
                    "allowedValues": [
                      {
                        "label": "Yes",
                        "value": true
                      },
                      {
                        "label": "No",
                        "value": false
                      }
                    ]
                  }
                },
                {
                  "name": "domainName",
                  "type": "Microsoft.Common.TextBox",
                  "visible": "[not(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'))]",
                  "label": "Domain Name",
                  "toolTip": "Provide domain name for the selected Active Directory solution.",
                  "placeholder": "Example: contoso.com",
                  "constraints": {
                    "required": true
                  }
                },
                {
                  "name": "ouPath",
                  "type": "Microsoft.Common.TextBox",
                  "visible": "[not(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'))]",
                  "label": "OU Path",
                  "toolTip": "Input the distinguished name of the desired organization unit for the AVD session hosts.",
                  "placeholder": "Example: OU=pooled,OU=avd,DC=contoso,DC=com",
                  "constraints": {
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "domainJoinCredentials",
              "type": "Microsoft.Common.Section",
              "label": "Domain Join Credentials",
              "visible": "[not(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'))]",
              "elements": [
                {
                  "name": "userPrincipalName",
                  "type": "Microsoft.Common.TextBox",
                  "label": "User Principal Name",
                  "toolTip": "Enter the user principal name with domain join privileges.",
                  "placeholder": "Example: xadmin@contoso.com",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z_.-]+@(?:[a-z0-9]+\\.)+[a-z]+$",
                    "validationMessage": "The value must be a valid user principal name."
                  }
                },
                {
                  "name": "password",
                  "type": "Microsoft.Common.PasswordBox",
                  "label": {
                    "password": "Password"
                  },
                  "toolTip": "Enter a password that is alphanumeric, contains at least 12 characters, 1 letter, 1 number and 1 special character.",
                  "constraints": {
                    "required": true
                  },
                  "options": {
                    "hideConfirmation": true
                  }
                }
              ]
            },
            {
              "name": "localAdminCredentials",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "label": "Local Administrator Credential",
              "elements": [
                {
                  "name": "username",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Username",
                  "defaultValue": "",
                  "placeholder": "Example: xadmin",
                  "toolTip": "Input the username for the local administrator account.",
                  "constraints": {
                    "required": true,
                    "regex": "",
                    "validationMessage": ""
                  },
                  "visible": true
                },
                {
                  "name": "password",
                  "type": "Microsoft.Common.PasswordBox",
                  "label": {
                    "password": "Password",
                    "confirmPassword": "Confirm Password"
                  },
                  "toolTip": "Input the password for the local administrator account.",
                  "constraints": {
                    "required": true,
                    "regex": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=_!*<>()])(?=\\S+$).{12,123}$",
                    "validationMessage": "The value must be within 12 to 123 characters, be alphanumeric, and include 1 lower case character, 1 upper case character, 1 number, and 1 special character that is not '\\' or '-'."
                  },
                  "options": {
                    "hideConfirmation": false
                  },
                  "visible": true
                }
              ]
            }
          ]
        },
        {
          "name": "userProfiles",
          "label": "User Profiles",
          "elements": [
            {
              "name": "profileSolution",
              "type": "Microsoft.Common.DropDown",
              "visible": true,
              "label": "Profile Solution",
              "defaultValue": "[if(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'), 'Local', 'FSLogix')]",
              "toolTip": "Select the user profile solution for your end users.",
              "constraints": {
                "required": true,
                "allowedValues": "[if(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'), parse('[{\"label\":\"Local\",\"value\":\"local\"}]'), parse('[{\"label\":\"FSLogix\",\"value\":\"fslogix\"},{\"label\":\"Local\",\"value\":\"local\"}]'))]"
              }
            },
            {
              "name": "storage",
              "type": "Microsoft.Common.Section",
              "label": "Profile Storage",
              "visible": "[equals(steps('userProfiles').profileSolution, 'fslogix')]",
              "elements": [
                {
                  "name": "service",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Service",
                  "defaultValue": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), 'Azure NetApp Files', 'Azure Files')]",
                  "toolTip": "Select the Azure storage service for the user profiles.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[if(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'), parse('[{\"label\":\"Azure Files\",\"value\":\"AzureFiles\"}]'), parse('[{\"label\":\"Azure Files\",\"value\":\"AzureFiles\"},{\"label\":\"Azure NetApp Files\",\"value\":\"AzureNetAppFiles\"}]'))]"
                  }
                },
                {
                  "name": "sku",
                  "type": "Microsoft.Common.DropDown",
                  "visible": "[equals(steps('userProfiles').profileSolution, 'fslogix')]",
                  "label": "SKU",
                  "defaultValue": "[if(equals(steps('userProfiles').profileSolution, 'local'), concat('Standard ', if(equals(steps('userProfiles').storage.service, 'AzureFiles'), '(20K IOPS)', '(100K IOPS)')), concat('Premium ', if(equals(steps('userProfiles').storage.service, 'AzureFiles'), '(100K IOPS)', '(450K IOPS)')))]",
                  "toolTip": "Select the storage SKU for the SMB file shares to support the use of FSLogix.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "[concat('Premium ', if(equals(steps('userProfiles').storage.service, 'AzureFiles'), '(100K IOPS)', '(450K IOPS)'))]",
                        "value": "Premium"
                      },
                      {
                        "label": "[concat('Standard ', if(equals(steps('userProfiles').storage.service, 'AzureFiles'), '(20K IOPS)', '(320K IOPS)'))]",
                        "value": "Standard"
                      }
                    ]
                  }
                },
                {
                  "name": "fileShareSize",
                  "type": "Microsoft.Common.Slider",
                  "label": "File share size (GB)",
                  "defaultValue": 100,
                  "toolTip": "Input the quota size for the SMB file share to support the use of FSLogix.",
                  "min": 100,
                  "max": 100000,
                  "showStepMarkers": false,
                  "constraints": {
                    "required": true
                  },
                  "visible": "[equals(steps('userProfiles').profileSolution, 'fslogix')]"
                },
                {
                  "name": "fslogixContainerType",
                  "type": "Microsoft.Common.DropDown",
                  "visible": "[equals(steps('userProfiles').profileSolution, 'fslogix')]",
                  "label": "FSLogix solution",
                  "defaultValue": "Profile Container",
                  "toolTip": "Select the solution for the FSLogix profiles.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Cloud Cache, Profile Container",
                        "value": "CloudCacheProfileContainer"
                      },
                      {
                        "label": "Cloud Cache, Profile & Office Container",
                        "value": "CloudCacheProfileOfficeContainer"
                      },
                      {
                        "label": "Profile Container",
                        "value": "ProfileContainer"
                      },
                      {
                        "label": "Profile & Office Container",
                        "value": "ProfileOfficeContainer"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "networking",
          "label": "Networking",
          "elements": [
            {
              "name": "controlPlane",
              "label": "[if(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), 'Control Plane & Session Hosts', 'Control Plane')]",
              "type": "Microsoft.Common.Section",
              "visible": true,
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Virtual network CIDR range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "[concat('10.0.1', string(add(40, mul(2, steps('basics').naming.stampIndex))), '.0/24')]",
                  "toolTip": "Specify an address CIDR range within the range [10,26].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRangeWorkload",
                  "label": "Subnet CIDR range (Workload)",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "[concat('10.0.1', string(add(40, mul(2, steps('basics').naming.stampIndex))), '.0/2', if(and(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), equals(steps('userProfiles').storage.service, 'AzureNetAppFiles')), '5', '4'))]",
                  "toolTip": "Specify a CIDR range for the workload subnet within the AVD spoke virtual network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRangeAnf",
                  "label": "Subnet CIDR range (Azure NetApp Files)",
                  "type": "Microsoft.Common.TextBox",
                  "visible": "[and(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), equals(steps('userProfiles').storage.service, 'AzureNetAppFiles'))]",
                  "defaultValue": "[concat('10.0.1', string(add(40, mul(2, steps('basics').naming.stampIndex))), '.128/25')]",
                  "toolTip": "Specify a CIDR range for the Azure NetApp Files subnet within the AVD spoke virtual network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeAnf, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeAnf, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').controlPlane.subnetAddressCidrRangeAnf, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').controlPlane.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').controlPlane.subnetAddressCidrRangeAnf, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "disableBgpRoutePropagation",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": true,
                  "label": "Disable BGP route propagation",
                  "defaultValue": true,
                  "toolTip": "Choose whether to disable BGP route propagation on the route table."
                }
              ]
            },
            {
              "name": "hosts",
              "label": "Session Hosts",
              "type": "Microsoft.Common.Section",
              "visible": "[not(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location))]",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Virtual network CIDR range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "[concat('10.0.1', string(add(41, mul(2, steps('basics').naming.stampIndex))), '.0/24')]",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRangeWorkload",
                  "label": "Subnet CIDR range (Workload)",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "[concat('10.0.1', string(add(41, mul(2, steps('basics').naming.stampIndex))), '.0/2', if(equals(steps('userProfiles').storage.service, 'AzureNetAppFiles'), '5', '4'))]",
                  "toolTip": "Specify a CIDR range for the default subnet within the AVD Hosts spoke virtual network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeWorkload, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeWorkload, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeWorkload, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hosts.subnetAddressCidrRangeWorkload, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRangeAnf",
                  "label": "Subnet CIDR range (Azure NetApp Files)",
                  "type": "Microsoft.Common.TextBox",
                  "visible": "[and(not(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location)), equals(steps('userProfiles').storage.service, 'AzureNetAppFiles'))]",
                  "defaultValue": "[concat('10.0.1', string(add(41, mul(2, steps('basics').naming.stampIndex))), '.128/25')]",
                  "toolTip": "Specify a CIDR range for the Azure NetApp Files subnet within the AVD spoke virtual network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeAnf, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeAnf, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hosts.subnetAddressCidrRangeAnf, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hosts.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hosts.subnetAddressCidrRangeAnf, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "management",
          "label": "Management",
          "elements": [
            {
              "name": "startVmOnConnect",
              "type": "Microsoft.Common.Section",
              "label": "Start VM On Connect",
              "visible": "[empty(steps('basics').servicePrincipalApi)]",
              "elements": [
                {
                  "name": "objectId",
                  "type": "Microsoft.Common.TextBox",
                  "label": "AVD Object ID",
                  "visible": true,
                  "defaultValue": "",
                  "placeholder": "",
                  "toolTip": "Input the object ID for the Azure Virtual Desktop enterprise application in Entra ID. The application ID for the principal is 9cdead84-a844-4324-93f2-b2e6bb768d07.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$",
                        "message": "The value must be a globally unique ID."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "drainMode",
              "type": "Microsoft.Common.Section",
              "label": "Drain Mode",
              "visible": true,
              "elements": [
                {
                  "name": "enable",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Enable drain mode?",
                  "defaultValue": false,
                  "toolTip": "Enables drain mode on the AVD session hosts so the virtual machines cannot be accessed until they have been validated."
                }
              ]
            },
            {
              "name": "scaling",
              "type": "Microsoft.Common.Section",
              "label": "Scaling",
              "visible": "[equals(steps('controlPlane').hostPool.type, 'Pooled')]",
              "elements": [
                {
                  "name": "enable",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": true,
                  "label": "Enable scaling tool?",
                  "defaultValue": false,
                  "toolTip": "Choose whether to deploy the required resources to enable the Scaling Tool."
                },
                {
                  "name": "beginPeakTime",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Begin Peak Time",
                  "visible": "[steps('management').scaling.enable]",
                  "defaultValue": "8:00",
                  "placeholder": "",
                  "toolTip": "Input the time when peak hours begin for your end users.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[012]?[0-9]:[0-5][0-9]$",
                        "message": "The value must be in a proper time format with a two digit hour and two digit minutes, e.g. 12am should be input as 00:00."
                      }
                    ]
                  }
                },
                {
                  "name": "endPeakTime",
                  "type": "Microsoft.Common.TextBox",
                  "label": "End Peak Time",
                  "visible": "[steps('management').scaling.enable]",
                  "defaultValue": "17:00",
                  "placeholder": "",
                  "toolTip": "Input the time when peak hours end for your end users.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[012]?[0-9]:[0-5][0-9]$",
                        "message": "The value must be in a proper time format with a two digit hour and two digit minutes, e.g. 8pm should be input as 20:00."
                      }
                    ]
                  }
                },
                {
                  "name": "forceLogOff",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Force Log Off (Seconds)",
                  "visible": "[steps('management').scaling.enable]",
                  "defaultValue": "0",
                  "toolTip": "Use this setting to force logoff users if session time limit settings cannot be used.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[0-9]{1,3}$",
                        "message": "The value must be between 1 and 3 digits."
                      }
                    ]
                  }
                },
                {
                  "name": "minimumHosts",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Minimum Number of Session Hosts",
                  "visible": "[steps('management').scaling.enable]",
                  "defaultValue": "0",
                  "toolTip": "Use this setting to determine the minimum number of sessions hosts to keep online.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[0-9]{1,4}$",
                        "message": "The value must be between 1 and 4 digits."
                      }
                    ]
                  }
                },
                {
                  "name": "cpuThreshold",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Session Threshold Per CPU",
                  "visible": "[steps('management').scaling.enable]",
                  "defaultValue": "1",
                  "toolTip": "Use this setting to determine the number of sessions per CPU before turning on another host.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[0-9]{0,1}(?:\\.[0-9]{0,2})?$",
                        "message": "The value must be a number with 1 whole number and, if desired, a single or two digit decimal number."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "backup",
              "type": "Microsoft.Common.Section",
              "label": "Backup",
              "visible": "[or(equals(steps('userProfiles').profileSolution, 'local'), and(equals(steps('userProfiles').profileSolution, 'fslogix'), equals(steps('userProfiles').storage.service, 'AzureFiles')))]",
              "elements": [
                {
                  "name": "recoveryServices",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": true,
                  "label": "Enable recovery services?",
                  "defaultValue": false,
                  "toolTip": "Choose to deploy backups for your solution. For a personal host pool, this will enable backups on the virtual machines. For a pooled host pool, this will enable backups on the FSLogix file share when using Azure Files."
                }
              ]
            },
            {
              "name": "monitoring",
              "type": "Microsoft.Common.Section",
              "label": "Monitoring",
              "visible": true,
              "elements": [
                {
                  "name": "enable",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": true,
                  "label": "Enable monitoring for AVD Insights?",
                  "defaultValue": false,
                  "toolTip": "Deploy the required resources to enable AVD Insights."
                },
                {
                  "name": "agent",
                  "type": "Microsoft.Common.DropDown",
                  "visible": "[steps('management').monitoring.enable]",
                  "label": "Monitoring agent",
                  "defaultValue": "Log Analytics Agent",
                  "toolTip": "Select the solution for the FSLogix profiles.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Azure Monitor Agent",
                        "value": "AzureMonitorAgent"
                      },
                      {
                        "label": "Log Analytics Agent",
                        "value": "LogAnalyticsAgent"
                      }
                    ]
                  }
                },
                {
                  "name": "enableSecurity",
                  "type": "Microsoft.Common.CheckBox",
                  "visible": "[and(steps('management').monitoring.enable, equals(steps('management').monitoring.agent, 'LogAnalyticsAgent'))]",
                  "label": "Multi-home agent for security monitoring?",
                  "defaultValue": false,
                  "toolTip": "Deploy the required configuration to multi-home the Microsoft Monitoring Agent for security monitoring."
                },
                {
                  "name": "logAnalyticsWorkspace",
                  "type": "Microsoft.Solutions.ResourceSelector",
                  "label": "Existing Log Analytics Workspace for Security",
                  "visible": "[and(and(steps('management').monitoring.enable, equals(steps('management').monitoring.agent, 'LogAnalyticsAgent')),steps('management').monitoring.enableSecurity)]",
                  "resourceType": "Microsoft.OperationalInsights/workspaces",
                  "toolTip": "Select the log analytics workspace used for collecting security data for Sentinel or Defender for Cloud. This is required to multihome the Microsoft Monitoring Agent.",
                  "options": {}
                }
              ]
            }
          ]
        },
        {
          "name": "artifacts",
          "label": "Artifacts",
          "elements": [
            {
              "name": "storage",
              "type": "Microsoft.Common.Section",
              "label": "Artifacts storage",
              "elements": [
                {
                  "name": "description",
                  "type": "Microsoft.Common.TextBlock",
                  "visible": true,
                  "options": {
                    "text": "Select the storage account and container that hosts the artifacts required to deploy this solution."
                  }
                },
                {
                  "name": "storageAccount",
                  "type": "Microsoft.Solutions.ResourceSelector",
                  "label": "Existing storage account",
                  "resourceType": "Microsoft.Storage/storageAccounts",
                  "options": {
                    "filter": {
                      "subscription": "all",
                      "location": "all"
                    }
                  }
                },
                {
                  "name": "containerApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('artifacts').storage.storageAccount.id, '/blobServices/default/containers?api-version=2023-01-01')]"
                  }
                },
                {
                  "name": "container",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Existing container",
                  "defaultValue": "",
                  "filter": true,
                  "toolTip": "Select the existing container containing the required artifacts.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('artifacts').storage.containerApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]"
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "files",
              "type": "Microsoft.Common.Section",
              "label": "Artifacts file names",
              "elements": [
                {
                  "name": "description",
                  "type": "Microsoft.Common.TextBlock",
                  "visible": true,
                  "options": {
                    "text": "Input the file names for the required artifacts from the specified Azure Blobs container above."
                  }
                },
                {
                  "name": "avdAgentMsiName",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Azure Virtual Desktop Agent (.msi)",
                  "defaultValue": "Microsoft.RDInfra.RDAgent.Installer-x64-1.0.7909.2600.msi",
                  "toolTip": "Input the file / blob name for the AVD Agent installer.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "isValid": "[endsWith(steps('artifacts').files.avdAgentMsiName, '.msi')]",
                        "message": "The file name must end with '.msi'."
                      }
                    ]
                  },
                  "visible": true
                },
                {
                  "name": "avdAgentBootLoaderMsiName",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Azure Virtual Desktop Boot Loader (.msi)",
                  "defaultValue": "Microsoft.RDInfra.RDAgentBootLoader.Installer-x64 (5).msi",
                  "toolTip": "Input the file / blob name for the AVD Boot Loader installer.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "isValid": "[endsWith(steps('artifacts').files.avdAgentBootLoaderMsiName, '.msi')]",
                        "message": "The file name must end with '.msi'."
                      }
                    ]
                  },
                  "visible": true
                },
                {
                  "name": "azurePowerShellModuleMsiName",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Azure PowerShell Module Installer (.msi)",
                  "defaultValue": "Az-Cmdlets-10.2.0.37547-x64.msi",
                  "toolTip": "Input the file / blob name for the Azure PowerShell Module installer.",
                  "placeholder": "",
                  "multiLine": false,
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "isValid": "[endsWith(steps('artifacts').files.azurePowerShellModuleMsiName, '.msi')]",
                        "message": "The file name must end with '.msi'."
                      }
                    ]
                  },
                  "visible": true
                },
                {
                  "name": "filesWarning",
                  "type": "Microsoft.Common.InfoBox",
                  "visible": true,
                  "options": {
                    "style": "Warning",
                    "text": "The files listed above are prerequisites for this solution. They must be downloaded and staged in Azure Blob storage. Once staged, ensure the file names listed above match the file names in Azure Blob storage since the names can change over time. Refer to the following link to download the files:",
                    "uri": {
                      "text": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/docs/prerequisites.md#required",
                      "value": "https://github.com/Azure/missionlz/blob/main/src/bicep/add-ons/azureVirtualDesktop/docs/prerequisites.md#required"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "tags",
          "label": "Tags",
          "elements": [
            {
              "name": "tags",
              "type": "Microsoft.Common.TagsByResource",
              "resources": [
                "Microsoft.Automation/automationAccounts",
                "Microsoft.Compute/availabilitySets",
                "Microsoft.Compute/diskAccesses",
                "Microsoft.Compute/diskEncryptionSets",
                "Microsoft.Compute/virtualMachines",
                "Microsoft.DesktopVirtualization/applicationGroups",
                "Microsoft.DesktopVirtualization/hostPools",
                "Microsoft.Insights/dataCollectionRules",
                "Microsoft.KeyVault/vaults",
                "Microsoft.ManagedIdentity/userAssignedIdentities",
                "Microsoft.NetApp/netAppAccounts",
                "Microsoft.Network/networkInterfaces",
                "Microsoft.Network/networkSecurityGroups",
                "Microsoft.Network/privateEndpoints",
                "Microsoft.Network/routeTables",
                "Microsoft.Network/virtualNetworks",
                "Microsoft.OperationalInsights/workspaces",
                "Microsoft.RecoveryServices/vaults",
                "Microsoft.Resources/resourceGroups",
                "Microsoft.Storage/storageAccounts"
              ]
            }
          ]
        }
      ]
    },
    "outputs": {
      "parameters": {
        "activeDirectorySolution": "[if(and(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'), steps('hosts').identity.intune), 'MicrosoftEntraIdIntuneEnrollment', steps('hosts').identity.solution)]",
        "artifactsContainerName": "[steps('artifacts').storage.container]",
        "artifactsStorageAccountResourceId": "[steps('artifacts').storage.storageAccount.id]",
        "availability": "[steps('hosts').virtualMachine.availability]",
        "avdAgentMsiName": "[steps('artifacts').files.avdAgentMsiName.blobName]",
        "avdAgentBootLoaderMsiName": "[steps('artifacts').files.avdAgentBootLoaderMsiName.blobName]",
        "avdObjectId": "[if(empty(steps('basics').servicePrincipalApi), steps('management').startVmOnConnect.objectId, first(map(steps('basics').servicePrincipalApi.value, (item) => item.id)))]",
        "azurePowerShellModuleMsiName": "[steps('artifacts').files.azurePowerShellModuleMsiName.blobName]",
        "azureNetAppFilesSubnetAddressPrefix": "[if(and(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), equals(steps('userProfiles').storage.service, 'AzureNetAppFiles')), steps('networking').controlPlane.subnetAddressCidrRangeAnf, steps('networking').hosts.subnetAddressCidrRangeAnf)]",
        "customRdpProperty": "[steps('controlPlane').hostPool.customRdpProperties]",
        "desktopFriendlyName": "[steps('controlPlane').friendlyNames.desktop]",
        "disableBgpRoutePropagation": "[steps('networking').controlPlane.disableBgpRoutePropagation]",
        "diskSku": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), 'Premium_LRS', steps('hosts').virtualMachine.diskSku)]",
        "domainJoinPassword": "[steps('hosts').domainJoinCredentials.password]",
        "domainJoinUserPrincipalName": "[steps('hosts').domainJoinCredentials.userPrincipalName]",
        "domainName": "[steps('hosts').identity.domainName]",
        "drainMode": "[steps('management').drainMode.enable]",
        "environmentAbbreviation": "[steps('basics').naming.environment]",
        "fslogixShareSizeInGB": "[if(equals(steps('userProfiles').profileSolution, 'local'), 100, steps('userProfiles').storage.fileShareSize)]",
        "fslogixContainerType": "[steps('userProfiles').storage.fslogixContainerType]",
        "fslogixStorageService": "[if(equals(steps('userProfiles').profileSolution, 'local'), 'None', concat( steps('userProfiles').storage.service, ' ', steps('userProfiles').storage.sku))]",
        "hostPoolPublicNetworkAccess": "[steps('controlPlane').hostPool.publicNetworkAccess]",
        "hostPoolType": "[if(equals(steps('controlPlane').hostPool.type, 'Pooled'), 'Pooled DepthFirst', 'Personal Automatic')]",
        "hubAzureFirewallResourceId": "[steps('basics').hub.azureFirewall]",
        "hubSubnetResourceId": "[steps('controlPlane').workspace.subnet]",
        "hubVirtualNetworkResourceId": "[steps('basics').hub.virtualNetwork]",
        "identifier": "[steps('basics').naming.identifier]",
        "imageDefinitionResourceId": "[if(equals(steps('hosts').image.source, 'gallery'), steps('hosts').image.galleryImage.id, '')]",
        "imageOffer": "[steps('hosts').image.offer]",
        "imagePublisher": "MicrosoftWindowsDesktop",
        "imageSku": "[steps('hosts').image.sku]",
        "locationControlPlane": "[steps('controlPlane').controlPlane.location]",
        "locationVirtualMachines": "[steps('basics').scope.location.name]",
        "logAnalyticsWorkspaceRetention": 30,
        "logAnalyticsWorkspaceSku": "PerGB2018",
        "monitoring": "[steps('management').monitoring.enable]",
        "organizationalUnitPath": "[if(equals(steps('hosts').identity.solution, 'MicrosoftEntraId'), '', steps('hosts').identity.ouPath)]",
        "recoveryServices": "[steps('management').backup.recoveryServices]",
        "scalingBeginPeakTime": "[if(steps('management').scaling.enable, steps('management').scaling.beginPeakTime, '9:00')]",
        "scalingEndPeakTime": "[if(steps('management').scaling.enable, steps('management').scaling.endPeakTime, '17:00')]",
        "scalingLimitSecondsToForceLogOffUser": "[if(steps('management').scaling.enable, steps('management').scaling.forceLogOff, '0')]",
        "scalingMinimumNumberOfRdsh": "[if(steps('management').scaling.enable, steps('management').scaling.minimumHosts, '0')]",
        "scalingSessionThresholdPerCPU": "[if(steps('management').scaling.enable, steps('management').scaling.cpuThreshold, '1')]",
        "scalingTool": "[steps('management').scaling.enable]",
        "securityLogAnalyticsWorkspaceResourceId": "[if(steps('management').monitoring.enableSecurity, steps('management').monitoring.logAnalyticsWorkspace.id, '')]",
        "securityPrincipals": "[if(empty(steps('controlPlane').assignment.groupsApi), steps('controlPlane').assignment.groupsGrid, steps('controlPlane').assignment.groupsDropDown)]",
        "sessionHostCount": "[steps('hosts').virtualMachine.count]",
        "sessionHostIndex": 0,
        "stampIndex": "[steps('basics').naming.stampIndex]",
        "storageCount": "[if(equals(steps('userProfiles').profileSolution, 'local'), 0, if(empty(steps('controlPlane').assignment.groupsApi), length(steps('controlPlane').assignment.groupsGrid), length(steps('controlPlane').assignment.groupsDropDown)))]",
        "storageIndex": 0,
        "subnetAddressPrefixes": "[if(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), parse(concat('[\"', steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '\"]')), parse(concat('[\"', steps('networking').controlPlane.subnetAddressCidrRangeWorkload, '\", \"', steps('networking').hosts.subnetAddressCidrRangeWorkload, '\"]')))]",
        "tags": "[steps('tags').tags]",
        "usersPerCore": "[if(equals(steps('controlPlane').hostPool.type, 'Pooled'), steps('controlPlane').hostPool.workloadType, 1)]",
        "validationEnvironment": "[steps('controlPlane').hostPool.validation]",
        "virtualMachineMonitoringAgent": "[steps('management').monitoring.agent]",
        "virtualMachinePassword": "[steps('hosts').localAdminCredentials.password]",
        "virtualMachineSize": "[if(equals(steps('basics').scenario.profile, 'arcGisPro'), steps('hosts').virtualMachine.sizeArcGisPro, steps('hosts').virtualMachine.sizeGeneric)]",
        "virtualMachineUsername": "[steps('hosts').localAdminCredentials.username]",
        "virtualMachineVirtualCpuCount": "[first(map(filter(first(map(filter(steps('basics').scenario.virtualMachineSkusApi.value, (item) => equals(item.name, if(equals(steps('basics').scenario.profile, 'arcGisPro'), steps('hosts').virtualMachine.sizeArcGisPro, steps('hosts').virtualMachine.sizeGeneric))), (item) => item.capabilities)), (item) => equals(item.name, 'vCPUs')), (item) => item.value))]",
        "virtualNetworkAddressPrefixes": "[if(equals(steps('basics').scope.location.name, steps('controlPlane').controlPlane.location), parse(concat('[\"', steps('networking').controlPlane.virtualNetworkAddressCidrRange, '\"]')), parse(concat('[\"', steps('networking').controlPlane.virtualNetworkAddressCidrRange, '\", \"', steps('networking').hosts.virtualNetworkAddressCidrRange, '\"]')))]",
        "workspaceFriendlyName": "[steps('controlPlane').friendlyNames.workspace]",
        "workspacePublicNetworkAccess": "[steps('controlPlane').workspace.publicNetworkAccess]"
      },
      "kind": "Subscription",
      "location": "[steps('basics').scope.location.name]",
      "subscriptionId": "[steps('basics').scope.subscription.id]"
    }
  }
}