{
  "name": "Deny-RDP-From-Internet",
  "type": "Microsoft.Authorization/policyDefinitions",
  "apiVersion": "2023-04-01",
  "scope": null,
  "properties": {
    "policyType": "Custom",
    "mode": "All",
    "displayName": "Deny RDP from the Internet",
    "description": "This policy denies RDP access from the Internet.",
    "metadata": {
      "version": "1.0.0",
      "category": "Network",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureUSGovernment"
      ]
    },
    "parameters": {
      "effect": {
        "type": "String",
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Network/networkSecurityGroups"
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].direction",
            "equals": "Inbound"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                "equals": "*"
              },
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                "equals": "3389"
              },
              {
                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '-'))),3389)), 'false')]",
                "equals": "true"
              },
              {
                "count": {
                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                  "where": {
                    "value": "[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), '-'))),3389)) , 'false')]",
                    "equals": "true"
                  }
                },
                "greater": 0
              }
            ]
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix",
            "equals": "*"
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access",
            "equals": "Allow"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}