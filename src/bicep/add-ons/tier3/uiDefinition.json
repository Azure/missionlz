{
  "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
  "view": {
    "kind": "Form",
    "properties": {
      "title": "Mission Landing Zone Add-On: Tier 3 Workload Environment",
      "steps": [
        {
          "name": "basics",
          "label": "Basics",
          "elements": [
            {
              "name": "prerequisites",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Prior to deployment, make sure you meet the prerequisites outlined in the resource pre-reqs section in Zero Trust Image solution documentation.",
                "uri": "https://github.com/mikedzikowski/ZTAImage#prequisites",
                "icon": "Warning"
              }
            },
            {
              "name": "scope",
              "type": "Microsoft.Common.ResourceScope",
              "instanceDetailsLabel": "",
              "location": {
                "resourceTypes": []
              }
            },
            {
              "name": "hub",
              "label": "Hub Resources",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "api",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "subscriptions?api-version=2020-01-01"
                  }
                },
                {
                  "name": "subscription",
                  "label": "Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "[steps('basics').scope.subscription.displayName]",
                  "toolTip": "Select the subscription for your Mission Landing Zone Hub network, firewall, and remote access resources.",
                  "filter": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').hub.api.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "virtualNetworksApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').hub.subscription, '/providers/Microsoft.Network/virtualNetworks?api-version=2023-05-01')]"
                  }
                },
                {
                  "name": "virtualNetwork",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Virtual network",
                  "defaultValue": "[filter(map(steps('basics').hub.virtualNetworksApi.value, (item) => item.name), (item) => contains(item, 'hub'))]",
                  "filter": true,
                  "toolTip": "Select the existing Hub virtual network.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('basics').hub.virtualNetworksApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                  }
                },
                {
                  "name": "azureFirewallsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').hub.subscription, '/resourceGroups/', first(skip(split(steps('basics').hub.virtualNetwork, '/'), 4)), '/providers/Microsoft.Network/azureFirewalls?api-version=2023-09-01')]"
                  }
                },
                {
                  "name": "azureFirewall",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Azure firewall",
                  "defaultValue": "[first(map(steps('basics').hub.azureFirewallsApi.value, (item) => item.name))]",
                  "filter": true,
                  "toolTip": "Select the existing Hub Azure firewall.",
                  "constraints": {
                    "required": true,
                    "allowedValues": "[map(steps('basics').hub.azureFirewallsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                  }
                }
              ]
            },
            {
              "name": "naming",
              "type": "Microsoft.Common.Section",
              "label": "Naming Components",
              "elements": [
                {
                  "name": "description",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "The values selected below will be used as components in your naming convention to name your Azure resource groups and resources. For more information on the naming convention used in this solution, refer to the documentation.",
                    "link": {}
                  }
                },
                {
                  "name": "identifier",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Identifier",
                  "toolTip": "Input a 3 character identifier for the resource group and resource names created with this solution. The identifier should represent a unique value within your organization, such as a business unit or project.",
                  "placeholder": "Example: ms",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z]{1,3}$",
                    "validationMessage": "The value must be 1 - 3 characters in length and must be alphanumeric."
                  }
                },
                {
                  "name": "environment",
                  "type": "Microsoft.Common.DropDown",
                  "visible": true,
                  "label": "Environment Abbreviation",
                  "defaultValue": "Development (dev)",
                  "toolTip": "Select the target environment for the solution. The single letter environment abbreviation will be used as part of the naming convention for the resoure groups and resources.",
                  "constraints": {
                    "required": true,
                    "allowedValues": [
                      {
                        "label": "Development (dev)",
                        "value": "dev"
                      },
                      {
                        "label": "Production (prod)",
                        "value": "prod"
                      },
                      {
                        "label": "Test (test)",
                        "value": "test"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "networking",
          "label": "Networking",
          "elements": [
            {
              "name": "networking",
              "label": "Networking",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Virtual network CIDR range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.133.0/24",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Subnet CIDR range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.133.0/24",
                  "toolTip": "Specify a CIDR range for the default subnet within the Shared Services Virtual Network range [24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').networking.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').networking.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').networking.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').networking.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').networking.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "networkWatchersApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Network/networkWatchers?api-version=2023-09-01')]"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "compliance",
          "label": "Compliance",
          "elements": [
            {
              "name": "defenderForCloud",
              "label": "Defender for Cloud",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "workspaceSettingsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Security/workspaceSettings?api-version=2017-08-01-preview')]"
                  }
                },
                {
                  "name": "deployDefender",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Enable Defender for Cloud?",
                  "toolTip": "Check here to to deploy defender for cloud to the target subscription.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "emailSecurityContact",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Email Address for Security Notifications",
                  "defaultValue": "",
                  "toolTip": "Please enter a valid email address for the security team.",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
                    "validationMessage": "Email is not valid. Please re-enter."
                  },
                  "visible": "[steps('compliance').defenderForCloud.deployDefender]"
                }
              ]
            },
            {
              "name": "policySection",
              "label": "Azure Policy",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "policySubsetDetailsTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Mission Landing Zone comes bundled with a relevant subset of available Azure policies."
                  }
                },
                {
                  "name": "policyOptionalTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling policies is optional, but recommended."
                  }
                },
                {
                  "name": "deployPolicy",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Deploy policy assignments?",
                  "toolTip": "Check here to create policy assignments for the resources created by Mission Landing Zone.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "policy",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Policy Assignment",
                  "placeholder": "",
                  "defaultValue": "NIST SP 800-53",
                  "toolTip": "DoD IL5 is only available in AzureUsGovernment and will switch to NISTRev4 if tried in AzureCloud.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "defaultDescription": "Select one of the bundled built-in policy assignments.",
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "NIST SP 800-53 Rev4",
                        "description": "The US National Institute of Standards and Technology (NIST) publishes a catalog of security and privacy controls, Special Publication (SP) 800-53, for all federal information systems in the United States (except those related to national security).",
                        "value": "NISTRev4"
                      },
                      {
                        "label": "NIST SP 800-53 Rev5",
                        "description": "The US National Institute of Standards and Technology (NIST) publishes a catalog of security and privacy controls, Special Publication (SP) 800-53, for all federal information systems in the United States (except those related to national security).",
                        "value": "NISTRev5"
                      },
                      {
                        "label": "DoD IL5",
                        "description": "The Defense Information Systems Agency (DISA) is an agency of the US Department of Defense (DoD) that is responsible for developing and maintaining the DoD Cloud Computing Security Requirements Guide (SRG). These policies are only available for AzureUsGovernment and will switch to NISTRev4 if tried in AzureCloud.",
                        "value": "IL5"
                      },
                      {
                        "label": "CMMC",
                        "description": "The Cybersecurity Maturity Model Certification (CMMC) is a new framework developed by the US Department of Defense (DoD) that requires formal third-party audits of defense industrial base (DIB) contractor cybersecurity practices.",
                        "value": "CMMC"
                      }
                    ]
                  },
                  "visible": "[steps('compliance').policySection.deployPolicy]"
                }
              ]
            },
            {
              "name": "virtualNetworkApi",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "[concat(steps('basics').hub.virtualNetwork, '?api-version=2023-09-01')]"
              }
            },
            {
              "name": "logAnalyticsWorkspacesApi",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "[concat('/subscriptions/', first(skip(split(first(map(filter(steps('compliance').virtualNetworkApi.properties.virtualNetworkPeerings, (item) => contains(item.properties.remoteVirtualNetwork.id, 'operations')), (item) => item.properties.remoteVirtualNetwork.id)), '/'), 2)), '/resourcegroups/', first(skip(split(first(map(filter(steps('compliance').virtualNetworkApi.properties.virtualNetworkPeerings, (item) => contains(item.properties.remoteVirtualNetwork.id, 'operations')), (item) => item.properties.remoteVirtualNetwork.id)), '/'), 4)), '/providers/Microsoft.OperationalInsights/workspaces?api-version=2023-09-01')]"
              }
            },
            {
              "name": "logAnalyticsWorkspace",
              "type": "Microsoft.Common.DropDown",
              "visible": true,
              "label": "Existing Log Analytics Workspace for Central Logging",
              "defaultValue": "[first(map(steps('compliance').logAnalyticsWorkspacesApi.value, (item) => item.name))]",
              "filter": true,
              "toolTip": "Select the existing Hub Azure firewall.",
              "constraints": {
                "required": true,
                "allowedValues": "[map(steps('compliance').logAnalyticsWorkspacesApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
              }
            },
            {
              "name": "diagnosticSettingsApi",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview')]"
              }
            }
          ]
        },
        {
          "name": "tags",
          "label": "Tags",
          "elements": [
            {
              "name": "tags",
              "type": "Microsoft.Common.TagsByResource",
              "resources": [
                "Microsoft.Automation/automationAccounts",
                "Microsoft.Compute/galleries",
                "Microsoft.Compute/virtualMachines",
                "Microsoft.Insights/actionGroups",
                "Microsoft.Insights/scheduledQueryRules",
                "Microsoft.KeyVault/vaults",
                "Microsoft.ManagedIdentity/userAssignedIdentities",
                "Microsoft.Network/networkInterfaces",
                "Microsoft.Network/privateEndpoints",
                "Microsoft.Resources/templateSpecs"
              ]
            }
          ]
        }
      ]
    },
    "outputs": {
      "parameters": {
        "deployActivityLogDiagnosticSetting": "[empty(steps('compliance').diagnosticSettingsApi.value)]",
        "deployDefender": "[and(steps('compliance').defenderForCloud.deployDefender, empty(steps('compliance').defenderForCloud.workspaceSettingsApi.value))]",
        "deployNetworkWatcher": "[empty(filter(steps('networking').networking.networkWatchersApi.value, (item) => equals(item.location, steps('basics').scope.location.name)))]",
        "deployPolicy": "[steps('compliance').policySection.deployPolicy]",
        "emailSecurityContact": "[if(and(steps('compliance').defenderForCloud.deployDefender, empty(steps('compliance').defenderForCloud.workspaceSettingsApi.value)), steps('compliance').defenderForCloud.emailSecurityContact, '')]",
        "environmentAbbreviation": "[steps('basics').naming.environment]",
        "firewallResourceId": "[steps('basics').hub.azureFirewall]",
        "hubVirtualNetworkResourceId": "[steps('basics').hub.virtualNetwork]",
        "identifier": "[steps('basics').naming.identifier]",
        "location": "[steps('basics').scope.location.name]",
        "logAnalyticsWorkspaceResourceId": "[steps('compliance').logAnalyticsWorkspace]",
        "policy": "[if(steps('compliance').policySection.deployPolicy, steps('compliance').policySection.policy, '')]",
        "subnetAddressPrefix": "[steps('networking').networking.subnetAddressCidrRange]",
        "tags": "[steps('tags').tags]",
        "virtualNetworkAddressPrefix": "[steps('networking').networking.virtualNetworkAddressCidrRange]"
      },
      "kind": "Subscription",
      "location": "[steps('basics').scope.location.name]",
      "subscriptionId": "[steps('basics').scope.subscription.id]"
    }
  }
}