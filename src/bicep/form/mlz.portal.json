{
  "$schema": "<relative path to createFormUI.schema.json>",
  "view": {
    "kind": "Form",
    "properties": {
      "title": "Mission Landing Zone",
      "isWizard": true,
      "steps": [
        {
          "name": "basics",
          "label": "Basics",
          "elements": [
            {
              "name": "basicsDescriptionTextBlock",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "Mission Landing Zone is a prescriptive reference architecture with reference implementation of a SCCA compliant Hub and Spoke virtual network provided by Microsoft.",
                "link": {
                  "label": "https://aka.ms/missionlz",
                  "uri": "https://aka.ms/missionlz"
                }
              }
            },
            {
              "name": "armApiControls",
              "label": "",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "subscriptionApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "subscriptions?api-version=2020-01-01"
                  }
                },
                {
                  "name": "locationsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "locations?api-version=2019-11-01"
                  }
                }
              ]
            },
            {
              "name": "selectSubscriptions",
              "label": "Select Subscription(s)",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "subscriptionDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Mission Landing Zone is configured for deployment into a single subscription or many subscriptions depending on your needs for resource counts, subscription boundaries, or billing."
                  }
                }
              ]
            },
            {
              "name": "hubSection",
              "label": "Hub",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "hubSectionTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "All network traffic is directed through the Azure Firewall residing in the Hub Virtual Network and houses the Azure Bastion host for secure remote access into the network."
                  }
                },
                {
                  "name": "hubSubscriptionId",
                  "label": "Hub Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Hub network, firewall, and remote access resources.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').armApiControls.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "identitySection",
              "label": "Identity",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "identitySectionTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "The Identity spoke can be used to house Active Directory and other AuthN and AuthZ solutions."
                  }
                },
                {
                  "name": "identitySubscriptionId",
                  "label": "Identity Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Identity network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').armApiControls.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "operationsSection",
              "label": "Operations",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "operationsSectionTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "The Operations spoke can be used for operational tasks like logging and administration of workloads."
                  }
                },
                {
                  "name": "operationsSubscriptionId",
                  "label": "Operations Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Operations network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').armApiControls.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "sharedServicesSection",
              "label": "Shared Services",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "sharedServicesSectionTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "The Shared Services spoke can be used to host services that are used by multiple workloads like source control and container registries."
                  }
                },
                {
                  "name": "sharedServicesSubscriptionId",
                  "label": "Shared Services Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Shared Services network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').armApiControls.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "locationSection",
              "label": "Location",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "infoBoxLocation",
                  "type": "Microsoft.Common.InfoBox",
                  "options": {
                    "text": "Since not all service features are available in all regions, Mission Landing Zone is available in a subset of regions.",
                    "style": "Info"
                  }
                },
                {
                  "name": "location",
                  "label": "Location",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Location for your Mission Landing Zone.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(filter(steps('basics').armApiControls.locationsApi.value,(item) => contains(split('eastus,eastus2,southcentralus,westus,westus2,usgovvirginia,usgovarizona,ussec,usnat', ','), item.name)),(item) => parse(concat('{\"label\":\"', item.regionalDisplayName, '\",\"value\":\"', item.name, '\"}')))]",
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "namingSection",
              "label": "Mission Landing Zone Name",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "resourcePrefix",
                  "label": "Resource Naming Prefix",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "",
                  "toolTip": "Specify a prefix (min 1 and max 10 lowercase characters and numbers) to prepend to all resources.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[a-z0-9]{1,10}$",
                        "message": "The prefix must be between 1-10 lowercase characters and numbers."
                      }
                    ]
                  }
                },
                {
                  "name": "resourceSuffix",
                  "label": "Resource Naming Suffix",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "dev",
                  "toolTip": "Select a resource naming suffix to append to all resources.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "dev",
                        "description": "Select if you want to append 'dev' to your resources.",
                        "value": "dev"
                      },
                      {
                        "label": "test",
                        "description": "Select if you want to append 'test' to your resources.",
                        "value": "test"
                      },
                      {
                        "label": "prod",
                        "description": "Select if you want to append 'prod' to your resources.",
                        "value": "prod"
                      }
                    ],
                    "required": true
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "networking",
          "label": "Networking",
          "elements": [
            {
              "name": "networkDescriptionTextBlock",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "Mission Landing Zone deploys virtual networks configured for SCCA compliance."
              }
            },
            {
              "name": "dodNeedsDescriptionTextBlock",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "SCCA guidance and architectures are specific to DoD customers, but they also help civilian customers comply with Trusted Internet Connections (TIC) guidance and help commercial customers that want to implement a secure DMZ to protect their Azure environments.",
                "link": {
                  "label": "Learn more",
                  "uri": "https://docs.microsoft.com/en-us/azure/azure-government/compliance/secure-azure-computing-architecture"
                }
              }
            },
            {
              "name": "infoBoxVirtualNetworkOverlap",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Make sure that the address spaces do not overlap with each other for the Hub, Identity, Operations, or Shared Services networks.",
                "style": "Info"
              }
            },
            {
              "name": "hubVirtualNetwork",
              "label": "Hub Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Hub Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.0/24",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Hub Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.128/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Hub Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "firewallClientSubnetAddressCidrRange",
                  "label": "Firewall Client Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.64/26",
                  "toolTip": "Specify a CIDR range for the Azure Firewall Client subnet within the Hub Virtual Network range. It must be of size /26 or larger.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,26]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "firewallManagementSubnetAddressCidrRange",
                  "label": "Firewall Management Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.0/26",
                  "toolTip": "Specify a CIDR range for the Azure Firewall Management subnet within the Hub Virtual Network range. It must be of size /26 or larger.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,26]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "identityVirtualNetwork",
              "label": "Identity Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Identity Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.110.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,26].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,26]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Identity Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.110.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Identity Virtual Network range [26,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[6-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [26,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "operationsVirtualNetwork",
              "label": "Operations Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Operations Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.115.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,26].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,26]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Operations Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.115.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Operations Virtual Network range [26,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[6-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [26,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "sharedServicesVirtualNetwork",
              "label": "Shared Services Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Shared Services Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.120.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,26].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,26]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Shared Services Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.120.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Shared Services Virtual Network range [26,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[6-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [26,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "compliance",
          "label": "Compliance",
          "elements": [
            {
              "name": "complianceDescriptionTextBlock",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "Mission Landing Zone comes bundled with built-in policies that can be applied to the resources it deploys and the ability to enable Azure Security Center for the subscriptions it is deployed into.",
                "link": {
                  "label": "Learn more",
                  "uri": "https://docs.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction"
                }
              }
            },
            {
              "name": "policySection",
              "label": "Enable Azure Policy",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "policySubsetDetailsTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Mission Landing Zone comes bundled with a relevant subset of available Azure policies."
                  }
                },
                {
                  "name": "policyOptionalTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling policies is optional, but recommended."
                  }
                },
                {
                  "name": "deployPolicy",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Create policy assignments?",
                  "toolTip": "Check here to create policy assignments for the resources created by Mission Landing Zone.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "policy",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Policy Assignment",
                  "placeholder": "",
                  "defaultValue": "NIST SP 800-53",
                  "toolTip": "DoD IL5 is only available in AzureUsGovernment and will switch to NIST if tried in AzureCloud.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "defaultDescription": "Select one of the bundled built-in policy assignments.",
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "NIST SP 800-53",
                        "description": "The US National Institute of Standards and Technology (NIST) publishes a catalog of security and privacy controls, Special Publication (SP) 800-53, for all federal information systems in the United States (except those related to national security).",
                        "value": "NIST"
                      },
                      {
                        "label": "DoD IL5",
                        "description": "The Defense Information Systems Agency (DISA) is an agency of the US Department of Defense (DoD) that is responsible for developing and maintaining the DoD Cloud Computing Security Requirements Guide (SRG). These policies are only available for AzureUsGovernment and will switch to NIST if tried in AzureCloud.",
                        "value": "IL5"
                      },
                      {
                        "label": "CMMC",
                        "description": "The Cybersecurity Maturity Model Certification (CMMC) is a new framework developed by the US Department of Defense (DoD) that requires formal third-party audits of defense industrial base (DIB) contractor cybersecurity practices.",
                        "value": "CMMC"
                      }
                    ]
                  },
                  "visible": "[steps('compliance').policySection.deployPolicy]"
                }
              ]
            },
            {
              "name": "securityCenterSection",
              "label": "Enable Azure Security Center",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "securityCenterSubscriptionDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Mission Landing Zone can activate Azure Security Center for each subscription it is deployed into."
                  }
                },
                {
                  "name": "securityCenterOptionalDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling Azure Security Center is optional, but recommended."
                  }
                },
                {
                  "name": "deployASC",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Enable Azure Security Center?",
                  "toolTip": "Check here to enable Azure Security Center for the subscriptions used to deploy Mission Landing Zone.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "emailSecurityContact",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Security Contact E-Mail Address",
                  "defaultValue": "",
                  "toolTip": "Provide an e-mail address as a security contact for Azure Security Center",
                  "placeholder": "johndoe@contoso.com",
                  "multiLine": false,
                  "constraints": {
                    "required": "[steps('compliance').securityCenterSection.deployASC]",
                    "validations": [
                      {
                        "regex": "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
                        "message": "Provide a valid e-mail address"
                      }
                    ]
                  },
                  "visible": "[steps('compliance').securityCenterSection.deployASC]"
                }
              ]
            },
            {
              "name": "sentinelSection",
              "label": "Enable Azure Sentinel",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "sentinelSectionDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Mission Landing Zone can activate Azure Sentinel for the Log Analytics Workspace it deploys."
                  }
                },
                {
                  "name": "sentinelOptionalDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling Azure Sentinel is optional, but recommended."
                  }
                },
                {
                  "name": "deploySentinel",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Enable Azure Sentinel?",
                  "toolTip": "Check here to enable Azure Sentinel Center for the Log Analytics Workspace Mission Landing Zone deploys.",
                  "constraints": {
                    "required": false
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "remoteAccess",
          "label": "Remote Access",
          "elements": [
            {
              "name": "remoteAccessDescriptionTextBlock",
              "type": "Microsoft.Common.TextBlock",
              "options": {
                "text": "Mission Landing Zone can provision a Windows and a Linux virtual machine to securely access the network remotely using Azure Bastion hosts.",
                "link": {
                  "label": "Learn more",
                  "uri": "https://docs.microsoft.com/en-us/azure/bastion/bastion-overview"
                }
              }
            },
            {
              "name": "remoteAccessSection",
              "label": "Enable Remote Access",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "remoteAccessOptionalTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling remote access is optional, but recommended."
                  }
                },
                {
                  "name": "deployRemoteAccess",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Remotely access the network?",
                  "toolTip": "Check here to create an Azure Bastion Host and virtual machines to remotely access the network.",
                  "constraints": {
                    "required": false
                  }
                }
              ]
            },
            {
              "name": "azureBastionSubnetSection",
              "label": "Azure Bastion Subnet",
              "type": "Microsoft.Common.Section",
              "visible": "[steps('remoteAccess').remoteAccessSection.deployRemoteAccess]",
              "elements": [
                {
                  "name": "remoteAccessSubnetTextBlock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Specify a CIDR range for the Azure Bastion Host subnet within the Hub Virtual Network range. It must be of size /26 or larger."
                  }
                },
                {
                  "name": "bastionSubnetAddressCidrRange",
                  "label": "Azure Bastion Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "visible": "[steps('remoteAccess').remoteAccessSection.deployRemoteAccess]",
                  "defaultValue": "10.0.100.192/26",
                  "toolTip": "[concat('Specify a CIDR range for the Azure Bastion Host subnet within the Hub Virtual Network range: ', steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '. It must be of size /26 or larger.')]",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,26]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('remoteAccess').azureBastionSubnetSection.bastionSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "[concat('First octet not within the Hub virtual network CIDR range: ', steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange)]"
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('remoteAccess').azureBastionSubnetSection.bastionSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "[concat('Second octet not within the Hub virtual network CIDR range: ',  steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange)]"
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('remoteAccess').azureBastionSubnetSection.bastionSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "[concat('Third octet not within the Hub virtual network CIDR range: ', steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange)]"
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('remoteAccess').azureBastionSubnetSection.bastionSubnetAddressCidrRange, '/')))]",
                        "message": "[concat('Subnet mask not within the Hub virtual network CIDR range: ', steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange)]"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windowsVmSection",
              "label": "Windows Virtual Machine",
              "type": "Microsoft.Common.Section",
              "visible": "[steps('remoteAccess').remoteAccessSection.deployRemoteAccess]",
              "elements": [
                {
                  "name": "windowsVmDescriptionTextblock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Provide an administrator username and password for the Windows virtual machine."
                  }
                },
                {
                  "name": "windowsVmAdminUsername",
                  "type": "Microsoft.Compute.UserNameTextBox",
                  "label": "Username",
                  "defaultValue": "",
                  "toolTip": "",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z]{1,30}$",
                    "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
                  },
                  "osPlatform": "Windows",
                  "visible": true
                },
                {
                  "name": "windowsVmAdminPassword",
                  "label": {
                    "password": "Password",
                    "confirmPassword": "Confirm password"
                  },
                  "type": "Microsoft.Compute.CredentialsCombo",
                  "defaultValue": "",
                  "toolTip": {
                    "password": "Specify an administrator password for the Windows virtual machine used to remote into the network."
                  },
                  "constraints": {
                    "required": true
                  },
                  "options": {
                    "hideConfirmation": false
                  },
                  "osPlatform": "Windows"
                }
              ]
            },
            {
              "name": "linuxVmSection",
              "label": "Linux Virtual Machine",
              "type": "Microsoft.Common.Section",
              "visible": "[steps('remoteAccess').remoteAccessSection.deployRemoteAccess]",
              "elements": [
                {
                  "name": "linuxVmDescriptionTextblock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Provide an administrator username and password (or SSH public key) for the Linux virtual machine."
                  }
                },
                {
                  "name": "linuxVmAdminUsername",
                  "type": "Microsoft.Compute.UserNameTextBox",
                  "label": "Username",
                  "defaultValue": "",
                  "toolTip": "",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z]{1,30}$",
                    "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
                  },
                  "osPlatform": "Linux",
                  "visible": true
                },
                {
                  "name": "linuxVmAdminPasswordOrKey",
                  "type": "Microsoft.Compute.CredentialsCombo",
                  "label": {
                    "authenticationType": "Authentication type",
                    "password": "Password",
                    "confirmPassword": "Confirm password",
                    "sshPublicKey": "SSH public key"
                  },
                  "toolTip": {
                    "authenticationType": "Select an authentication type",
                    "password": "Specify an administrator password for the Linux virtual machine used to remote into the network.",
                    "sshPublicKey": "Paste in an SSH Public Key for the Linux virtual machine used to remote into the network."
                  },
                  "constraints": {
                    "required": true
                  },
                  "options": {
                    "hideConfirmation": false,
                    "hidePassword": false
                  },
                  "osPlatform": "Linux"
                }
              ]
            }
          ]
        },
        {
          "name": "tags",
          "label": "Tags",
          "subLabel": {
            "preValidation": "Provide tags that will be used for all resources.",
            "postValidation": "Done"
          },
          "bladeTitle": "Tags",
          "bladeSubtitle": "Tags",
          "elements": [
            {
              "name": "tagsByResource",
              "label": "Tags by Resource",
              "type": "Microsoft.Common.TagsByResource",
              "visible": true,
              "resources": [
                "MissionLandingZone"
              ]
            }
          ]
        }
      ]
    },
    "outputs": {
      "kind": "Subscription",
      "location": "[steps('basics').locationSection.location]",
      "subscriptionId": "[steps('basics').hubSection.hubSubscriptionId]",
      "parameters": {
        "resourcePrefix": "[steps('basics').namingSection.resourcePrefix]",
        "resourceSuffix": "[steps('basics').namingSection.resourceSuffix]",
        "hubSubscriptionId": "[replace(steps('basics').hubSection.hubSubscriptionId, '/subscriptions/', '')]",
        "identitySubscriptionId": "[replace(steps('basics').identitySection.identitySubscriptionId, '/subscriptions/', '')]",
        "operationsSubscriptionId": "[replace(steps('basics').operationsSection.operationsSubscriptionId, '/subscriptions/', '')]",
        "sharedServicesSubscriptionId": "[replace(steps('basics').sharedServicesSection.sharedServicesSubscriptionId, '/subscriptions/', '')]",
        "location": "[steps('basics').locationSection.location]",
        "tags": "[if(not(contains(steps('tags').tagsByResource, 'MissionLandingZone')), parse('{}'), first(map(parse(concat('[', string(steps('tags').tagsByResource), ']')), (item) => item.MissionLandingZone)))]",
        "hubVirtualNetworkAddressPrefix": "[steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange]",
        "hubSubnetAddressPrefix": "[steps('networking').hubVirtualNetwork.subnetAddressCidrRange]",
        "firewallClientSubnetAddressPrefix": "[steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange]",
        "firewallManagementSubnetAddressPrefix": "[steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange]",
        "identityVirtualNetworkAddressPrefix": "[steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange]",
        "identitySubnetAddressPrefix": "[steps('networking').identityVirtualNetwork.subnetAddressCidrRange]",
        "operationsVirtualNetworkAddressPrefix": "[steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange]",
        "operationsSubnetAddressPrefix": "[steps('networking').operationsVirtualNetwork.subnetAddressCidrRange]",
        "sharedServicesVirtualNetworkAddressPrefix": "[steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange]",
        "sharedServicesSubnetAddressPrefix": "[steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange]",
        "deploySentinel": "[steps('compliance').sentinelSection.deploySentinel]",
        "deployPolicy": "[steps('compliance').policySection.deployPolicy]",
        "policy": "[steps('compliance').policySection.policy]",
        "deployASC": "[steps('compliance').securityCenterSection.deployASC]",
        "emailSecurityContact": "[steps('compliance').securityCenterSection.emailSecurityContact]",
        "deployRemoteAccess": "[steps('remoteAccess').remoteAccessSection.deployRemoteAccess]",
        "bastionHostSubnetAddressPrefix": "[steps('remoteAccess').azureBastionSubnetSection.bastionSubnetAddressCidrRange]",
        "windowsVmAdminUsername": "[steps('remoteAccess').windowsVmSection.windowsVmAdminUsername]",
        "windowsVmAdminPassword": "[steps('remoteAccess').windowsVmSection.windowsVmAdminPassword.password]",
        "linuxVmAdminUsername": "[steps('remoteAccess').linuxVmSection.linuxVmAdminUsername]",
        "linuxVmAuthenticationType": "[steps('remoteAccess').linuxVmSection.linuxVmAdminPasswordOrKey.authenticationType]",
        "linuxVmAdminPasswordOrKey": "[if(equals(steps('remoteAccess').linuxVmSection.linuxVmAdminPasswordOrKey.authenticationType, 'password'), steps('remoteAccess').linuxVmSection.linuxVmAdminPasswordOrKey.password, steps('remoteAccess').linuxVmSection.linuxVmAdminPasswordOrKey.sshPublicKey)]"
      }
    }
  }
}