{
  "$schema": "<relative path to createFormUI.schema.json>",
  "view": {
    "kind": "Form",
    "properties": {
      "title": "Mission Landing Zone",
      "steps": [
        {
          "name": "basics",
          "label": "Basics",
          "elements": [
            {
              "name": "infoBoxMissionLandingZone",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Mission Landing Zone is a prescriptive reference architecture for data with reference implementation provided by Microsoft. Visit http://aka.ms/missionlz for more details about the solution pattern.",
                "style": "Info",
                "uri": "https://aka.ms/missionlz"
              }
            },
            {
              "name": "deploymentDetails",
              "label": "Deployment Details",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "subscriptionApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "subscriptions?api-version=2020-01-01"
                  }
                },
                {
                  "name": "locationsApi",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "GET",
                    "path": "locations?api-version=2019-11-01"
                  }
                },
                {
                  "name": "deploymentDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Select the subscription(s) and location for your Mission Landing Zone deployment."
                  }
                },
                {
                  "name": "hubSubscriptionId",
                  "label": "Hub Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Hub network, firewall, and remote access resources.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').deploymentDetails.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "identitySubscriptionId",
                  "label": "Identity Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Identity network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').deploymentDetails.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "operationsSubscriptionId",
                  "label": "Operations Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Operations network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').deploymentDetails.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "sharedServicesSubscriptionId",
                  "label": "Shared Services Subscription",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Subscription for your Mission Landing Zone Shared Services network.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(steps('basics').deploymentDetails.subscriptionApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\",\"description\":\"', 'ID: ', item.subscriptionId, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "infoBoxLocation",
                  "type": "Microsoft.Common.InfoBox",
                  "options": {
                    "text": "Since not all service features are available in all regions, Mission Landing Zone is available in a subset of regions.",
                    "style": "Info"
                  }
                },
                {
                  "name": "locationName",
                  "label": "Location",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "",
                  "toolTip": "Select the Location for your Mission Landing Zone.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": "[map(filter(steps('basics').deploymentDetails.locationsApi.value,(item) => contains(split('eastus,eastus2,southcentralus,westus,westus2,usgovvirginia,usgovarizona,ussec,usnat', ','), item.name)),(item) => parse(concat('{\"label\":\"', item.regionalDisplayName, '\",\"value\":\"', item.name, '\"}')))]",
                    "required": true
                  }
                },
                {
                  "name": "environment",
                  "label": "Environment",
                  "type": "Microsoft.Common.DropDown",
                  "defaultValue": "Development",
                  "toolTip": "Select the environment for the deployment.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items...",
                  "multiLine": true,
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "Development",
                        "description": "Select if you want to deploy a development environment.",
                        "value": "dev"
                      },
                      {
                        "label": "Test",
                        "description": "Select if you want to deploy a test environment.",
                        "value": "tst"
                      },
                      {
                        "label": "Production",
                        "description": "Select if you want to deploy a production environment.",
                        "value": "prd"
                      }
                    ],
                    "required": true
                  }
                }
              ]
            },
            {
              "name": "missionLandingZoneName",
              "label": "Mission Landing Zone Name",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "missionLandingZonePrefix",
                  "label": "Resource Naming Prefix",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "",
                  "toolTip": "Specify a prefix (min 1 and max 10 lowercase characters and numbers) to prepend to all resources.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^[a-z0-9]{1,10}$",
                        "message": "The prefix must be between 1-10 lowercase characters and numbers."
                      },
                      {
                        "isValid": "[not(equals(steps('basics').missionLandingZoneName.storageAccountNameApi001.nameAvailable, false))]",
                        "message": "Prefix currently unavailable. Please choose a different one."
                      },
                      {
                        "isValid": "[not(equals(steps('basics').missionLandingZoneName.storageAccountNameApi002.nameAvailable, false))]",
                        "message": "Prefix currently unavailable. Please choose a different one."
                      },
                      {
                        "isValid": "[not(equals(steps('basics').missionLandingZoneName.storageAccountNameApi003.nameAvailable, false))]",
                        "message": "Prefix currently unavailable. Please choose a different one."
                      },
                      {
                        "isValid": "[not(equals(steps('basics').missionLandingZoneName.storageAccountNameApi004.nameAvailable, false))]",
                        "message": "Prefix currently unavailable. Please choose a different one."
                      }
                    ]
                  }
                },
                {
                  "name": "storageAccountNameApi001",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "POST",
                    "path": "[concat(steps('basics').deploymentDetails.hubSubscriptionId, '/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-04-01')]",
                    "body": {
                      "name": "[concat('stg', steps('basics').missionLandingZoneName.missionLandingZonePrefix, steps('basics').environment, 'hub')]",
                      "type": "Microsoft.Storage/storageAccounts"
                    }
                  }
                },
                {
                  "name": "storageAccountNameApi002",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "POST",
                    "path": "[concat(steps('basics').deploymentDetails.identitySubscriptionId, '/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-04-01')]",
                    "body": {
                      "name": "[concat('stg', steps('basics').missionLandingZoneName.missionLandingZonePrefix, steps('basics').environment, 'id')]",
                      "type": "Microsoft.Storage/storageAccounts"
                    }
                  }
                },
                {
                  "name": "storageAccountNameApi003",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "POST",
                    "path": "[concat(steps('basics').deploymentDetails.operationsSubscriptionId, '/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-04-01')]",
                    "body": {
                      "name": "[concat('stg', steps('basics').missionLandingZoneName.missionLandingZonePrefix, steps('basics').environment, 'op')]",
                      "type": "Microsoft.Storage/storageAccounts"
                    }
                  }
                },
                {
                  "name": "storageAccountNameApi004",
                  "type": "Microsoft.Solutions.ArmApiControl",
                  "request": {
                    "method": "POST",
                    "path": "[concat(steps('basics').deploymentDetails.sharedServicesSubscriptionId, '/providers/Microsoft.Storage/checkNameAvailability?api-version=2021-04-01')]",
                    "body": {
                      "name": "[concat('stg', steps('basics').missionLandingZoneName.missionLandingZonePrefix, steps('basics').environment, 'svcs')]",
                      "type": "Microsoft.Storage/storageAccounts"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "compliance",
          "label": "Compliance",
          "elements": [
            {
              "name": "complianceDescriptionInfoBox",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Mission Landing Zone comes bundled with built-in policies that can be applied to the resources it deploys and the ability to enable Azure Security Center: https://docs.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction",
                "style": "Info",
                "uri": "https://docs.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction"
              }
            },
            {
              "name": "policy",
              "label": "Policy",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "deploymentDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling policies is optional, but recommended. Mission Landing Zone comes bundled with some built-in policies."
                  }
                },
                {
                  "name": "deployPolicy",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Create policy assignments?",
                  "toolTip": "Check here to create policy assignments for the resources created by Mission Landing Zone.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "policy",
                  "type": "Microsoft.Common.DropDown",
                  "label": "Policy Assignment",
                  "placeholder": "",
                  "defaultValue": "NIST SP 800-53",
                  "toolTip": "DoD IL5 is only available in AzureUsGovernment and will switch to NIST if tried in AzureCloud.",
                  "multiselect": false,
                  "selectAll": false,
                  "filter": true,
                  "filterPlaceholder": "Filter items ...",
                  "multiLine": true,
                  "defaultDescription": "Select one of the bundled built-in policy assignments.",
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "NIST SP 800-53",
                        "description": "The US National Institute of Standards and Technology (NIST) publishes a catalog of security and privacy controls, Special Publication (SP) 800-53, for all federal information systems in the United States (except those related to national security).",
                        "value": "NIST"
                      },
                      {
                        "label": "DoD IL5",
                        "description": "The Defense Information Systems Agency (DISA) is an agency of the US Department of Defense (DoD) that is responsible for developing and maintaining the DoD Cloud Computing Security Requirements Guide (SRG). These policies are only available for AzureUsGovernment and will switch to NIST if tried in AzureCloud.",
                        "value": "IL5"
                      },
                      {
                        "label": "CMMC",
                        "description": "The Cybersecurity Maturity Model Certification (CMMC) is a new framework developed by the US Department of Defense (DoD) that requires formal third-party audits of defense industrial base (DIB) contractor cybersecurity practices.",
                        "value": "CMMC"
                      }
                    ]
                  },
                  "visible": "[steps('compliance').policy.deployPolicy]"
                }
              ]
            },
            {
              "name": "securityCenter",
              "label": "Security Center",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "deploymentDetailsText",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Enabling Azure Security Center is optional, but recommended. Mission Landing Zone can enable Azure Security Center for the subscriptions it is deploying into."
                  }
                },
                {
                  "name": "deployASC",
                  "type": "Microsoft.Common.CheckBox",
                  "label": "Enable Azure Security Center?",
                  "toolTip": "Check here to enable Azure Security Center for the subscriptions used to deploy Mission Landing Zone.",
                  "constraints": {
                    "required": false
                  }
                },
                {
                  "name": "emailSecurityContact",
                  "type": "Microsoft.Common.TextBox",
                  "label": "Security Contact E-Mail Address",
                  "defaultValue": "",
                  "toolTip": "Provide an e-mail address as a security contact for Azure Security Center",
                  "placeholder": "johndoe@contoso.com",
                  "multiLine": false,
                  "constraints": {
                    "required": "[steps('compliance').securityCenter.deployASC]",
                    "validations": [
                      {
                        "regex": "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
                        "message": "Provide a valid e-mail address"
                      }
                    ]
                  },
                  "visible": "[steps('compliance').securityCenter.deployASC]"
                }
              ]
            }
          ]
        },
        {
          "name": "networking",
          "label": "Networking",
          "elements": [
            {
              "name": "infoBoxVirtualNetworkOverlap",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Make sure that the address spaces do not overlap with each other for the Hub, Identity, Operations, or Shared Services networks.",
                "style": "Info"
              }
            },
            {
              "name": "hubVirtualNetwork",
              "label": "Hub Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Hub Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.0/24",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Hub Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.128/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Hub Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "firewallClientSubnetAddressCidrRange",
                  "label": "Firewall Client Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.64/26",
                  "toolTip": "Specify a CIDR range for the Azure Firewall Client subnet within the Hub Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.firewallClientSubnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "firewallManagementSubnetAddressCidrRange",
                  "label": "Firewall Management Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.0/26",
                  "toolTip": "Specify a CIDR range for the Azure Firewall Management subnet within the Hub Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.firewallManagementSubnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                },
                {
                  "name": "bastionSubnetAddressCidrRange",
                  "label": "Azure Bastion Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.100.128/26",
                  "toolTip": "Specify a CIDR range for the Azure Bastion Host subnet within the Hub Virtual Network range. It must be of size /26 or larger.",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-6]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,26]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').hubVirtualNetwork.bastionSubnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').hubVirtualNetwork.bastionSubnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').hubVirtualNetwork.bastionSubnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').hubVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').hubVirtualNetwork.bastionSubnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "identityVirtualNetwork",
              "label": "Identity Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Identity Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.110.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Identity Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.110.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Identity Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').identityVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').identityVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "operationsVirtualNetwork",
              "label": "Operations Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Operations Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.115.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Operations Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.115.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Operations Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').operationsVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').operationsVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "sharedServicesVirtualNetwork",
              "label": "Shared Services Virtual Network",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "virtualNetworkAddressCidrRange",
                  "label": "Shared Services Virtual Network CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.120.0/26",
                  "toolTip": "Specify an address CIDR range within the range [10,24].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(1[0-9]|2[0-4]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [10,24]."
                      }
                    ]
                  }
                },
                {
                  "name": "subnetAddressCidrRange",
                  "label": "Shared Services Subnet CIDR Range",
                  "type": "Microsoft.Common.TextBox",
                  "defaultValue": "10.0.120.0/27",
                  "toolTip": "Specify a CIDR range for the default subnet within the Shared Services Virtual Network range [24,28].",
                  "constraints": {
                    "required": true,
                    "validations": [
                      {
                        "regex": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\/(2[4-8]))$",
                        "message": "Invalid CIDR range. The address prefix must be in the range [24,28]."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 8), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 1)), last(take(split(first(split(steps('networking').virtualNetworkConfiguration.subnetAddressCidrRange, '/')), '.'), 1))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (first octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 16), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 2)), last(take(split(first(split(steps('networking').virtualNetworkConfiguration.subnetAddressCidrRange, '/')), '.'), 2))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (second octet)."
                      },
                      {
                        "isValid": "[if(greaterOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), 24), equals(last(take(split(first(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), '.'), 3)), last(take(split(first(split(steps('networking').virtualNetworkConfiguration.subnetAddressCidrRange, '/')), '.'), 3))), true)]",
                        "message": "CIDR range not within virtual network CIDR range (third octet)."
                      },
                      {
                        "isValid": "[lessOrEquals(last(split(steps('networking').sharedServicesVirtualNetwork.virtualNetworkAddressCidrRange, '/')), last(split(steps('networking').sharedServicesVirtualNetwork.subnetAddressCidrRange, '/')))]",
                        "message": "CIDR range not within virtual network CIDR range (subnet mask)."
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "remoteAccess",
          "label": "Remote Access",
          "elements": [
            {
              "name": "remoteAccessDescriptionInfoBox",
              "type": "Microsoft.Common.InfoBox",
              "options": {
                "text": "Mission Landing Zone provisions a Windows and a Linux virtual machine to remotely access the network using Azure Bastion hosts. For more information on how to use Azure Bastion check out: https://docs.microsoft.com/en-us/azure/bastion/bastion-overview",
                "style": "Info",
                "uri": "https://docs.microsoft.com/en-us/azure/bastion/bastion-overview"
              }
            },
            {
              "name": "windowsVmConfiguration",
              "label": "Windows Virtual Machine",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "windowsVmDescriptionTextblock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Provide an administrator username and password for the Windows virtual machine."
                  }
                },
                {
                  "name": "windowsVmAdminUsername",
                  "type": "Microsoft.Compute.UserNameTextBox",
                  "label": "Username",
                  "defaultValue": "",
                  "toolTip": "",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z]{1,30}$",
                    "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
                  },
                  "osPlatform": "Windows",
                  "visible": true
                },
                {
                  "name": "windowsVmAdminPassword",
                  "label": {
                    "password": "Password",
                    "confirmPassword": "Confirm password"
                  },
                  "type": "Microsoft.Compute.CredentialsCombo",
                  "defaultValue": "",
                  "toolTip": {
                    "password": "Specify an administrator password for the Windows virtual machine used to remote into the network."
                  },
                  "constraints": {
                    "required": true,
                    "customPasswordRegex": "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{12,128}$",
                    "customValidationMessage": "The password must be alphanumeric, contain at least 12 characters, and have at least 1 letter, 1 number and one special character."
                  },
                  "options": {
                    "hideConfirmation": false
                  },
                  "osPlatform": "Windows"
                }
              ]
            },
            {
              "name": "linuxVmConfiguration",
              "label": "Linux Virtual Machine",
              "type": "Microsoft.Common.Section",
              "elements": [
                {
                  "name": "windowsVmDescriptionTextblock",
                  "type": "Microsoft.Common.TextBlock",
                  "options": {
                    "text": "Provide an administrator username and password (or SSH public key) for the Linux virtual machine."
                  }
                },
                {
                  "name": "linuxVmAdminUsername",
                  "type": "Microsoft.Compute.UserNameTextBox",
                  "label": "Username",
                  "defaultValue": "",
                  "toolTip": "",
                  "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z]{1,30}$",
                    "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-30 characters long."
                  },
                  "osPlatform": "Linux",
                  "visible": true
                },
                {
                  "name": "linuxVmAdminPasswordOrKey",
                  "type": "Microsoft.Compute.CredentialsCombo",
                  "label": {
                    "authenticationType": "Authentication type",
                    "password": "Password",
                    "confirmPassword": "Confirm password",
                    "sshPublicKey": "SSH public key"
                  },
                  "toolTip": {
                    "authenticationType": "Select an authentication type",
                    "password": "Specify an administrator password for the Linux virtual machine used to remote into the network.",
                    "sshPublicKey": "Paste in an SSH Public Key for the Linux virtual machine used to remote into the network."
                  },
                  "constraints": {
                    "required": true,
                    "customPasswordRegex": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{12,}$",
                    "customValidationMessage": "The password must be alphanumeric, contain at least 12 characters, and have at least 1 letter and 1 number."
                  },
                  "options": {
                    "hideConfirmation": false,
                    "hidePassword": false
                  },
                  "osPlatform": "Linux"
                }
              ]
            }
          ]
        },
        {
          "name": "tags",
          "label": "Tags",
          "subLabel": {
            "preValidation": "Provide tags that will be used for all resources.",
            "postValidation": "Done"
          },
          "bladeTitle": "Tags",
          "bladeSubtitle": "Tags",
          "elements": [
            {
              "name": "tagsByResource",
              "label": "Tags by Resource",
              "type": "Microsoft.Common.TagsByResource",
              "visible": true,
              "resources": [
                "MissionLandingZone"
              ]
            }
          ]
        }
      ],
      "outputs": {}
    }
  }
}